<?xml version="1.0" encoding="UTF-8" ?>
<xs:schema 
   attributeFormDefault="unqualified"
   elementFormDefault="qualified"
   xmlns:xs="http://www.w3.org/2001/XMLSchema"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:erds="http://www.erds.com"
   xsi:schemaLocation="http://www.erds.com ../../nsdef/erdsNameSpace.xsd"
>
   <xs:complexType name="WorkerReference">
   	<xs:annotation>
   		<xs:documentation>
   			Worker Reference. This is the root for Worker Entity. A worker can be an Employee or a Contingent Worker or a Person of Interest. Within dbPeople+, these three categories are explicitly defined however Workday does not have any concept of Person of Interest and hence such workers are defined as Contingent Workers. However while preparing data to be stored through LDM, such relationship is derived and eRDS continues to provide these three classifications of Worker types.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="WorkerIdentifier" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Worker Identifier. This is the unique identifier for Employee or Contingent Worker. This identifier is mastered at the source (HCM platform i.e. dbPeople+ or Workday now); and becomes the id through which a worker is identified across the organization.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="EffectiveDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Effective Date. The date the entry of or changes to the Worker data become effective.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ExplicitPopulationInclusionCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Explicit Population Inclusion Code. This code is used by the DTR process to control the flow of data for certain specific segments of workers.
                  
                  Following are the possible values for this code representing different record sets:
                  1) DEFAULT - Represents the DB workers from PeopleSoft/Workday. This set will not include the ministamm worker records where Postbank employees were also onboarded to Workday to meet certain requirements
                  2) POSTBANK - Value for records coming from SAP HRise representing Postbank workers. Again, this set will not include records for DB workers who were onboarded on SAP HRise to meet certain requirements
                  3) PB_SECONDARY_WORKDAY - Secondary skeleton records (also named Ministamm) records in WORKDAY for a selected group of people from former Postbank entities (also named yellow), in order to cope for situations listed below
                      a) Manager of mixed teams, so line manager with Postbank based contracts managing team members from Deutsche Bank
                      b) Senior manager from Postbank subsidiary due to payroll specific restrictions
                      c) Regular employee with YELLOW contract working in BLUE location
                      d) Postbank based HR Advisor servicing BLUE employees
                      e) Postbank based users with specific access requirements  
                  4) PB_SECONDARY_HRISE - Secondary skeleton records in Postbank SAP HRISE for a selected group of people from non-Postbank entities (also named blue), in order to cope for situations listed below.
                      a) Manager of mixed teams, so line manager with Deutsche Bank based contracts managing team members from former Postbank entities
                  5) PB_DORMANT - There is a population of workers who have an employment contract with DB but are lend to an external company and not actively working for Deutsche Bank and having no access to Deutsche Bank premises or systems. As soon as their engagement with the external company ends, the employment record will become work relevant again. 
                  In some cases, the external company using these workers to provide service for Deutsche Bank. As HR system does not allow to add a contingent worker contract to a regular employee, these workers need to be onboarded twice in workday. The active CWR record will not be affected by this change.
                  6) PAGATEQ - PAGATEQ is for Postbank workers belonging to Legal Entity 'B901'.Pagateq (formerly known as VÖB ZVD) is a subsidiary of Deutsche Bank onbarded to our HR platform as part of the Postbank integration. However, Pagateq runs its own policy-framework which is not aligned with DB AGs policy-framework.
                  7) HGB POPULATION - HGB POPULATION is the code for Independent Financial Advisors (unabhängige Handelsvertreter – Mobiler Vertrieb) as per German HGB §84. Those financial advisors are not part of the Deutsche Bank workforce but are external partners selling DB products.
                  
                  The impact on DTR process is as below
                  1> By default, any consumer will only get the data where Explicit Population Inclusion Code = DEFAULT
                  2> In case, your application requires Postbank data only then DTR filter would need to be added to get data where Explicit Population Inclusion Code = POSTBANK
                  3> In case, your application needs data for Postbank as well as DB then DTR filter would need to be added to get the data where Explicit Population Inclusion Code = POSTBANK OR Explicit Population Inclusion Code = DEFAULT
                  4> In case, your application needs data for the ministamm records as well then filter would need to be modified to include the relevant values
                  
                  In short, if requirement is only to get DB worker data (excluding ministamm records) then there is no need to make any change on DTR. However if any other set is also desired or if only other set is desired then DTR filter would need to be added clearly identifying the record segments.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PBDeutscheBankWorkerIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			PBDeutscheBankWorkerIdentifier. This field stores the mini-joiner ID of Postbank workers maintained in Workday system of Deutsche bank. It is a technical debt and added to support Postbank data consumers. Once Postbank data is migrated to Workday, this field would become obsolete.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="WorkerPersonDetails" maxOccurs="1" minOccurs="0" type="WorkerPersonalDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Worker Personal Details. Captures various person level details from different perspective e.g. demographic, political affiliation, medical exam etc. There will be one record/object for each Person.
                  
                  Certain details for contingent workers e.g. date of birth etc. are considered sensitive and usually are not captured within the source itself. However in case these details are captured for contingent workers, then such would be available in a separate object called as CWR Personal Details. This is to ensure non-distribution of such data to all the consumers.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="WorkerNameDetails" maxOccurs="unbounded" minOccurs="0" type="NameDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Worker Name Details. Allows to capture the Worker Name Information. It is possible that a person is associated with multiple names. Usually this is captured with Name Type Information e.g. Legal Name, Preferred Name etc. Each type will allow to capture different component of names e.g. Prefix, Suffix, First Name, Last Name etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RelatedPersonDetails" maxOccurs="unbounded" minOccurs="0" type="RelatedPersonReference">
         	<xs:annotation>
         		<xs:documentation>
         			Related Person Details. This entity holds the details for related persons for a worker as per HR business processes. A related person will have a relationship with the worker and will be defined as a Dependent and/or a Beneficiary and/or an Emergency Contact.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="WorkerAddressDetails" maxOccurs="unbounded" minOccurs="0" type="AddressDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Holds Worker Address Details. One worker can hold one or more than one address details.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="WorkerPhoneContactDetails" maxOccurs="unbounded" minOccurs="0" type="PhoneContactDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Holds Worker Phone Contact Details. One worker can have zero, one or many phone details.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="WorkerEmailContactDetails" maxOccurs="unbounded" minOccurs="0" type="EmailContactDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Holds Worker Email Contact Details. One worker can hold zero, one or more than one email details.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="WorkerInstantMessengerContactDetails" maxOccurs="unbounded" minOccurs="0" type="InstantMessengerContactDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Holds Worker Instant Messenger Contact Details. One worker can have zero, one or more than one IM details.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="WorkerWebAddressContactDetails" maxOccurs="unbounded" minOccurs="0" type="WebAddressContactDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Holds Worker Web Address Contact Details. One worker can have zero, one or more than one web address details.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="WorkerMilitaryServiceDetails" maxOccurs="unbounded" minOccurs="0" type="MilitaryServiceDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Worker Military Service Details. Holds the military service details associated with Workers.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="WorkerDisabilityDetails" maxOccurs="unbounded" minOccurs="0" type="DisabilityDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Holds Worker Disability Details. One worker can have zero, one or more than one diability details
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="WorkerIdentificationDetails" maxOccurs="unbounded" minOccurs="0" type="PersonIdentificationDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Worker Identification Details. This is about certain identification documents related with Workers. Some examples of such identification documents are National IDs, Government IDs, Visas, Passports, Driving Licenses etc.
                  There can be multiple types of identifications associated with a worker and even within a particular type, there can be again different identifications associated with a Person. E.g. National IDs might be of multiple types and all might be relevant to be captured here.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="WorkerMIFIDDetails" maxOccurs="unbounded" minOccurs="0" type="WorkerMIFIDDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Worker MiFID Details. Holds the MIFID details for a Worker. There can be multiple records available in MIFID Details entity for a Worker depending upon his/her country of citizenship, MIFID ID type and MIFID ID.
                  Based on the predefined rules for each country to which a Worker belongs and in case of multiple records of a Worker, one of the MIFID IDs is treated as the primary.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="WorkerBadgeDetails" maxOccurs="unbounded" minOccurs="0" type="WorkerBadgeDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Worker Badge Details. This structure maintains the various badge details available for Worker.
                  
                  This structure is a technical debt. The structure was added to support a particular consumer and mimics the structure coming from PeopleSoft as there was no clarity available in terms of how this information will be handled. The table in PeopleSoft is being used for maintaing various details including Payroll IDs as well; hence new structure as per the Workday configuration will be prepared and the data will be populated there. This structure will cease to exist once the consumers have been migrated to the new structure.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="WorkerEmploymentSummary" maxOccurs="1" minOccurs="0" type="WorkerEmploymentSummary">
         	<xs:annotation>
         		<xs:documentation>
         			Worker Employment Summary provides a quick summary on different employment perspectives for the Worker. This represents summary of worker's relationship with the organization and hence there will be one record for each Worker here. This is the place where holistic view of the employment will be captured and details pertaining to the overall relationship with organization for Worker will be maintained.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="JobDetails" maxOccurs="unbounded" minOccurs="0" type="JobDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Job Details. This keeps the details on different assignments/jobs this worker is performing/has performed. This collection will keep the last update for all the job records associated with this worker.
                  
                  Following are the possible details as part of this collection
                  1. Worker is having just one job/assignment and has never been associated with any other job. In this case, there will be just one JobIdentifier and the collection will keep the last upate on this job record. In case of multiple updates on the same job record, there will be multiple items here separated by effective sequence number
                  2. Worker is having more than one active jobs/assignments. In this case, there will be multiple JobIdentifiers and the collection will keep the last update on all the job records. In case of multiple updates on the same JobIdentifier, there will be multiple items separated by effective sequence number
                  3. Worker is having more than one jobs/assignments and some of them are inactive. These can be inactive as worker's additional assignment might have completed or worker was rehired and hence we have job records available from his/her earlier employment as well. In this case, there will be multiple JobIdentifiers and the collection will keep the last update on all the job records. In case of multiple updates on the same JobIdentifier, there will be multiple items separated by effective sequence number
                  4. Worker is having one or more than one jobs/assignments and all of the are inactive. This will be the case when worker has been terminated or left the organization due to any reason. In this case, for each JobIdentifier, there will be last update available on all job records. In case of multiple updates on the same JobIdentifier, there will be multiple items separated by effective sequence number
                  
                  Few important details associated with job are
                  1. There will be only one active primary job record for any worker at any point in time
                  2. Jobs are tightly coupled with Position and hence on a position, there can be just one worker at any point in time
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="LeaveOfAbsenceDetails" maxOccurs="1" minOccurs="0" type="LeaveOfAbsenceDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Leave Of Absence Details. Can also be named as Long Term Absence Details. This object maintains the details of the most recent long term absence taken by Worker. The following kind of scenarios are possible here
                  
                  1. Worker has never taken leave of absence and hence the object will not be present in the document
                  2. Worker had taken leave of absence and has returned as well which has been captured in the system. In this case, this object will maintain details of such absence. If there are many such absences, object will capture the last absence taken
                  3. Worker has taken leave of absence and still hasn't returned back. In this case, object will maintain this absence without any actual return/end date
                  
                  Some examples of long term absences are Sabbatical, Long-term Illness, Maternity/Paternity, Personal Reason, Suspension etc. These are examples of unpaid long term leaves. There are paid long term absences as well with similar kind of reasons.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MandatoryTimeAwayDetails" maxOccurs="unbounded" minOccurs="0" type="MandatoryTimeAwayDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Mandatory Time Away Details. This object stores the details of mandatory time away for a Worker. Details will be stored for the most recent Mandatory Time Away of the Worker.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="GlobalGraduateProgramDetails" maxOccurs="unbounded" minOccurs="0" type="GlobalGraduateProgramDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Global Graduate Program Details. Holds the global graduate trainee program details. 
                  
                  In PeopleSoft, a graduate can be asscoiated with multiple graduate programs, but in Workday, the graduate can be associated with only one graduate program.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CustomIdentifierDetails" maxOccurs="unbounded" minOccurs="0" type="CustomIdentifierDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Custom Identifier Details. This section maintains the various custom identifiers kept in the system. E.g. Payroll IDs, Previous System IDs etc.
                  
                  In terms of structure, these are similar to personal identifiers however the difference is in terms of context. These are the identifies for the person but from organization perspective.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="WorkerAttributeDetails" maxOccurs="1" minOccurs="0" type="WorkerAttributeDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Worker Attribute Details is the entity which holds the worker attributes which are owned by Business Managers and HR. Each of this field will hold one value from the predefined set.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="EducationDetails" maxOccurs="unbounded" minOccurs="0" type="EducationDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Education Details. Holds the Worker's Education Details such as School Name, School Location, Degree Code etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PreviousJobHistoryDetails" maxOccurs="unbounded" minOccurs="0" type="PreviousJobHistoryDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Previous Job History Details. Holds the details of Worker's previous jobs such as Company Name, Job Title, Start and End Date of employment etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CertificationDetails" maxOccurs="unbounded" minOccurs="0" type="CertificationDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Certification Details.Holds the details of certifications completed by Worker such as Certification name, Certification number, Issue Date, etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="WorkerFCAIDDetails" maxOccurs="1" minOccurs="0" type="WorkerFCAIDDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Worker FCAID Details.Holds the details about FCA Identifier. There can be only one record available in Worker FCAID Details entity for a Worker depending on the pre define rule set in MiFID tool based on citizenship of a worker and rules within the citizenship country.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CWRPersonalDetails" maxOccurs="1" minOccurs="0" type="CWRPersonalDetails">
         	<xs:annotation>
         		<xs:documentation>
         			CWR Personal Details. Captures various person level details from different perspective e.g. demographic etc for contingent workers. The details captured here are sensitive in nature and cannot be distributed to all consumers. This is the reason, such details are being captured in a separate entity for contingent workers.
                  
                  Usually these details are not captured for contingent workers in the source; however due to certain regulatory requirements, this information can be captured for a set of contingent workers and will only be distributed further to meet those regulatory requirements.
                  
                  For getting these details for employees, plesae refer to Worker Person Details
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="WorkerRedFlagDetails" maxOccurs="1" minOccurs="0" type="WorkerRedFlagDetails">
         	<xs:annotation>
         		<xs:documentation>
         			WorkerRedFlagDetails. Holds the information for YTD value of Red Flag Score tagged to worker for corresponding reporting year. The Red Flag might be tagged to worker in case of noncompliant to following compliance process:
                  
                  Red Flags Categories - All Devision
                  
                  Compliance Attestation
                  Gifts and Entertainment
                  Mandatory Time Away(MTA)
                  Mandatory Training
                  Personal Account Dealing
                  Tone from the Top
                  
                  Red Flags Categories - Division specific categories
                  
                  Conflict Clearing
                  Credit Limit Breaches
                  Electronic Communications
                  Independent Price Verification
                  Market Risk Limit Breaches
                  New Product Approval (NPA)
                  Number of Direct Reports
                  P And L and Risk sign-off
                  Registration/Licensing(US exam completion)
                  Research Independence
                  Restricted List
                  TRACE Reporting(US only)
                  Trader Mandate Breaches
                  Trader Mandate Recertification
                  Unapproved Models
                  Unauthorised Wall Crossing
                  WSP: Supervisory Obligations Task
                  
                  Please note that mapping is not yet available in eRDS.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="EmployeeRelationDetails" maxOccurs="unbounded" minOccurs="0" type="EmployeeRelationDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Maintains accurate ER (Employee Relation) data related to investigations, disciplinary action and employee complaints raised by the HR Consequence Management team in the ER Tracker application.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="WorkerReference" type="WorkerReference">
   	<xs:annotation>
   		<xs:documentation>
   			Worker Reference. This is the root for Worker Entity. A worker can be an Employee or a Contingent Worker or a Person of Interest. Within dbPeople+, these three categories are explicitly defined however Workday does not have any concept of Person of Interest and hence such workers are defined as Contingent Workers. However while preparing data to be stored through LDM, such relationship is derived and eRDS continues to provide these three classifications of Worker types.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="WorkerMIFIDDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Worker MiFID Details. Holds the MIFID details for a Worker. There can be multiple records available in MIFID Details entity for a Worker depending upon his/her country of citizenship, MIFID ID type and MIFID ID.
            Based on the predefined rules for each country to which a Worker belongs and in case of multiple records of a Worker, one of the MIFID IDs is treated as the primary.
            
            Depending on the citizenships for a person and the MiFID rules within the citizenship country, there can be multiple MiFID IDs generated for a Worker. However using the rules around priorities, one of them is defined as the primary one which needs to be used.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="MIFIDIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			MIFID Identifier. This is the identifier calculated based on prescirbed rule taking into account the citizenship and MiFID ID Type.
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MIFIDCountryCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			MIFID Country Code. ISO 3 Char Country Code value. Identifies the country associated with the MIFID ID i.e. the citizenship country based on which the MiFID ID has been generated.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MIFIDEffectiveDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			MIFID Effective Date. It is the date from which the MIFID Identifier is effective for the associated worker and country.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MIFIDIdentifierTypeCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			MIFID Identifier Type Code. This attribute identifies how the MIFID ID has been derived. Possible values are CONCAT for Concatenated, NATIONALITYID for National ID, PASSPORT for Passport Number. There are rules defined to generate MiFID ID for a person basis on these type values.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MIFIDIdentifierPrimaryFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			(Deprecated) MIFID Identifier Primary Flag. New MIFID tool provides only one latest active MIFID ID to ERDS hence this field will be deprecated.
                  Please do no select this field for consumption.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MIFIDEconsentFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			(Deprecated) MIFID Econsent Flag. New MIFID tool does not have functionality to capture this field hence it would be deprecated.
                  Please do no select this field for consumption.
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MIFIDIdentifierExpiryDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			MIFID Identifier Expiry Date. This field holds the expiry date of the MIFID ID document. Not necessarily there will be always an expiry date associated with MiFID Identifier.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MIFIDIdentifierExpiryDateDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			(Deprecated) MIFID Identifier Expiry Date Description.New MIFID tool does not have functionality to capture this field hence it would be deprecated.
                  Please do no select this field for consumption.
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MIFIDComplianceFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			MIFID Compliance Flag. Denotes if the associated MIFID ID is compliant or not. An example of non-compliance is when MiFID ID is based on Passport Number and passport has expired or if there is a need to submit documents and it has not been done.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MIFIDNationalityIDTypeCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			MIFID Nationality ID Type Code. Captures the nationality id type which has been used to derive MiFID ID if MiFID ID is based on nationality ID.
                  
                  For different countries, different nationality ids can be used to generate MiFID ID as per the MiFID Regulation. This attribute here just identifies the appropriate type.
                  
                  This is a technical debt as ideally this is information coming from rule table or metadata around MiFID ID generation. MiFID ID generation is done in a different system and eRDS should only hold the MiFID ID generated for further distribution.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="WorkerMIFIDDetails" type="WorkerMIFIDDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Worker MiFID Details. Holds the MIFID details for a Worker. There can be multiple records available in MIFID Details entity for a Worker depending upon his/her country of citizenship, MIFID ID type and MIFID ID.
            Based on the predefined rules for each country to which a Worker belongs and in case of multiple records of a Worker, one of the MIFID IDs is treated as the primary.
            
            Depending on the citizenships for a person and the MiFID rules within the citizenship country, there can be multiple MiFID IDs generated for a Worker. However using the rules around priorities, one of them is defined as the primary one which needs to be used.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="WorkerBadgeDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Worker Badge Details. This structure maintains the various badge details available for Worker.
            
            This structure is a technical debt. The structure was added to support a particular consumer and mimics the structure coming from PeopleSoft as there was no clarity available in terms of how this information will be handled. The table in PeopleSoft is being used for maintaing various details including Payroll IDs as well; hence new structure as per the Workday configuration will be prepared and the data will be populated there. This structure will cease to exist once the consumers have been migrated to the new structure.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="WorkerBadgeTypeCode" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Worker Badge Type Code.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="WorkerBadgeNumber" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Contains the identification number as assigned to the Worker's badge.  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="WorkerBadgeDetails" type="WorkerBadgeDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Worker Badge Details. This structure maintains the various badge details available for Worker.
            
            This structure is a technical debt. The structure was added to support a particular consumer and mimics the structure coming from PeopleSoft as there was no clarity available in terms of how this information will be handled. The table in PeopleSoft is being used for maintaing various details including Payroll IDs as well; hence new structure as per the Workday configuration will be prepared and the data will be populated there. This structure will cease to exist once the consumers have been migrated to the new structure.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="JobDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Job Details. This keeps the details on different assignments/jobs this worker is performing/has performed. This collection will keep the last update for all the job records associated with this worker.
            
            Following are the possible details as part of this collection
            1. Worker is having just one job/assignment and has never been associated with any other job. In this case, there will be just one JobIdentifier and the collection will keep the last upate on this job record. In case of multiple updates on the same job record, there will be multiple items here separated by effective sequence number
            2. Worker is having more than one active jobs/assignments. In this case, there will be multiple JobIdentifiers and the collection will keep the last update on all the job records. In case of multiple updates on the same JobIdentifier, there will be multiple items separated by effective sequence number
            3. Worker is having more than one jobs/assignments and some of them are inactive. These can be inactive as worker's additional assignment might have completed or worker was rehired and hence we have job records available from his/her earlier employment as well. In this case, there will be multiple JobIdentifiers and the collection will keep the last update on all the job records. In case of multiple updates on the same JobIdentifier, there will be multiple items separated by effective sequence number
            4. Worker is having one or more than one jobs/assignments and all of the are inactive. This will be the case when worker has been terminated or left the organization due to any reason. In this case, for each JobIdentifier, there will be last update available on all job records. In case of multiple updates on the same JobIdentifier, there will be multiple items separated by effective sequence number
            
            Few important details associated with job are
            1. There will be only one active primary job record for any worker at any point in time and this can be identified here through Most Recent Primary Job Flag
            2. Jobs are tightly coupled with Position and hence on a position, there can be just one worker at any point in time
            
            There are some functional differences as well for the Job between PeopleSoft and Workday.
            1. In case of PeopleSoft, a job is identified through Employee Record Number. A person can have change of position for the same employee record number; however for Workday, this is only true for Primary Job. For additional jobs, those are equivalent to the positions and hence change position is not allowed on additional jobs.
            2. In case of PeopleSoft, pensioners are also provided with an active job record where POI Type identifies whether this employee is pensioner or not; however in case of Workday this is not the case. In case of Workday, pensioners will be considered as inactive workers and will not have any active job
            3. In case of PeopleSoft, it is possible for a worker to have a proper job although person is a pensioner or on long term absence. With Workday, this will not be the case. Long Term Absence is not a job level process, rather it is at worker level and to get any long term absence related information, always use Leave Of Absence Details section
            
            Although the inactive jobs will not be migrated from PeopleSoft to Workday, those will continue to be supported through this collection.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="JobIdentifier" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Job Identifier. Uniquely identifies a job record for a worker basis on the definition of Job within the source.
                  
                  From PeopleSoft, this identifier is prepared using the Employee ID and the Employee Record Number. These two values are concatenated (converting employee record number to 3 characters with leading zeros) and with the result, Job Identifier is populated.
                  
                  From Workday, this is more complex. If a job has been migrated from PeopleSoft to Workday, same Employee Record Number will be used to prepare the Job Identifier and hence values should be same. For new additional jobs, Job Identifier will be a concatenation of Employee Number and Position Number.
                  
                  For new workers in Workday, for primary job, value 000 would be used as Employee Record Number while preparing the Job Identifier value.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PositionIdentifier" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Position Identifier. Identifies the Position associated with this job record. Assumption is that for each job, a unique position will be tagged with it, i.e. without a Position, no job can exist.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PSWorkerEmploymentTypeCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Worker Employment Type Code. Captures the relationship worker is having with the organization for a given Job. E.g. Employee, Contingent Worker or Person of Interest.
                  
                  In case of PeopleSoft, these three are different relationships however in case of Workday, a worker can be classified either as an Employee or a Contingent Worker and hence POI has also been clubbed with Contingent Worker.
                  
                  In eRDS, we identify the POIs through Contingent Worker Type values and still support the three relationships. There are some POIs which are not going to be available in Workday. Please refer to JobEmploymentRelationshipSubTypeCode attribute for more details.
                  
                  Also, in case of PeopleSoft, this relationship can be different for different jobs as a POI can also be an Employee. But this will not be the case with Workday where this information is applied at the Worker level only.
                  
                  The supported values for this attribute are - EMP (Employee), CWR (Contingent Worker) and POI (Person of Interest)
                  
                  It is a technical debt. Instead of this attribute Job Employment Relationshp Type Code should be used. This is being continued as there are consumers taking this attribute.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PrimaryJobFlag" maxOccurs="1" minOccurs="1" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Primary Job Flag. Identifies whether the job is/was a primary job for the Worker.
                  
                  Since JobDetails maintains all the job records for the Worker, there can be more than one jobs identified as Primary Job. This is due to a fact that an employee can get rehired and hence there can be another job record thorugh person's earlier employment with job indicator as primary but that will be inactive now. A key point here is that at any point in time, a worker can have only one primary active job.
                  
                  To identify the most relevant primary job record for a worker at any point in time, please use the attribute MostRecentPrimaryJobFlag.
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MostRecentPrimaryJobFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Most Recent Primary Job Flag. This flag helps in identifying the most recent primary job item from the Job Details collection.
                  
                  Job Details collection will keep 
                  1. Last update on all the jobs for a worker
                  2. If there are multiple updates available on the same job for the Worker on the given day, then it will keep all the updates usually separated by effective sequence number
                  
                  This flag is derived basis on the latest primary job hence ignoring the earlier primary jobs in case of rehire. Priority is given to the active primary job and if all the jobs are inactive then the most recent one basis on effective dates is selected. Also, if on a given day, multiple job records are available for the same primary job then the one with max effective sequence number is selected as the objective of this flag is to identify single job record which is primary as on that day.
                  
                  In essence, using this flag, anyone can identify the most relevant primary job item at any point in time.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="LatestJobRecordFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Latest Job Record Flag. This flag identifies the latest job record for each job held by the Worker.
                  
                  A worker can have one or more assignments/jobs at any point in time. Each assignment/job can receive more than one updates on a single day which are identified using Effective Sequence Number. This flag helps in identifying the latest record for each assignment/job in the given version of Worker document based on maximum value of effective sequence number.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BusinessTitle" maxOccurs="1" minOccurs="0" type="xs:string" erds:obfuscationRequired="true" erds:obfuscationType="Scrambling" erds:scramblingFactor="5">
         	<xs:annotation>
         		<xs:documentation>
         			Business Title. This is the business title available at the job level.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PositionStartDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Position Start Date. This is the date when the worker started working for this position. Please note that a person can change position on the same job. In such case, the job start date will remain same but the position start date will change to reflect the start date on the new position.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="JobPayThroughDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Job Pay Through Date. Captures the date till when pay has been considered for this job.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="WorkerTypeCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Worker Type Code. This attributes helps in identifying the further seggregation of worker relationship. For Employees, it gives the next level of details e.g. Permanent Local Staff, Fixed Term Employees, International Assignment etc. For Contingent Workers, it suggests whether the worker is a Time and Material one or Fixed Price. For POIs, it just maintains one value.
                  
                  For Contingent Workers and POIs, the further classification is available in a separate attribute which is Job Employment Relationship Sub Type Code. This attribute also holds values for Employees but those are equivalent to the values in Worker Type Code.
                  
                  Please note that this attribute also keeps some legacy values due to transfer of data from PeopleSoft and those values are no more relevant. Please look at the list of values for further details.
                  
                  In summary
                  1. Values 1 and 2 are being used for Contingent Workers
                  2. Value 5 is being used for Person of Interest
                  3. Values 6, 7, 8, 9, A, B, C, D, E, F, M, Q and Z are active and are being used for Employees
                  4. Value G is inactive in PeopleSoft but being reactivated in Workday
                  5. Values H, I, J, K, L, N, O, P, R, S, T, U, V, W, X and Y are inactive and not in use anymore
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="WorkerTypeIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Worker Type Identifier. Key for maintaining relationship with the static table keeping details on Worker Type Code.
                  
                  This attribute is a technical debt. This field has no relevance as Worker Type Code provides all the required details. Currently this is being maintained as ServiceNow is using this attribute however will be decommissioned in future. Only difference between Worker Type Code and Worker Type Identifier is the presence of SETID value which is a constant for all the records and hence has no relevance.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="TimeTypeCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Time Type Code. Identifies the time type for the job e.g. Full Time, Part Time etc.
                  
                  Valid values for this attribute are
                  1. FULL_TIME, 2. PART_TIME, 3. NOT_VALID
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ScheduledWeeklyHours" maxOccurs="1" minOccurs="0" type="xs:float">
         	<xs:annotation>
         		<xs:documentation>
         			Scheduled Weekly Hours. This represents the scheduled weekly hours for this job. This data is captured at the job level.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="WorkingTimeValue" maxOccurs="1" minOccurs="0" type="xs:float">
         	<xs:annotation>
         		<xs:documentation>
         			Working Time Value. Captures the Working Time Value associated with Job. Associated unit is captured in a separate attribute. This field should be considered in collaboration of Working Time Unit Code to get the unit and Working Time Frequency Code to understand the frequency of this value for the job.
                  
                  This attribute does not seem to have any relevance and is being deprecated now.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="WorkingTimeUnitCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Working Time Unit Code. This identifies the unit in which the Job Working Time Value has been defined. E.g. Hours, Days etc.
                  
                  This attribute does not seem to have any relevance and is being deprecated now.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="JobLocationIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Location Identifier. This identifier uniquely identifies a DB location associated with the Job. 
                  
                  Between PeopleSoft and Workday, values for Location Identifiers can be different however while joining with the Location entity, right values for Location Code will be received.
                  
                  This attribute must not be used for any kind of business rule, it should just be used to join with the Location entity and the Location Code from the location entity should be used which has more functional meaning.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="WorkingTimeFrequencyCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Working Time Frequency Code. This captures the frequency associated with the Job Working Time Value. E.g. Annual, Bi-weekly, Daily, Hourly, Monthly etc.
                  
                  This attribute does not seem to have any relevance and is being deprecated now.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="FullTimeEquivalent" maxOccurs="1" minOccurs="0" type="xs:float">
         	<xs:annotation>
         		<xs:documentation>
         			Full Time Equivalent. This is the FTE value associated with this job.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ExcludeFromHeadcountFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Exclude From Headcount Flag. Identifies if data from this  job needs to be excluded from headcount reporting.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PayRateTypeCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Pay Rate Type Code. Identifies how the pay is calculated for the job. E.g. Salaried, Daily, Hourly etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="WorkShiftCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Work Shift Code. Identifies the shift associated with this job. A numeric value in this field indicates the number of weekly/bi-weekly working days for a worker. Other(O) indicates custom shift which may be a total number working days in a year or a manual setting specifically for the job.
                  Standardization for this attribute is done for countries- Germany, Austria, Belgium, Switzerland, Czech Republic, UK, India, Ireland, Italy, Luxemburg, Netherlands, Philippines, Poland, Romania, Russia, Ukraine, USA.
                  For countries Australia, Spain and China standardization is yet to be done and the attribute shows the values as present in source.
                  For further details, please refer to the confluence page - https://confluence.intranet.db.com/display/HRITDA/Work+Shift+Code
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="WorkHourProfilesCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Work Hours Profile Code. Captures the Work hour profile e.g. Standard Hours - 35, Standard Hours - 40 etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RegularPaidEquivalentHours" maxOccurs="1" minOccurs="0" type="xs:float">
         	<xs:annotation>
         		<xs:documentation>
         			Regular Paid Equivalent Hours. Available as part of the Work Hours Profile. identifies the number of equivalent regular paid hours from the defined work hours profile.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="WorkerStatusCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Worker Status Code. Captures the status of a worker e.g. Retired, Suspended, Deceased etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="InheritedCorporateTitleCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Inherited Corporate Title Code. Can also be referred to as Management Level. Identifies the corporate title associated with this job e.g. Director, Vice President, Analyst etc.
                  Ideally, this information can be at Worker level. However, both, PeopleSoft and Workday, maintain this information at the Job level. For simplicity and data maintenance, this value is being defined at both Worker as well as Job level.
                  Worker level corporate title code is driven by Primary job which will always keep the right corporate title for the Worker.
                  
                  This attribute is added specifically for Postbank workers whose corporrate titles will be derived from existing Job profiles in Workday.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CorporateTitleCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Corporate Title Code. Can also be referred to as Management Level. Identifies the corporate title associated with this job e.g. Director, Vice President, Analyst etc.
                  
                  Ideally, this information can be at Worker level. However, both, PeopleSoft and Workday, maintain this information at the Job level. For simplicity and data maintenance, this value is being defined at both Worker as well as Job level.
                  
                  Worker level corporate title code is driven by Primary job which will always keep the right corporate title for the Worker.
                  
                  Please see below the corporate title code descriptions.
                  
                  Value on the left is Source and Value on the right is eRDS
                  MANAGEMENT_LEVEL-6-2 - dbHierarchy
                  DNU Senior Analyst - E
                  managingDirector - M
                  director - D
                  vicePresident - V
                  assistantVicePresident - A
                  associate - L
                  analyst - B
                  noCorporateTitle - Z
                  notApplicable - Z
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CompensationPackageCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Compensation Package Code.
                  
                  It is a technical debt. Please use JobDetails/CompensationDetails/CompensatinPackageIdentifier.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CompensationStepCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Compensation Step Code.
                  
                  It is a technical debt. Please use JobDetails/CompensationDetails/CompensationStepIdentifier.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="JobActiveFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Job Active Flag. Similar to HR Status, provides the information on whether a particular job is active at a point in time or not.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="EventClassificationCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Event Classification Code. Captures the event associated with the job record. E.g. Additional_Job, Position_Change, Extend_Job, Termination, Retirement etc. This attribute will help in identifying the event which took place with the associated job record.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="EventClassificationCategoryCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Event Classification Category Code.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="EventClassificationSubcategoryCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Event Classification Subcategory Code.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PSLocalActionReasonCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			This is PeopleSoft specific field which gets populated for certain region specific events like for military leave or employee movement. The field is entered on the Job data page in PeopleSoft similar to how the Action/EventClassificationCode and Action reason/EventClassificationSubcategory fields are entered. It is a technical debt.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="JobEmploymentRelationshipTypeCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Job Employment Relationship Type Code. Captures the relationship worker is having with the organization for a given Job. E.g. Employee, Contingent Worker or Person of Interest.
                  
                  In case of PeopleSoft, these three are different relationships however in case of Workday, a worker can be classified either as an Employee or a Contingent Worker and hence POI has also been clubbed with Contingent Worker.
                  
                  In eRDS, we identify the POIs through Contingent Worker Type values and still support the three relationships. There are some POIs which are not going to be available in Workday. Please refer to JobEmploymentRelationshipSubTypeCode attribute for more details.
                  
                  Also, in case of PeopleSoft, this relationship can be different for different jobs as a POI can also be an Employee. But this will not be the case with Workday where this information is applied at the Worker level only.
                  
                  The supported values for this attribute are - EMP (Employee), CWR (Contingent Worker) and POI (Person of Interest)
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="JobEmploymentRelationshipSubTypeCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Job Employment Relationship Sub Type Code. Captures further classification of the Worker's Relationship with organization through this job. 
                  
                  Currently this attribute is keeping the further classification for POIs, however with Workday, it will keep details for Employees and Contingent Workers as well. 
                  
                  For Employees, the information maintained is based on the Employee Class or Employee Type. Values for Employees are - PERMANENT_LOCAL_STAFF, EARLY_RETIREMENT, PARTIAL_RETIREMENT, FIXED_TERM_EMPLOYEE, DATA_MIGRATION_EMPLOYEE, GRADUATE_TRAINEES, INTERNATIONAL_ASSIGNMENT, INTERNATIONAL_ASSIGNMENT_SHADOW_POSITION, APPRENTICES, INTERNS_PRACTICAL_WORK_EXP, EXTENDED_UNPAID_LEAVE 
                  
                  For Contingent Workers, this information is based on various details e.g. whether Fixed Term or Time and Material, and then further classification for the worker. In case of PeopleSoft, this information is driven by the Ext Class and Employee Class. In case of Workday, this information is derived based on Contingent Worker Type values. Values here are - FP_IT_VENDOR_RESOURCE_OFFSHORE, FP_IT_VENDOR_RESOURCE_ONSHORE, FP_OUTSOURCED_RESOURCE, FP_PROJECT_BASED_CONSULTANT, FP_SERVICES_FACILITIES_RESOURCE, TM_IT_CONTRACTOR, TM_IT_VENDOR_RESOURCE_OFFSHORE, TM_IT_VENDOR_RESOURCE_ONSHORE, TM_NON_IT_CONTRACTOR, TM_PROJECT_BASED_CONSULTANT, TM_SERVICES_FACILITIES_RESOURCE, TM_TEMPORARY_EXTERNAL, DATA_MIGRATION_CWR_FP, DATA_MIGRATION_CWR_TM, TM_IT_VENDOR_RESOURCE,
                  FP_IT_VENDOR_RESOURCE,TM_IT_OUTSOURCED_SERVICE_RESOURCE,FP_IT_OUTSOURCED_SERVICE_RESOURCE,TM_NON_IT_BANK_OUTSOURCED_SERVICE_RESOURCE,
                  FP_NON_IT_BANK_OUTSOURCED_SERVICE_RESOURCE 
                  
                  For Person Of Interest, this information is based on POI Type or Contingent Worker Type values. The values will be kept similar to current POI Type values. Such values are - 00000 (Unknown), 00004 (Stock - Non-HR Employee), 90008 (Scholar Work Experience), 90009 (Emp On Acquisition), 00006 (Candidate), 90004 (Regulator), 90011 (Emp on Non-HR Company), 90012 (Non-Executive Director), 90013 (Supervisory Board Member), 90005 (Pensioner), 90006 (Future Pensioner Entitlement) 
                  
                  There are two new values also being added for Person of Interest in Workday. These are - DATA_MIGRATION_POI, EXTERNAL_SECONDEE 
                  
                  Please note that there are some POI Type codes which are not in use now. Those are inactive in the source however we are maintianing the values as eRDS is going to keep legacy data as well. These are - 00009 (Campus Solution Person), 00011 (Other Payee), 00001 (COBRA Qualified Beneficiary), 00002 (Pension Payee), 00003 (Stock - Board Member), 00010 (Other), 90000 (Non-MSP Resourcing Specialists), 90007 (Non-MSP Resourcing Specialists), 00005 (Global Payroll Payee), 00007 (External Trainee), 00008 (External Instructor), 90001 (POI MSP - Advantage), 90002 (POI Randstad), 90003 (POI MSP for Alexander Mann) 
                  
                  In addition to these, there are some legacy values as well which can be supported in this attribute however these should not be occurring unless some old value is reappearing in Workday. These are - NOT_VALID_6_MOBILE_SALESFORCE, NOT_VALID_7_CIVIL_SERVANT, NOT_VALID_8_CIVIL_SERVANT_PARTIAL_RETIREMENT, NOT_VALID_9_ID_CANCELLATION, NOT_VALID_G_EXP_OUT_HC, NOT_VALID_H_INP_OUT_HC, NOT_VALID_I_EXP_IN_HC, NOT_VALID_K_COMBIMODEL_EXEMPTION_PHASE, NOT_VALID_N_GENERAL_TRAINEES_LEARNERS, NOT_VALID_O_RETIREMENT, NOT_VALID_P_PARTTIME_UPTO_33PERCENTAGE, NOT_VALID_R_FIXED_TERM_EMPLOYEE_DEU_ONLY, NOT_VALID_S_CLEANING_STAFF, NOT_VALID_U_PROJECT_BASED_CONSULTANT_EXT, NOT_VALID_V_TEMPORARY_EXTERNAL, NOT_VALID_W_CONTRACTOR_EXTERNAL, NOT_VALID_X_OUTSOURCED_RESOURCE_EXTERNAL, NOT_VALID_Y_MILITARY_ALTERNATIVE_SERVICE, NOT_VALID_TM_5_REGULATOR, NOT_VALID_TM_X_OUTSOURCED_RESOURCE, NOT_VALID_FP_1_IT_CONTRACTOR, NOT_VALID_FP_V_TEMPORARY_EXTERNAL, NOT_VALID_FP_W_NON_IT_CONTRACTOR, NOT_VALID_FP_5_REGULATOR
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="JobEffectiveDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Identifies the date since when the job is effective. JobEffectiveDate will get a new date when any of the attributes under JobDetails changes. The date would be same as the effective date of the event in the source system which triggered the change. If there are multiple events/changes on the same day, the JobEffectiveDate would remain same, but the JobEffectiveSequenceNumber would be different.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="JobEffectiveSequenceNumber" maxOccurs="1" minOccurs="0" type="xs:integer">
         	<xs:annotation>
         		<xs:documentation>
         			Job Effective Sequence Number. As per current history maintenance approach, if for a job, multiple updates are received on a single day then all of them are maintained in the same version of the document. Ordering of those updates can be identified using this field.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PSEffectiveSequenceNumber" maxOccurs="1" minOccurs="0" type="xs:integer">
         	<xs:annotation>
         		<xs:documentation>
         			PeopleSoft Effective Sequence Number.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PSHRStatusCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			PeopleSoft HR Status Code.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PSLastWorkingDateOverrideFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			PS Last Working Date Override Flag. Used to indicate whether the user has overridden the Last Date Worked - ON THIS JOB_DATES row. It will only be set to 'Y' on the row where the date is entered, it will be 'N' on the later rows. This allows us to identify which JOB_DATES row is the row where the Date was either set or updated without having to look at the previous row. If the LDW = ( EFFDT - 1 ) or the LDW_OVR is 'Y', then this is the row where the LDW was set - and therefore can be corrected.   
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PSWorkHomeDistanceValue" maxOccurs="1" minOccurs="0" type="xs:float">
         	<xs:annotation>
         		<xs:documentation>
         			Distance Home to Work (KMs).   
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PSPayslipIndicator" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Payslip Indiator. Values in PeopleSoft are D, K or E and descriptions are in german.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PSPayrollIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Payroll Identifier- This is the identifier that links the worker to the SAP Payroll system. 
                  Currently, this is applicable for Germany based population. This is present in Workday as custom identifier of type Germany SAP ID under Other IDs section. However, once the worker becomes a pensioner, this data(for Primary job) is sourced from the PERNR field in SAP.
                  While populating the Payroll ID, below conditions apply.
                  1. Legal entity of the job matches the Legal entity of the Payroll ID of the worker in SAP system.
                  2. Job effective date is in the range of validity of the PayrollIdentifier.
                  3. Job should be associated with a pay group.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PSBusinessUnitCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Business Unit Code. This field is available in PeopleSoft and being added in the model due to ServiceNow requirements. Will need to check how this will be handled in future as part of Workday migration.
                  
                  This attribute has been categorized as a Technical Debt. Business Unit has been defined within Workday as a custom organization with type as Access Type. Hence details have been added in the Organization Model for the same. There is a separate model for Access Type Organization capturing details for such custom organizations. To get the business unit/access type organization details associated to the Job, please refer to Job Organization Details/Access Type Organization Identifier.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PSPartTimeWorkPercentageValue" maxOccurs="1" minOccurs="0" type="xs:float">
         	<xs:annotation>
         		<xs:documentation>
         			Part Time Work Percentage Value.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PSHireDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Hire Date. This is the date when person started the relationship with organization with following kind of scenarios
                  1. Employee working on different assignments but part of same relationship, will have same value referring to earliest hire date
                  2. For contingent workers or PoIs, this value will change for each assignment
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PSJobRecentStartDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Job Recent Start Date. This will be changed for each assignment in case of rehire. For contingent worker and PoIs, it will change and will be same as Hire Date.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PSJobEndDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Job End Date. End date for the job from PeopleSoft perspective.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PSCompanySeniorityDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Contains the relevant company seniority date for the Person.  Seniority is the length of time that an individual has served in a job or worked for an organization. Seniority can bring higher status, rank, or precedence to an employee who has served an organization for a longer period of time. Company Seniority Date is used to determine the employee's eligibility/vesting for benefits. It is defaulted to the employee's 
                  first hire date and then is generally adjusted for employees who leave 
                  the company and are later rehired. 
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PSServiceDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Service Date (may or may not be the same as hire or rehire date if adjusted for a break in service) .Based on the date that you enter here, the system calculates the total years, months, and days of service for a worker, including any credit for military leave or the total amount of time that the worker works for multiple companies in the organization. This date is used to calculate benefits eligibility.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PSSeniorityPayDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Enter the date that the system should use to calculate seniority-based pay.The date from which benefits should be calculated .
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PSLastVerificationDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Identifies the date the Person's record was last verified. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PSEmploymentInstanceHireDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Employment Instance Hire Date. At the moment, definition is very close to Orig Hire Dt in Peoplesoft which is linked to an organization relation. Would need to see how this will evolve in future.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PSActionCode" maxOccurs="1" minOccurs="0" type="xs:string" erds:obfuscationRequired="true" erds:obfuscationType="Scrambling" erds:scramblingFactor="81">
         	<xs:annotation>
         		<xs:documentation>
         			A three digit code defining a PeopleSoft transaction being applied to a JOB record - such as Hire, Promotion, Termination, etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PSActionReasonCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Code reflecting the reason for the 'Action Code' on the Job or Position record - e.g. Retirement (RET) may be the reason for Termination.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PSActionDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Date when a PeopleSoft transaction was applied to an employee or position, triggered by a business process or requirement. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PBActionCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			PBActionCode. This field stores the action code maintained in Postbank HR system and populated only for Postbank workers. It is a technical debt and added to support Postbank data consumers. Once Postbank data is migrated to Workday, this field would become obsolete.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PBActionReasonCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			PBActionReasonCode. This field stores the action reason code maintained in Postbank HR system and populated only for Postbank workers. It is a technical debt and added to support Postbank data consumers. Once Postbank data is migrated to Workday, this field would become obsolete.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PartTimePayrollStartDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Part Time Start Date. This specifies the start date for German specific part time employees. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PartTimePayrollEndDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Part Time End Date. This specifies the end date for German specific part time employees.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PartTimePayrollPercentage" maxOccurs="1" minOccurs="0" type="xs:float">
         	<xs:annotation>
         		<xs:documentation>
         			Payroll Part Time Percentage. For German pensioners FTE value in DBPeople+ will be 0 as FTE is being used for headcount calculation. However as pensioners are getting payment, hence part time % will not be 0 and will have some value. Part time % is being used to calculate the salary percentage and not the work percentage. Outside Germany this concept is not there, hence part time % is not used for other countries.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="GermanPayrollEmployeeCategoryCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			German Payroll Employee Category. This is specific to German employees and used in SAP payroll system to identify the employee category.
                  
                  This is a technical debt as similar column "empl_class" is already available for this purpose, This is coming from SAP payroll system as German payroll specific information and getting stored in PeopleSoft. We don't have any confirmation if this will be available in Workday or not. If it becoms available in Workday, it won't be technical debt any more.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="GermanPayrollEmployeeSubcategoryCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			German Payroll Employee Subcategory. This is specific to German employees and used in SAP payroll system to identify the employee subcategory. 
                  
                  This is a technical debt as similar column "empl_class" is already available for this purpose, This is coming from SAP payroll system as German payroll specific information and getting stored in PeopleSoft. We don't have any confirmation if this will be available in Workday or not. If it becoms available in Workday, it won't be technical debt any more.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="GermanPayrollSeniorityCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			German Payroll Seniority Code indicates the type of worker which comes from SAP. The worker can be classified as Leitende Angestellte, Angestellter, Arbeiter. In WD, Arbeiter is not available. 
                  Leitende Angestellte are executive employees. In most cases managing directors/ directors and in some cases depending on the role also VP´s. Leitende Angestellte need to have a leader role, managing people and acting on behalf of the employer. The employer handed over important employer powers to them. The term is covered in the german law. 
                  Workers council needs to identify all the non-Leitende employees for their governance.
                  In PS, this comes directly from a SAP field, but in WD, this is derived from the location of the job/position of the worker AND the Leitende worker flag. As this is for the German population, we populate this field only if the location of the worker's job is in DEU. By default, the worker is Angestellter. But if the worker flag - Leitende is elected, then the worker is identified as Leitende Angestellte. And when the flag is waived, the worker becomes Angestellter.
                  
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="JobStartDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			The date when job will be started. In PeopleSoft, job is equivalent with assignment, hence we are populating this from asgn_start_date. In Workday, we will populate with job start date. In Workday, JobStartDate indicates the date on which the worker started in the position indicated in the PositionIdentifier attribute under JobDetails. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="JobEndDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			The date when job is ended.
                  
                  
                  In PeopleSoft, job is equivalent with assignment, hence we are populating this from asgn_end_date. In Workday, we will populate with job end date.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="UniversalImportManagerFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Universal Import Manager applies to records that are set up in dbPeople for completeness but are not actively managed in the system.  An example would be a subsidiary that does not use dbPeople but whose records we need to include in headcount.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="UniversalImportManagerComment" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Universal Import Manager Information Details. Normally UIM employees are excluded from any compensation calculations. 
                  However there are UIM managers who are designated as compensation deciding manages on Reward Platform. We can identify compensation desicing UIM managers using UIMDetailedInformationText field value as "Aquila".
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MIFIDLegalEntityActiveFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			MIFID Legal Entity Active Flag. Legal entity details are needed for certain set of POIs in PCC where as part of MIFID Reporting, their LEI details also need to be reported. This flag captures if such legal entity details are active or not for the worker.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MIFIDLegalEntityIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			MIFID Legal Entity Identifier. Captures the Legal Entity Identifier for certain set of POIs from PCC. This is needed for MIFID Reporting.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PSOrgInstanceServiceDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Organization Instance Service Date. This is the service date being captured at the organization instance level in PeopleSoft.
                  
                  It is a technical debt at the moment and is being added to support Beqom requirements. Since this is at the organization instance level, this kind of detail should ideally be available at the employee level through identification of the right instance.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PSOrgInstanceOriginalHireDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Organization Instance Original Hire Date. This is the attribute holding the Original Hire Date value from organization instance table in PeopleSoft.
                  
                  It is a technical debt currently and is being added to support Beqom requirements. Ideally this information should be available at the Worker level with the help of appropriate business rule.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PSJobIndicator" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Job Indicator. This attributes captures the job indicator value. Possible values are P (Primary), S (Secondary) and N (Not Applicable).
                  
                  It is a technical debt currently and is being added to support Beqom requirements. In future, it will be a boolean attribute just identifying whether job is primary or not and hence Primary Job Flag should be used.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="JobProfileChangeDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Job Profile Change Date. This is the date since when the current job profile on the job is applicable or last time the job profile was changed for the job.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PreviousJobProfileChangeDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Previous Job Profile Change Date. This is the date when the last or previous job profile on the job came into effect.
                  
                  It is a technical debt and is being added to purely support dbPerform.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AnsFuGCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			AnsFuG Code. For certain positions, it is important that the incumbant is going through specific certification(s) and submitting once completed. Based on the certification done, one of the three possible values are defined against the worker. These values are Anlageberater (Investment Advisor), Vertriebsbeauftragter (Sales Representative) and Anlageberater and Vertriebsbeauftragter (Investment Advisor and Sales Representative).
                  
                  This will only be applicable for Employees in Germany. For further details, please refer to the confluence page - https://confluence.intranet.db.com/display/HRITDA/AnsFuGCode
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PBEmployeeGroup" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			PBEmployeeGroup. This field stores the employee group of a worker maintained in Postbank HR system and populated only for Postbank workers. The supported values for this attribute are 1- Active, 9- Active (Civil servants), 5- Externals without settlement and 7-Other benefit recipient. It is a technical debt and added to support Postbank data consumers. Once Postbank data is migrated to Workday, this field would become obsolete.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PBEmployeeSubGroup" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			PBEmployeeSubGroup. This field stores the employee subgroup of a worker maintained in Postbank HR system and populated only for Postbank workers. It helps in identifying the further segregation of employee groups. Values for this attribute are 01- Board Member/Director/CEO, 02- Executive employee, 08- Civil servants etc. It is a technical debt and added to support Postbank data consumers. Once Postbank data is migrated to Workday, this field would become obsolete.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PBPAKEY" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			PBPAKEY. This field stores the unique key generated from Infotype 0 of Postbank HRise system and populated for job details of Postbank workers only. It is being added in model for DBAG requirements. It is a technical debt and once Postbank data is migrated to Workday, this field would become obsolete. HR data consumers other than DBAG should refrain from using this field.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PBCustomerStatusCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			PBCustomer Status Code. This field stores customized emplyment status values of Postbank workers that are being maintained in HRise system. It is a technical debt and added to support Postbank data consumers. Once Postbank data is migrated to Workday, this field would become obsolete. E.g. 0 - keine Besonderheiten, 1 - ruhendes Arbeits-/Dienstverhältnis etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PBIndustryCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			PBIndustryCode. This field industry code from Infotype 023 of Postbank HRise system and populated within job details of Postbank workers only. It is being added in model for DBAG requirements. It is a technical debt and once Postbank data is migrated to Workday, this field would become obsolete. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PBDateOfGroupExit" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			PBDateOfGroupExit. This field stores date of group exit of Postbank worker when terminated. It is a technical debt and added to support Postbank data consumers. Once Postbank data is migrated to Workday, this field would become obsolete.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PBRelationshipTypeCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			PB Relationship Type Code. This field stores the relationship type code maintained between positon and PERNR in SAP HRise. It is populated for job details of Postbank workers only. 
                  It is being added in model to support data consumers from Postbank side only, as some of the interfaces required this information.
                  It is a technical debt and once Postbank data is migrated to Workday, this field would become obsolete. DB consumers should refrain using this field from LDM.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PBPERNROriginalHireDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			PB PERNR Original Hire Date. This field stores the first date of PERNR when it’s associated with worker in SAP HRise. It is a technical debt and added to support Postbank data consumers. Once Postbank data is migrated to Workday, this field would become obsolete. Any DB downstream systems should refrain from using this attribute.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PBJobLocationIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			PB Job Location Identifier. This identifier uniquely identifies a PB location associated with the Job corresponding to the DB location present in JobLocationIdentifier.
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="JobClassificationDetails" maxOccurs="unbounded" minOccurs="0" type="JobClassificationDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Job Classification Details. Captures information on job classification and classification group. Provides a hierarchy for job classification. For a job/position/job profile, there can be multiple values associated. These are the industry or country standard values around Job. E.g. Job Classification Group can refer to International Standard Classification of Occupations with actual Job Classifications as Commissioned armed forces officers, Production managers in agriculture, forestry and fisheries etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CompanyInsiderDetails" maxOccurs="unbounded" minOccurs="0" type="CompanyInsiderDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Company Insider Details. Captures the company insider types applicable for this Job Profile/Job/Position. There can be more types associated with the given Job Profile/Job/Position. Example values are United States - SEC Section 16 - 10% Owner Insider, United States - SEC Section 16 - Board of Director Insider etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="InternationalAssignmentDetails" maxOccurs="1" minOccurs="0" type="InternationalAssignmentDetails">
         	<xs:annotation>
         		<xs:documentation>
         			International Assignment Details. Captures international assignment details if the associated job refers to an international assignment.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="JobTerminationDetails" maxOccurs="unbounded" minOccurs="0" type="JobTerminationDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Job Termination Details. Captures the termination details associated with the Job. It might be due to overall termination or end of the additional job. There can be multiple termination details associated for a job due to various reasons associated.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="EmploymentJobProfileDetails" maxOccurs="1" minOccurs="0" type="EmploymentJobProfileDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Employment Job Profile Details. Captures the job profile details associated with the job. Ideally details here will be available through Job Profile however in case of overrides, details should be available here.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="JobProbationPeriodDetails" maxOccurs="unbounded" minOccurs="0" type="JobProbationPeriodDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Job Probation Period Details. Captures the probation period details associated with the job. There can be multiple entries here for the same job.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="JobOrganizationDetails" maxOccurs="1" minOccurs="0" type="JobOrganizationDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Job Organization Details. Captures the organization details associated with the job. There will be one set of details for each job record.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="JobGovernanceRoleDetails" maxOccurs="1" minOccurs="0" type="JobGovernanceRoleDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Job Governance Role Details. Captures the governance role details associated with a worker for given job.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CompensationDetails" maxOccurs="1" minOccurs="0" type="CompensationDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Compensation Details. Contains the basic compensation details of an employee. Apart from base payment details, also captures compensation package, grade and grade profile kind of details which are very specific to a job of an employee.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="JobDetails" type="JobDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Job Details. This keeps the details on different assignments/jobs this worker is performing/has performed. This collection will keep the last update for all the job records associated with this worker.
            
            Following are the possible details as part of this collection
            1. Worker is having just one job/assignment and has never been associated with any other job. In this case, there will be just one JobIdentifier and the collection will keep the last upate on this job record. In case of multiple updates on the same job record, there will be multiple items here separated by effective sequence number
            2. Worker is having more than one active jobs/assignments. In this case, there will be multiple JobIdentifiers and the collection will keep the last update on all the job records. In case of multiple updates on the same JobIdentifier, there will be multiple items separated by effective sequence number
            3. Worker is having more than one jobs/assignments and some of them are inactive. These can be inactive as worker's additional assignment might have completed or worker was rehired and hence we have job records available from his/her earlier employment as well. In this case, there will be multiple JobIdentifiers and the collection will keep the last update on all the job records. In case of multiple updates on the same JobIdentifier, there will be multiple items separated by effective sequence number
            4. Worker is having one or more than one jobs/assignments and all of the are inactive. This will be the case when worker has been terminated or left the organization due to any reason. In this case, for each JobIdentifier, there will be last update available on all job records. In case of multiple updates on the same JobIdentifier, there will be multiple items separated by effective sequence number
            
            Few important details associated with job are
            1. There will be only one active primary job record for any worker at any point in time and this can be identified here through Most Recent Primary Job Flag
            2. Jobs are tightly coupled with Position and hence on a position, there can be just one worker at any point in time
            
            There are some functional differences as well for the Job between PeopleSoft and Workday.
            1. In case of PeopleSoft, a job is identified through Employee Record Number. A person can have change of position for the same employee record number; however for Workday, this is only true for Primary Job. For additional jobs, those are equivalent to the positions and hence change position is not allowed on additional jobs.
            2. In case of PeopleSoft, pensioners are also provided with an active job record where POI Type identifies whether this employee is pensioner or not; however in case of Workday this is not the case. In case of Workday, pensioners will be considered as inactive workers and will not have any active job
            3. In case of PeopleSoft, it is possible for a worker to have a proper job although person is a pensioner or on long term absence. With Workday, this will not be the case. Long Term Absence is not a job level process, rather it is at worker level and to get any long term absence related information, always use Leave Of Absence Details section
            
            Although the inactive jobs will not be migrated from PeopleSoft to Workday, those will continue to be supported through this collection.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="WorkerEmploymentSummary">
   	<xs:annotation>
   		<xs:documentation>
   			Worker Employment Summary.  Provides a quick summary on different employment perspectives for the Worker. This represents summary of worker's relationship with the organization and hence there will be one record for each Worker here. This is the place where holistic view of the employment will be captured and details pertaining to the overall relationship with organization for Worker will be maintained.
            
            The details here are as per the current employment of the Worker and hence most of the time, takes primary job into consideration for identifying the right details. In case of PeopleSoft, there has been challenges in terms of different values for certain elements for different jobs and in such scenarios, this approach has been adopted. However with Workday, most of the details are captured at the worker level and hence will be directly available.
            
            This entity also keeps details coming from some other sources but which are at Worker level and are associated with the employment information. Some examples are Create and Revoke Access Details from dbAG, dbLegi ID and Login ID coming from LDAP etc.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="WorkerEmploymentTypeCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Worker Employment Type Code. Captures the relationship worker is having with the organization. E.g. Employee, Contingent Worker or Person of Interest.
                  
                  This attribute is not yet mapped as in case of PeopleSoft, a person can have more than one types of relationships at the same time and hence this is tracked at the Job level. However for Workday, there will be just one type of relationship possible at a point in time.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ActiveFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Worker Active Flag. Identifies whether the Worker is Active or not.
                  
                  For data coming from PeopleSoft, this is derived basis on HR_STATUS of Jobs a person is having. If there is any active job available with the Worker then this flag is set to true. Usually there can not be a situation where for a person, primary job is inactive but secondary job is active however derivation doesn't keep any such check and relies on the validations done within the source.
                  
                  In case of Workday, this attribute is directly available. However in some cases, it is updated as well. E.g. for people on passive phase of Partial retirement or on Early retirement are considered as inactive. In general, in case of Workday, terminated workers, retired workers and workers on passive phase of Partial retirement or on Early retirement would be inactive.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="LastActiveStatusChangeDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Last Active Status Change Date. This is the most recent date when the worker's status was changed. Here status refers to the Active Flag, not the Worker Status Code.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MostRecentHireDate" maxOccurs="1" minOccurs="0" type="xs:date" erds:obfuscationRequired="true" erds:obfuscationType="Scrambling" erds:scramblingFactor="89">
         	<xs:annotation>
         		<xs:documentation>
         			Most Recent Hire Date. This is the most recent hire date for the worker. In case of Contingent Worker, this will refer to the Contract Start Date.
                  Usually in case of rehiring same worker, this will be representing data for most recent hire event.
                  
                  While taking data from PeopleSoft, this will be driven by the record from Primary Job; however in case of Workday, this attribute is directly available at the Worker level.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="OriginalHireDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Original Hire Date. This is the date when the Worker was hired earliest.
                  
                  In case of PeopleSoft, this information is available at the employment level and is populated using the employment record associated with the primary job at any point in time. Also for contingent workers, this date is overwritten and hence doesn't reflect the first time a contingent worker was onboarded.
                  
                  For Workday, this attribute is directly available and no other logic is required to populate this attribute.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MostRecentHireReasonCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Most Recent Hire Rason Code. This is identifying the hire reason code for the most recent hire event for the Worker.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="EmploymentEndDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Employment End Date. This represents the end date of the employment for Contracted Employees or Fixed Term Employees.
                  
                  Please note that this is not applicable for Contingent Workers or Persons of Interest.
                  
                  From future termination perspective, three date attributes should be considered
                  1. Contract End Date - This is the date of closure of contract for a contingent worker
                  2. Employment End Date - This is the employment end date for a fixed term employee
                  3. Assigned Termination Date - This is the date assigned for termination for an employee who has either submitted resignation or has been notified for termination by HR or Manager
                  
                  At present, these dates are not available from PeopleSoft however will be populated through Workday data.
                  
                  Additionally, future version of Worker record will also be added if a future termination event is available.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="FirstDayOfWorkDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			First Day of Work Date. Captures first day of work; primarily applies for Payroll.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ExpectedRetirementDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Expected Date of Retirement for Worker.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="WorkerRetiredFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Worker Retired Flag. Identifies if the worker is currently a retiree pensioner or not. In case of PeopleSoft, retired workers/pensioners are added as POIs with type as 90005 and are given an active job record. This is how this flag is also derived. However, in case of Workday, this attribute is directly available. In Workday as well as Peoplesoft, this flag indicates that the worker is a pensioner. In Workday, a worker becomes a pensioner when a business process of Add Retiree Status is run for the worker. When this process is run,this flag is set to true.Another key difference is that in case of Workday, retired workers cannot have any active job, actually these are maintained as inactive workers.
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MostRecentRetirementDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Most Recent Retirement Date. This is the most recent retirement date. This is for the scenario where retirement has taken place.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RetireeOrganizationIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Retiree Organization Identifier. Identifies the retiree organization for the Worker if retired/pensioner.
                  
                  There are three different kind of retiree organizations possible. One to identify general employee who is now pensioner, another is for VIPs and the third one is for beneficiaries, i.e. dependents who are getting the pension now.
                  
                  For adding a beneficiary as a pensioner, such people would need to be hired and retired to make them pensioners. This has been the approach in PeopleSoft and is also th approach in Workday.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CompanyServiceDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Company Service Date. This is employee's service date. Within dbPeople+, it is similar to Company Seniority Date.
                  
                  For PeopleSoft, this attribute is populated through the Company Seniority Date attribute available at the assignment level (in ASGN table) for the primary job at that point in time.
                  
                  From Workday, this information is available at the Worker level in the Worker Status area from Company Service Date attribute.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BenefitsServiceDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Benefits Service Date. Captures the date for calculation of benefits.
                  
                  In case of PeopleSoft, this attribute is derived from Service Date column at the assignment level (from ASGN table) from the primary job at that point in time. However from Workday, this attribute is directly available at the Worker level.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="WorkerTerminatedFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Worker Terminated Flag. Identifies whether the worker is currently terminated.
                  
                  This attribute is only available from Workday and no mapping has been done from PeopleSoft for this attribute.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MostRecentTerminationDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Most Recent Termination Date. Represents the most recent termination date. This value will be populated for workers who have been terminated, i.e. their termination event has occurred in history. This doesn't keep the forward looking view, i.e. date in future
                  
                  This attribute is applicable for the current or most recent employment for the Worker; hence for rehired workers (in PeopleSoft) who are still active, this value will not be populated from their earlier employment.
                  
                  In case of PeopleSoft, this is derived based on the termination date for the primary job whereas this is directly available from Workday.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PayThroughDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Pay through date for the most recent termination.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="TerminationCategoryCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Termination Category Code. Identifying the termination category for the most recent termination. Examples are Voluntary, Involuntary etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="TerminationReasonCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Termination Reason Code. Identifying the reason for the most recent Termination Event. E.g. Dissatisfied with Job, Dissatisfied with Pay etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="TerminationInvoluntaryFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Termination Involuntary Flag. Identifies if the termination was involuntary.
                  
                  This attribute is available from Workday and no mapping has been done yet from PeopleSoft. In case of PeopleSoft, it will be a derived attribute.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="NotEligibleForHireFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Not Eligibile for Hire Flag. Captures workers overall hire eligibility. In Workday, this is done based on a formula.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RegrettableTerminationFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Regrettable Termination Flag. Identifies whether the termination was regrettable.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="NotEligibleForRehireFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Not Eligible for Rehire Flag. Identifies if the worker was specified as not eligible for rehire on most recent termination.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="LastDayOfWorkDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Last Date of Work Date. This is the date identifying last date of work for the terminated worker. This will be populated for workers for whom the termination event has occurred. This is not keeping the forward looking view. 
                  
                  Last Date of Work is set for the worker while defining the Termination Date. Usually, both dates are same however, if required, sometimes physical and system access for people are revoked earlier and there will not be any requirement for them to come to office. This is where, last date of work is set earlier than the Termination Date. Another term used for this kind of scenario is Garden Leave. Although, garden leave is not a defined process in both the systems but this date can be used to identify the relevant details.
                  
                  In case of PeopleSoft, this value is taken from the primary job record at that point in time whereas from Workday, this attribute is directly available.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ResignationDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Resignation Date. This is the date when Worker submitted the resignation. This may not be available as currently the process doesn't support employee resigning through the system.
                  
                  As per current process, employee notifies the manager through email and basis on that, manager initiates the terminate process which allows manager to capture the notification date, i.e. when the employee notifies the manager for resignation.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="LastPaidDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Last date for which the worker was paid based on the most recent termination event.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ExpectedReturnDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Expected Return Date. Date when the worker is expected to return for most recent termination event.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="NotReturningFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Not Returning Flag. Identifies if the worker is not expected to return after most recent termination event.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="WorkerRehireFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Worker Rehire Flag. This is the flag identifying whether the worker is a rehire as part of the most recent hire event.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ProbationStartDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Probation Start Date. This is the start date of the probation period.
                  
                  This is directly available and mapped from Workday. No mapping has been done yet for this attribute from PeopleSoft.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ProbationEndDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Probation End Date. This is the end date for the probation period for Worker.
                  
                  This is directly available and mapped from Workday. No mapping has been done yet for this attribute from PeopleSoft.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="FirstEmploymentStartDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			First Employment Start Date. This is the date when the worker first started employment for any employer. Not available yet from PeopleSoft or Workday.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="WorkerStatusCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Worker Status Code. Captures specific status of a worker. Examples are Terminated, Deceased, Active, Suspended etc. This is also referred to as the Payroll Status Code within PeopleSoft.
                  
                  For Employment Summary, this attribute is not being populated from PeopleSoft. Within PeopleSoft, this attribute is available at the Job level and is available at the same level in the LDM as well.
                  
                  In case of Workday, this is a derived attribute. No such status is provided directly but this information needs to be derived based on various details e.g. Leave of Absence Details, Termination Details etc. For this reason, this attribute is derivable from Workday at the Worker level. Same values are also made available at the Job level and values are kept same for all the active occurrences.
                  
                  For inactive jobs, the value is set to terminated. For inactive jobs from PeopleSoft, those will continue with the value which they had in PeopleSoft.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="SeniorityDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Seniority Date identifies the seniority of a person in company and used for various calculation in benefit, retirement etc.
                  
                  In case of PeopleSoft, this attribute is taken from the Organization Instance Service Date for the employment instance associated with the Primary job at that point in time. Ideally there should be just one Organization Instance record available for the Worker but there are scenarios where more than one instances are possible.
                  
                  For Workday, this attribute is available directly at the Worker level.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CreateAccessDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Create Access Date. Captures the date details for granting access to the Worker for DB premises as per rules and regulations implemented in the source system. This is the date since when the worker will be/has been provided access to DB.
                  
                  Before Workday Go-Live, the process of defining the access is within dbPeople+ and hence this attribute will be sourced from PeopleSoft; however post Workday Go-Live, the system of having this process is going to be dbAccessGate which is the right place for such a process and hence data will be received from dbAccessGate.
                  
                  dbAccessGate will receive the events from HR and basis on defined rules, will be setting up this attribute.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CreateAccessTime" maxOccurs="1" minOccurs="0" type="xs:time">
         	<xs:annotation>
         		<xs:documentation>
         			Create Access Time. Captures the time details for granting access to the Worker for DB premises as per rules and regulations implemented in the source system. This is the time (in addition to create access date) since when the worker will be provided access to DB. Apart from time, this also holds the timezone information which should always be considered.
                  
                  Before Workday Go-Live, the process of defining the access is within dbPeople+ and hence this attribute will be sourced from PeopleSoft; however post Workday Go-Live, the system of having this process is going to be dbAccessGate which is the right place for such a process and hence data will be received from dbAccessGate.
                  
                  dbAccessGate will receive the events from HR and basis on defined rules, will be setting up this attribute.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RevokeAccessDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Revoke Access Date. Captures the date details for revoking access to the Worker for DB premises as per rules and regulations implemented in the source system. This is the date since when the access to DB for the worker will be/has been revoked.
                  
                  Before Workday Go-Live, the process of defining the access is within dbPeople+ and hence this attribute will be sourced from PeopleSoft; however post Workday Go-Live, the system of having this process is going to be dbAccessGate which is the right place for such a process and hence data will be received from dbAccessGate.
                  
                  dbAccessGate will receive the events from HR and basis on defined rules, will be setting up this attribute.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RevokeAccessTime" maxOccurs="1" minOccurs="0" type="xs:time">
         	<xs:annotation>
         		<xs:documentation>
         			Revoke Access Time. Captures the time details for revoking access to the Worker for DB premises as per rules and regulations implemented in the source system. This is the time (in addition to revoke access date) since when the access to DB for the worker will be/has been revoked. Apart from time, this also holds the timezone information which should always be considered.
                  
                  Before Workday Go-Live, the process of defining the access is within dbPeople+ and hence this attribute will be sourced from PeopleSoft; however post Workday Go-Live, the system of having this process is going to be dbAccessGate which is the right place for such a process and hence data will be received from dbAccessGate.
                  
                  dbAccessGate will receive the events from HR and basis on defined rules, will be setting up this attribute.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ReactivateAccessDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Reactivate Access Date. Captures the date details for reactivating access to the Worker for DB premises as per rules and regulations implemented in the source system. This is the date since when access to DB for the worker will be/has been reactivated.
                  
                  Before Workday Go-Live, the process of defining the access is within dbPeople+ and hence this attribute will be sourced from PeopleSoft; however post Workday Go-Live, the system of having this process is going to be dbAccessGate which is the right place for such a process. A key difference between dbAccessGate and PeopleSoft is how the reactivations are handled. dbPeople+ does add the reactivation date and time details whereas dbAccessGate updates the latest access managment record or if required removes the record depending on what kind of change needs to be made.
                  
                  For this reason, this attribute will only be available from PeopleSoft but not from Workday.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ReactivateAccessTime" maxOccurs="1" minOccurs="0" type="xs:time">
         	<xs:annotation>
         		<xs:documentation>
         			Reactivate Access Time. Captures the time details for reactivating access to the Worker for DB premises as per rules and regulations implemented in the source system. This is the time (in addition to reactivate access date) since when access to DB for the worker will be/has been reactivated.
                  
                  Before Workday Go-Live, the process of defining the access is within dbPeople+ and hence this attribute will be sourced from PeopleSoft; however post Workday Go-Live, the system of having this process is going to be dbAccessGate which is the right place for such a process. A key difference between dbAccessGate and PeopleSoft is how the reactivations are handled. dbPeople+ does add the reactivation date and time details whereas dbAccessGate updates the latest access managment record or if required removes the record depending on what kind of change needs to be made.
                  
                  For this reason, this attribute will only be available from PeopleSoft but not from Workday.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AccessManagementRecordIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Access Management Record Identifier. This attribute represents the current access sequence being used between dbPeople+ and dbAccessgate and dbAccess. The value for a worker is incremented
                  1. If there is a rehire or new engagement
                  2. Manually incremented upon request
                  
                  Currently the access management process sits within dbPeople+ and above explanation is true from this perspective. Going forward, this process will be driven from dbAccessGate which is the right place of this process and this attribute will still be relevant. From dbAccessGate perspective, this represents the sequence number of Access Management Record and supports identification of the most recent access management record.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="InternationalAssignmentFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			International Assignment Flag. Indicates that the worker is on international assignment currently. This is only set for long term assignments, not for short term assignments.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DBLegiIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			DB Legi Identifier. This is the identifier assigned to worker by dbLegi system for certain authorisations. This data is not owned by HR and is received from LDAP.
                  HRSERVICE-19272: With this change, the DB Legi Identifier is no longer getting sourced from LDAP, rather, it is getting sourced from dbAG.
                  
                  This is being considered as a technical debt currently as ideal approach for any consumer to take this data is from LDAP or dbLegi system; however we are continuing with this attribute as of now to support our existing data consumers.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DBLoginIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			DB Login Identifier. This is the windows/other operating system login name which has been provided to Worker within DB. This data is defined in LDAP and sourced from there in eRDS.
                  HRSERVICE-19272: With this change, the DB Login Identifier is no longer getting sourced from LDAP, rather, it is getting sourced from dbAG.
                  
                  This is being considered as a technical debt currently as ideal approach for any consumer to take this data is from LDAP; however we are continuing with this attribute as of now to support our existing data consumers.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="NotificationDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Notification Date. This attribute captures the date when the worker notified manager/organization about leaving the organization or manager/organization notified the employee of their termination. This may or may not be same as resignation date.
                  
                  This date is captured as part of the Revoke Access process. This process is applicable for employees only and hence currently this will be populated only for employees.
                  
                  For a Resignation, it is date on which employee formally notifies the Bank they are resigning; 
                  For a Retirement , it is the date at which the Retirement is notified to the Bank;
                  For Manager Initiated, it is the date at which the individual is notified they will be leaving the Bank
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RecommendedTerminationDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Recommened Termination Date. This is usually  the Notification Date plus the Notice Period (if applicable). This is a recommended date and can be overridden. Final value should be taken from Assigned Termination Date.
                  
                  In case of PeopleSoft, Recommended and Assigned Termination Dates will have the same values as both are being populated from the same input column.
                  
                  This attribute is being deprecated and will not be available in future. Ideally Assigned Termination Date should be used as it is the final termination date set.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AssignedTerminationDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Assigned Termination Date. This is the effective date of the termination as assigned by manager/HR. Usually it is same as Recommended Termination Date however it can be overridden. E.g. in case of severance package availability, this might be taken from severance package.
                  
                  This is providing a forward looking view for termination process for a Worker. Please note that this is not applicable for Contingent Workers. However since all types of employees go through the Termination event, this will be available for all employees who are going to be terminated.
                  
                  Assigned Termination Date will also hold value once employee has been terminated and it will reflect the termination date.
                  
                  From future termination perspective, three date attributes should be considered
                  1. Contract End Date - This is the date of closure of contract for a contingent worker
                  2. Employment End Date - This is the employment end date for a fixed term employee; although please note that this is indicative in nature and hence an employee can be terminated before Employment End Date
                  3. Assigned Termination Date - This is the date assigned for termination for an employee who has elither submitted resignation or has been notified for termination by HR or Manager
                  
                  At present, these dates are not available from PeopleSoft however will be populated through Workday data.
                  
                  Additionally, future version of Worker record will also be added if a future termination event is available.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AssignedLastDayOfWorkDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Assigned Last Day of Work Date. This is the forward looking last day of work for a worker for whom the termination process has been initiated. For employees, usually it will be same as Assigned Termination Date.
                  
                  Earlier, this date was only kept for employees however now, this will also be populated for contingent workers.
                  
                  This attribute is now populated for inactive workers as well and it will be kept same as the actual last day of work date.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PhysicalAccessOnlyFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Physical Access only Flag. This flag identifies if the worker needs DB systems provisioning or not i.e. only physical access is required. This will be applicable for Contingent Workers or Persons of Interest only.
                  
                  In case of PeopleSoft, this is maintained through a field called as D_EMAILID_NEEDED in the table maintaining CWR data. In case of Workday, this will be maintained as a Worker flag.
                  
                  This flag might have values like true , false or null. If it is true then person needs only physical access to building premise but does not need IT system access, In case of value false, Person will have IT system access. If value is null then this information is not received from source itself.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CorporateTitleChangeDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Corporate Title Change Date captures date on which corporate title for worker was changed.
                  
                  In case of PeopleSoft, this date is derived by looking at certain Action and Action Reason values. While from Workday, this will be available through a calculated attribute.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CorporateTitleCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Corporate Title Code. Can also be referred to as Management Level. Identifies the corporate title for the Worker e.g. Director, Vice President, Analyst etc.
                  
                  Within PeopleSoft, this information is available at the Job level however this is more relevant at Worker level and will be derived based on the primary job of the Worker when populating within Worker Employment Summary. In case of Workday, this is available through a worker flag and will be at the Worker level.
                  
                  For contingent workers, corporate title is not there and will have value Z which is for Not Applicable. For employees, there will be a value available from the pre-defined list of corporate titles.
                  
                  Please see below the corporate title code descriptions.
                  
                  Value on the left is Source and Value on the right is eRDS
                  MANAGEMENT_LEVEL-6-2 - dbHierarchy
                  DNU Senior Analyst - E
                  managingDirector - M
                  director - D
                  vicePresident - V
                  assistantVicePresident - A
                  associate - L
                  analyst - B
                  noCorporateTitle - Z
                  notApplicable - Z
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MaterialRiskTakerFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Material Risk Taker Flag.This helps in identifying the staff who have a material impact on the institutions risk profile. This can be due to various factors/regulations e.g. InstVV or AIFMD.
                  
                  This flag intends to consolidate such factors and give a flag at the Worker level as long as it is alinging with the requirements set out by dbPerform. Currently from PeopleSoft, this flag will be derived based on InstVV Indicator available at the Job level.
                  
                  Further details on some factors are
                  1. InstVV MRT Flag - Members of staff whose professional activities have a material impact on the institution’s risk profile – subject to minimum deferral requirements and additional claw back provisions, in accordance with Ordinance on the Supervisory Requirements for Institutions Remuneration Systems ( Instituts-Vergütungsverordnung – InstitutsVergV )
                  2. AIFMD MRT Flag - In the aftermath of global financial crisis, EU drafted regulatory reform agendas in asset management industry in form of Alternative Investment Fund Managers Directive (AIFMD). These rules cover all identified staff members whose activities within the firm could have potentially material impact on fund's risk profile.This would include members of senior management , individuals in control or risk taking functions, or employees whose level of remuneration would comparable to aforementioned parties
                  
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="OffPremiseDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Off Premise Date. Indicates the date on which the employee leaves the DB premises. This attribute was included in the model to support US Benefits data requirements. US Benefits interface consumes this date for calculating the last day of benefits for employees who go for garden leave. This field was being maintained separately in dbPeople+ for US but not present in Workday. Hence while looking at data coming from dbPeople+, this date will only be available for US Workers.
                  
                  To support this requirement, in case of Workday, this attribute is populated from Last Date of Work and is not restricted to just US Workers.
                  
                  This attribute should be considered as a technical debt. This is a redundant information as Last Date of Work is already captured in Worker Employment Summary and this attribute will be populated from the same attribute in case of Workday.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ApplicantIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Applicant Identifier. Unique identifier for applicant or pre-hire. This will be available once a candidate reaches the pre-hire stage.
                  
                  Within Worker Employment Summary, this attribute captures the applicant identifier associated with the Worker. Applicant identifier will only be available if worker was added as an applicant/pre-hire. In case of migration, workers were only added as pre-hires and hence for such workers, we will only have Applicant Identifier, not the Candidate Identifier.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CandidateIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Candidate Identifier. This uniquely identifies the Candidate in the system.
                  
                  Within Worker Employment Summary, this attribute captures the candidate identifier associated with the Worker. A candidate identifier will only be available if worker was added as a candidate. In case of migration, workers were only added as pre-hires and hence for such workers, we will only have Applicant Identifier, not the Candidate Identifier.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MTARelevanceCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			MTA Relevance Code. This field denotes the MTA Relevance of a worker.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="HolidayScheduleReferenceIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Holiday Schedule Reference Identifier captures the holiday calendar associated with the Worker. Holiday calendars are assigned to workers basis on rules defined which may depend on Location and Legal Entity or Legal Entity alone. There is a perception that Holiday Calendars are associated with Location only however this is not the case and hence its not possible to capture this attribute in the Location entity. Since at any point in time, Worker would have one specific holiday calendar to be followed, it will be driven by the primary job of the Worker. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MandatoryTrainingFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			This attribute is applicable only for certain types of CWRs who are required to take mandatory training in Connect2Learn(C2L). Following are the different types of CWR who are applicable for this flag:
                  CWR - Time And Material - IT Vendor Resource - Offshore 
                  CWR - Time And Material - IT Vendor Resource - Onshore 
                  CWR - Time And Material - Non-IT Other Professional Services Resource 
                  CWR - Fixed Price - IT Vendor Resource - Offshore 
                  CWR - Fixed Price - IT Vendor Resource - Onshore 
                  CWR - Fixed Price - Non-IT Other Professional Services Resource 
                  In WD, this is configured as an effective dated custom object under the worker's additional data. The Manager/DBSponsor has the ability to set this flag in WD
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PBLoginIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			PB Login Identifier. This is the windows/other operating system login identifier which has been provided to Worker within Postbank. This data is being maintained currently in ICL and sourced from there in eRDS This is being considered as a technical debt currently as an ideal approach for any consumer to take this data is from DBAG; however we are continuing with this attribute as of now to support data consumers from Postbank side only. Any DB downstream systems should refrain from using this attribute.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PBInactiveFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			PB Inactive Flag.This flag denotes if a login identifier of a Postbank worker is inactive or not. This data is being maintained currently in ICL and sourced from there in eRDS. This is being considered as a technical debt currently as an ideal approach for any consumer to take this data is from DBAG; however we are continuing with this attribute as of now to support data consumers from Postbank side only. Any DB downstream systems should refrain from using this attribute.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ManagedServiceProviderIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			ManagedServiceProviderIdentifier: This is the identifier of custom organization of type Managed Service Provider
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="FunctionalTitle" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Functional Title: This is the title of functional role of the worker. This is applicable only for DWS workers currently as they use the Functional Role Framework. Corporate Title is not relevant for these workers. This attribute is available for Workday versions only.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="FormerPBWorkerFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Former Postbank Worker Flag. This is a static flag to show if a worker was a Postbank Employee. This flag is set for all the workers migrated to DB from PostBank and cannot be edited post migration. Also, there will not be any new workers post migration with this flag set to true. One of the use cases for this flag is for the training assignment. There may be some trainings that migrated workers need not complete. Based on this flag, trainings can be assigned. Basically this flag differentiates between the workers hired to DB directly and ones migrated from PostBank.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MTARelevanceAssignedOn" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			MTA Relevance Assigned On. It is the date from which the MTA relevance is effective for the associated worker.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CorporateTitleCodeDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Corporate Title Code Description gives the description of the Corporate Title Codes that are maintained in Workday. e.g. Managing Director,Director,Vice President,Assistant Vice President,Associate,Analyst etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="WorkerContractDetails" maxOccurs="1" minOccurs="0" type="WorkerContractDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Worker Contract Details. Will hold the information related to the contract for the Contingent Worker or Fixed Term Employee.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="EmployeeContractDetails" maxOccurs="unbounded" minOccurs="0" type="EmployeeContractDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Employee Contract Details. Captures the details around contracts associated with employees only, not for contingent workers or person of interest. Some examples are, contract associated with International Assignment.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="EngagementDataAdministratorDetails" maxOccurs="unbounded" minOccurs="0" type="EngagementDataAdministratorDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Engagment Data Administrator(EDA) Details captures the EDA assigned to the worker. An EDA is a delegate to the DB Sponsor of the CWR and there can be more than 1 EDA associated to a worker. In Workday, it is setup via custom organization. In PS, it was setup via governance role - GR000086. 
                  An EDA is always assigned for a CWR, but it is not mandatory. For e.g. EDA will not be assigned to a postiion under the scope of MSP. MSP positions will be managed via the MSP and the manager.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="WorkerEmploymentSummary" type="WorkerEmploymentSummary">
   	<xs:annotation>
   		<xs:documentation>
   			Worker Employment Summary.  Provides a quick summary on different employment perspectives for the Worker. This represents summary of worker's relationship with the organization and hence there will be one record for each Worker here. This is the place where holistic view of the employment will be captured and details pertaining to the overall relationship with organization for Worker will be maintained.
            
            The details here are as per the current employment of the Worker and hence most of the time, takes primary job into consideration for identifying the right details. In case of PeopleSoft, there has been challenges in terms of different values for certain elements for different jobs and in such scenarios, this approach has been adopted. However with Workday, most of the details are captured at the worker level and hence will be directly available.
            
            This entity also keeps details coming from some other sources but which are at Worker level and are associated with the employment information. Some examples are Create and Revoke Access Details from dbAG, dbLegi ID and Login ID coming from LDAP etc.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="JobClassificationDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Job Classification Details. Captures information on job classification and classification group. Provides a hierarchy for job classification. For a job/position/job profile, there can be multiple values associated. These are the industry or country standard values around Job. E.g. Job Classification Group can refer to International Standard Classification of Occupations with actual Job Classifications as Commissioned armed forces officers, Production managers in agriculture, forestry and fisheries etc.
            
            Currently this information is not available from source and hence not being made available through eRDS.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="JobClassificationCode" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Job Classification Code. Identifies the job classification for this job profile.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="JobClassificationGroupCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Job Classification Group Code. This is one level up for the Job Classification Hierarchy.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="JobClassificationDetails" type="JobClassificationDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Job Classification Details. Captures information on job classification and classification group. Provides a hierarchy for job classification. For a job/position/job profile, there can be multiple values associated. These are the industry or country standard values around Job. E.g. Job Classification Group can refer to International Standard Classification of Occupations with actual Job Classifications as Commissioned armed forces officers, Production managers in agriculture, forestry and fisheries etc.
            
            Currently this information is not available from source and hence not being made available through eRDS.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="CompanyInsiderDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Company Insider Details. Captures the company insider types applicable for this Job Profile/Job/Position. There can be more types associated with the given Job Profile/Job/Position. Example values are United States - SEC Section 16 - 10% Owner Insider, United States - SEC Section 16 - Board of Director Insider etc.
            
            Although the model supports capturing this information; current sources are not providing this detail and hence such is not available through eRDS.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="CompanyInsiderTypeCode" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Company Insider Type Code. Company insider type applicable for the job profile.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="CompanyInsiderDetails" type="CompanyInsiderDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Company Insider Details. Captures the company insider types applicable for this Job Profile/Job/Position. There can be more types associated with the given Job Profile/Job/Position. Example values are United States - SEC Section 16 - 10% Owner Insider, United States - SEC Section 16 - Board of Director Insider etc.
            
            Although the model supports capturing this information; current sources are not providing this detail and hence such is not available through eRDS.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="InternationalAssignmentDetails">
   	<xs:annotation>
   		<xs:documentation>
   			International Assignment Details. Captures international assignment details if the associated job refers to an international assignment.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="InternationalAssignmentTypeCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			International Assignment Type Code.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="InternationalAssignmentStartDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			International Assignment Start Date. Captures the start date of the international assignment if the associated job is for international assignment of the Worker.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="InternationalAssignmentExpectedEndDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			International Assignment Expected End Date. Date when this assignment is expected to end.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="HostCountryCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Host Country Code. Identifies the country of international assignment.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="HomeCountryCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Home Country Code. Identifies the home country of the worker in case of international assignment.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="HostLocationIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Host Location Identifier. Identifies the host location of the worker in case of international assignment.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="HomeLocationIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Home Location Identifier. Identifies the home location of the worker in case of international assignment.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="InternationalAssignmentDetails" type="InternationalAssignmentDetails">
   	<xs:annotation>
   		<xs:documentation>
   			International Assignment Details. Captures international assignment details if the associated job refers to an international assignment.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="JobTerminationDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Job Termination Details. Captures the termination details associated with the Job. It might be due to overall termination or end of the additional job. There can be multiple termination details associated for a job due to various reasons associated.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="JobTerminationEventClassificationCode" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Termination Event Classification Code. Event Classification Code associated with Termination.
                  Identifies the termination event. E.g. is it due to overall employee termination or end of additional job.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="JobTerminationReasonCode" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Job/Employment Termination Reason Code. This is the termination associated with current Job record, not the total relationship which worker has with the organization, although reason might refer to termination of total relationship of the worker as well.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="JobTerminationDetails" type="JobTerminationDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Job Termination Details. Captures the termination details associated with the Job. It might be due to overall termination or end of the additional job. There can be multiple termination details associated for a job due to various reasons associated.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="EmploymentJobProfileDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Employment Job Profile Details. Captures the job profile details associated with the job. Ideally details here will be available through Job Profile however in case of overrides, details should be available here.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="JobProfileIdentifier" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Job Profile Identifier. Primary key for the Job Profile data.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PreviousJobProfileIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Previous Job Profile Identifier. Identifies the previous job profile associated with the job.
                  
                  This is a technical debt now. This attribute was added to support the dbPerform requirements only and once dbPerform moves to Workday, this will be deprecated. Please do not use this attribute. This attribute is not available through Workday.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="JobExemptFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Job Exempt Flag indicates whether the worker is eligible for overtime payment as per the US Fair Labor Standards Act(FLSA). This is applicable only for US workers. Any other country putting someone in a non-exempt role will not have any impact within the system.
                  
                  FLSA status is determined by a host of criteria. If the are determined to be on exempt or non-exempt, they are matched to a role which matches the required FLSA status. In other words, the Job Exempt works through the Job Profiles however this data is being kept with the Worker as same job profile can be associated with many countries and only for US this will work and hence will be driven by the location of the Worker.
                  
                  This attribute is only being made available through Workday data and hence versions from PeopleSoft will not have this attribute populated.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="EmploymentJobProfileDetails" type="EmploymentJobProfileDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Employment Job Profile Details. Captures the job profile details associated with the job. Ideally details here will be available through Job Profile however in case of overrides, details should be available here.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="JobProbationPeriodDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Job Probation Period Details. Captures the probation period details associated with the job. Structure supports capturing multiple probation entries for the same job however this should not be the usual scenario.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="ProbationPeriodIdentifier" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Probation Period Identifier. Uniquely identifying the probation period.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ProbationStartDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Probation Period Start Date.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ProbationEndDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Probation Period End Date.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ProbationPeriodTypeCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Probation Period Type Code. Identifies the type of probation period. E.g. Hire, Performance Improvement Plan, Promotion etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ProbationPeriodReasonCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Probation Period Reason Code. Captures the reason for this probation period. E.g. New, Change, Extension etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ProbationExtendedEndDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Probation Period Extended End Date. Applicable if the probation period has been extended.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ProbationPeriodNote" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Probation Period Note. Capturing any notes or comments associated with this probation period record.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="JobProbationPeriodDetails" type="JobProbationPeriodDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Job Probation Period Details. Captures the probation period details associated with the job. Structure supports capturing multiple probation entries for the same job however this should not be the usual scenario.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="JobGovernanceRoleDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Job Governance Role Details. Captures some of the governance role details associated with a worker for given job.
            
            This entity will hold the Functional Manager and HR Advisor details for the Worker on the given position.
            
            Functional Manager relationship is established at the Position level and Worker inherits this relationship from the same. There can be just one functional manager for a Worker on a Position.
            
            HR Advisor relationship is also established at the Position level however there are some differences in terms of how this is established between PeopleSoft and Workday. In case of PeopleSoft, it is similar to Functional Manager where relationship is defined between two positions and there can be just one HR Advisor position for a given position. However, in case of Workday, HR Advisors are defined on Cost Centre and Location, and for a given position, intersection of the two entities for this role provides the HR Advisors. There can be more than one HR Advisors in Workday for a position. Currently, this model is supporting just one HR Advisor.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="FunctionalManagerWorkerIdentifier" maxOccurs="1" minOccurs="0" type="xs:string" erds:obfuscationRequired="true" erds:obfuscationType="Scrambling" erds:scramblingFactor="60">
         	<xs:annotation>
         		<xs:documentation>
         			Functional Manager Worker Identifier. Identifier of the Worker acting as Functional Manager for the current worker for the associated job.
                  
                  In case of Contingent Workers, this represents the DB Sponsor.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DottedLineReportingWorkerIdentifier" maxOccurs="1" minOccurs="0" type="xs:string" erds:obfuscationRequired="true" erds:obfuscationType="Scrambling" erds:scramblingFactor="70">
         	<xs:annotation>
         		<xs:documentation>
         			Dotted Line Reporting Worker Identifier. Identifier of the Worker acting as Dotted Line Reporting Manager for the current worker for the associated job.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="InheritedManagerFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Inherited Manager Flag indicates whether the Functional Manager is inherited or not. If the manager is inherited, then the flag will have the value - true and if the manager is not inherited, the value of this attribute will be false. This field is mapped only for the Workday versions, i.e. versions effective on or after 29, July 2019.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="JobGovernanceRoleDetails" type="JobGovernanceRoleDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Job Governance Role Details. Captures some of the governance role details associated with a worker for given job.
            
            This entity will hold the Functional Manager and HR Advisor details for the Worker on the given position.
            
            Functional Manager relationship is established at the Position level and Worker inherits this relationship from the same. There can be just one functional manager for a Worker on a Position.
            
            HR Advisor relationship is also established at the Position level however there are some differences in terms of how this is established between PeopleSoft and Workday. In case of PeopleSoft, it is similar to Functional Manager where relationship is defined between two positions and there can be just one HR Advisor position for a given position. However, in case of Workday, HR Advisors are defined on Cost Centre and Location, and for a given position, intersection of the two entities for this role provides the HR Advisors. There can be more than one HR Advisors in Workday for a position. Currently, this model is supporting just one HR Advisor.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="JobOrganizationDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Job Organization Details. Captures the organization details associated with the job. 
            
            For a worker, relationship with various kind of organizations e.g. Cost Centre, UBR, Access Type etc. is established at the Job level as these relationships are defined with the Position; in other words, job inherits these relationships from Position to start with. This also means that if a person is having multiple positions then there can be different assocations for each position. However there will be just one set of associations at that position level.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="CompanyOrganizationIdentifier" maxOccurs="1" minOccurs="0" type="xs:string" erds:obfuscationRequired="true" erds:obfuscationType="Scrambling" erds:scramblingFactor="9">
         	<xs:annotation>
         		<xs:documentation>
         			Company Organization Identifier is the unique identifier for each organization of type Company. Once the worker becomes a pensioner, this data is sourced from SAP for the primary job.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CostCenterOrganizationIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Cost Center Organization Identifier is the unique identifier for each organization of type Cost Center. Once the worker becomes a pensioner, this data is sourced from SAP for the primary job.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="SecondaryCostCenterOrganizationIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			This field receives value only for Postbank population. It is populated with Deutsche bank shadow cost center that corresponds to the respective Postbank cost center via mapping provided by the PB finance. It is used to determine the UBR code within existing DB UBR hierarchy. Access to this field would need additional level of approval in the current DTR process with co-ordination with finance. Cost Center Organization Identifier would still be populated with the Postbank cost centers in case of Postbank population.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AccessTypeOrganizationIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Access Type Organization Identifier is the unique identifier for each organization of type Access Type. Access Type Organization is a custom organization meant to set up access rules within the core platform for various kind of details. This is equivalent to the Business Unit details within dbPeople+.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PayGroupOrganizationIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Pay Group Organization Identifier is the unique identifier for each organization of type Pay Group. The identifier will be a combination of the Company and Paygroup in the case of PeopleSoft. In Workday the identifier would be a combination of Company, Country and Frequency.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CostCenterOrganizationEntryDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Cost Center Organization Entry Date. This is the date since when this cost center relationship has been effective. Once the worker becomes a pensioner, this data is sourced from SAP for the primary job.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PayGroupCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Pay Group Code is used to group employees by how they are paid and specifically used by payroll provider. For example, if Deutsche Bank has both salaried and hourly employees, a monthly paygroup can be set up for the salaried employees paid once a month, and another paygroup for hourly employees paid weekly. Pay Group will always be based on country, in some cases restricted by company/frequency. In Workday Pay Group will be maintained as organization.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="GermanPayrollCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			German Payroll Code. This attribute identifies the payroll associated with the worker and primarily applicable for worker population from Germany. From Workday, this data is driven by the custom organization defined with organization type as Germany Payroll Indicator (Postbank Only).
                  
                  The possible value from the source are for Deutsche Bank SAP Payroll, Postbank SAP Payroll, and Postbank Payroll - CS Seconded into DB Group. The value in source will be set by an integration that looks at the Works Council Organization and Worker Subtype. Where the worker subtype is CS Seconded into DB Group, the org will be as such; for all other worker sub-types, where the WC is mapped to Yellow locations, the org will be Postbank SAP Payroll; where the WC is mapped to Blue locations, the org will be Deutsche Bank Payroll. Where WC is ‘Not Applicable’, the org may be ‘Not Applicable’ or it may be left blank. The integration will run after specific BPs complete, e.g. when WC can be changed – Job Req, Change Job, for example. But it will be possible for a HR role to overwrite it via Change Organisation Assignments in exceptional cases.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="WorkersCouncilOrganizationIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Workers Council Organization Identifier is the unique identifier for each organization of type Workers Council.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="JobOrganizationDetails" type="JobOrganizationDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Job Organization Details. Captures the organization details associated with the job. 
            
            For a worker, relationship with various kind of organizations e.g. Cost Centre, UBR, Access Type etc. is established at the Job level as these relationships are defined with the Position; in other words, job inherits these relationships from Position to start with. This also means that if a person is having multiple positions then there can be different assocations for each position. However there will be just one set of associations at that position level.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="CompensationDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Compensation Details. Contains the basic compensation details of an employee. Apart from base payment details, also captures compensation package, grade and grade profile kind of details which are very specific to a job of an employee.
            
            Compensation is defined at the job level however it does not mean that every job will have compensation details. For each job, there will be one Compensation Details object encompassing various collections for different types of compenstations e.g. Base Pay, Allowance, One Time Payment etc.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="CompensationEffectiveDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Compensation Effective Date. Date from when the compensation is effective.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CompensationEventClassificationCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Event Classification Code. Captures the event associated with the compensation record.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CompensationEventClassificationCategoryCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Event Classification Category Code. Captures the event associated with the compensation record.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CompensationEventClassificationSubcategoryCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Event Classification Subcategory Code. Captures the event associated with the compensation record.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="EmployeeCompensationPackageVisibilityDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Employee Compensation Package Visibility Date. The date on which an employee can see the compensation changes in system.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CompensationPackageIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Compensation Package Identifier.
                  
                  The hierarchy in case of Compensation is Package --> Grade --> Grade Profile --> Step. However not all countries will be having Grade Profile and Step. These are used as per the needs.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CompensationGradeIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Compensation Grade Identifier. Although, this attribute is supposed to keep the identifier, currently it is mapped to hold the Compensation Grade Code for the employee.
                  
                  The hierarchy in case of Compensation is Package --> Grade --> Grade Profile --> Step. However not all countries will be having Grade Profile and Step. These are used as per the needs.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="GradeSourceIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Compensation Grade Source Identifier. Captures the reference id from the source for Compensation Grade.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="GradeName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Compensation Grade Name.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CompensationGradeProfileIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Compensation Grade Profile Identifier.
                  
                  The hierarchy in case of Compensation is Package --> Grade --> Grade Profile --> Step. However not all countries will be having Grade Profile and Step. These are used as per the needs.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="GradeProfileSourceIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Compensation Grade Profile Source Identifier. Captures the reference id from the source for Compensation Grade Profile.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="GradeProfileName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Compensation Grade Profile Name.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CompensationStepIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Compensation Step Identifier. Although, this field is supposed to hold the identifier, currently it is mapped to keep the code value.
                  
                  The hierarchy in case of Compensation is Package --> Grade --> Grade Profile --> Step. However not all countries will be having Grade Profile and Step. These are used as per the needs.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="StepSourceIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         </xs:element>
         <xs:element name="StepName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Compensation Step Name.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CompensationProgressionStartDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Compensation Progression Start Date. Start date for the Compensation Step progression.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CompensationPrimaryBasisName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Compensation Primary Basis Name. Compensation Primary Basis will have single generic name across bank.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CompensationTotalBasePaymentAmount" maxOccurs="1" minOccurs="0" type="xs:float">
         	<xs:annotation>
         		<xs:documentation>
         			Compensation Total Base Payment Amount. Compensation total base pay will hold total fixed pay. It will be calculated in Workday. It won’t include any compensation type other than fixed pay. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MinimumPayRange" maxOccurs="1" minOccurs="0" type="xs:float">
         	<xs:annotation>
         		<xs:documentation>
         			Minimum Pay Range is the minimum amount that needs to be paid to an employee.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MaximumPayRange" maxOccurs="1" minOccurs="0" type="xs:float">
         	<xs:annotation>
         		<xs:documentation>
         			Maximum Pay Range should be the maximum amount that can be paid to an employee.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CommissionEligibleFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Commission Eligible Flag identifies whether the position/job is eligible for commission. In Workday, a commission plan is setup which helps in identifying whether the position is eligible for commission. The amount for this commission plan does not hold any significance. This field should not be confused with the commission OTP which is paid out each month.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CommissionEligibilityStartDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Commission Eligibility Start Date is the date on which the position/job becomes eligible for commission. In Workday, it is the effective date of the commission compensation plan.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CompensationProgramCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Indicates the Compensation Program calculated in Reward platform as per the DB Compensation Framework and helps to identify which worker fall under which process e.g. who is eligible for Recognition or IVC. Compensation program is calculated for rolling 3 years period i.e. for the last year, current year and the next year. Therefore, eRDS will also publish the Compensation program for these 3 years. In Reward, the compensation program is ideally refreshed every week and would change depend on the underlying data used to derive the comp program or if the derivation logic has changed.
                  This attribute is mapped only for Workday versions, PeopleSoft versions are unmapped.Please note this is applicable for only EMPs.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CompensationProgramStartDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Indicates the start date of the compensation program.Please note this is applicable for only EMPs.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CompensationProgramEndDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Indicates the end date of the compensation program.Please note this is applicable for only EMPs.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MaximumNominationValue" maxOccurs="1" minOccurs="0" type="xs:float">
         	<xs:annotation>
         		<xs:documentation>
         			Maximum Nomination Value indicates the maximum annual award value calculated for recognition eligible workers which is usually 10% of Total Fixed Pay. The calculation of the Total Fixed Pay is defined in Reward platform and hence Reward platform is the authoritative source for Maximum Nomination Value. This field is available only for versions created from Workday, i.e. versions effective on/after 29, July 2019.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="NominationCurrencyCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Nomination Currency Code indicates the currency of the Maximum Nomination Value.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BasePaymentPlanDetails" maxOccurs="unbounded" minOccurs="0" type="BasePaymentPlanDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Base Payment Plan Details. Captures employee's base pay plan including annual salary, monthly salary or hourly salary.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AllowancePlanDetails" maxOccurs="unbounded" minOccurs="0" type="AllowancePlanDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Allownace Plan Details. Allowance plan will have different types of allowances like house allowance, car allowance, mobile allowances etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="OneTimePaymentPlanDetails" maxOccurs="unbounded" minOccurs="0" type="OneTimePaymentPlanDetails">
         	<xs:annotation>
         		<xs:documentation>
         			One Time Payment Plan Details. One time payment is the compensation which is paid once like award, signing bonus, retention etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BonusPlanDetails" maxOccurs="unbounded" minOccurs="0" type="BonusPlanDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Bonus Plan Details. Captures the plans aligning to Bonus kind of structure for the employee. Examples are RTC, Guarantee etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CommissionPlanDetails" maxOccurs="unbounded" minOccurs="0" type="CommissionPlanDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Commission Plan Details. Captures the different commission plans applicable for the employee on this job.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PeriodSalaryPlanDetails" maxOccurs="unbounded" minOccurs="0" type="PeriodSalaryPlanDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Period Salary Plan Details. In countries like USA, employees are paid 13 month's salary in 12 months. Period Salary Plan is used to assign extra months, weeks, or days of pay to employees.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MiscellaneousPaymentPlanDetails" maxOccurs="unbounded" minOccurs="0" type="MiscellaneousPaymentPlanDetails">
         	<xs:annotation>
         		<xs:documentation>
         			MiscellaneousPayment Plan Details. Miscellaneous payment which can't be categoized as of now. Once Workday does proper categorization, this entity might be decommissioned.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="CompensationDetails" type="CompensationDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Compensation Details. Contains the basic compensation details of an employee. Apart from base payment details, also captures compensation package, grade and grade profile kind of details which are very specific to a job of an employee.
            
            Compensation is defined at the job level however it does not mean that every job will have compensation details. For each job, there will be one Compensation Details object encompassing various collections for different types of compenstations e.g. Base Pay, Allowance, One Time Payment etc.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="BasePaymentPlanDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Base Payment Plan Details. Captures employee's base pay plan including annual salary, monthly salary or hourly salary.
            
            With PeopleSoft, only FPBASE was being captured in this section; however with Workday, there are some more types of compensations coming in this cateogry. These other compensations are FPBASEATZ (Partial Retirement/ATZ) and HOURLYFPBASE (Base Hourly).
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="BasePaymentPlanCode" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Compensation Plan Code for Base Pay. Identifies type of Base Payment applicable for this entry.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BasePaymentPlanName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Compensation Plan Name for Base Pay. This is the description associated with the Base Payment Plan Code; however at the moment, values are same as codes which is just to support the current consumption pattern.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BasePaymentPlanElementName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Reference element representing a unique instance of Compensation Element. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BasePaymentPlanEffectiveStartDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Base Payment Plan Effective Start Date. The date on which Base Pay Plan is effective from.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BasePaymentPlanExpectedEndDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Base Payment Plan Expected End Date. The expected date on which Base Pay Plan will be ended. In Workday, salary payment will be stopped once the end date is reached, hence workday does not keep this field.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BasePaymentPlanChangeReasonCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Base Payment Plan Change Reason Code. Reason for base pay plan change. This is specific to PeopleSoft. Workday keeps compensation change information at Compensation level and not at individual compensation component.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BasePaymentPlanAmount" maxOccurs="1" minOccurs="0" type="xs:float" erds:obfuscationRequired="true" erds:obfuscationType="Masking">
         	<xs:annotation>
         		<xs:documentation>
         			Base Payment Plan Amount. Base Payment Plan Amount is the 100% amount of the base pay which is assigned to a person.
                  
                  Technical Debt: This attribute is a technical debt. It was added initially however now the annual amount attribute is in use and the right one to be referred to. This attribute is not being populated while taking data from Workday; only available from PeopleSoft.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BasePaymentAnnualAmount" maxOccurs="1" minOccurs="0" type="xs:float" erds:obfuscationRequired="true" erds:obfuscationType="Masking">
         	<xs:annotation>
         		<xs:documentation>
         			Base Payment Annual Amount is the 100% amount of the base pay which is assigned to a person. This holds the applicable base pay amount for the Worker on the annual basis, based on the FTE for the worker. This has nothing to do with the joining time of the worker and hence do not keep prorated amount based on the time spent by the worker in the organization.
                  
                  In case of PeopleSoft, there has been some differences if FTE doesn't reflect the correct part time for the Worker which is in SAP.
                  
                  While populating from Workday, if FTE does not need to be applied or if it needs to be applied but is 100% then Workday provides the annual amount and there is no part for Prorated amount. However if FTE needs to be applied and FTE is not 100% then Pro-rated amount is also made available in incoming message and is used to populate this field, which is the annual amount but as per the FTE for the Worker on this job. We do not receive pro-rated amount based on joining of a worker, e.g. if worker is joining mid year and is 100% FTE, we will still get the full annual salary from Workday
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BasePaymentActualAmount" maxOccurs="1" minOccurs="0" type="xs:float" erds:obfuscationRequired="true" erds:obfuscationType="Masking">
         	<xs:annotation>
         		<xs:documentation>
         			Base Payment Actual Amount is the prorated amount of the base pay which is assigned to a person. 
                  
                  Technical Debt: This attribute has been maintained only from historical data perspective. Ideally there is no purpose of the actual amount field for Base Pay. Annual Amount attribute keeps the applicable base pay amount for the Worker and is the basis of actual payout by the payroll systems. This attribute is not being populated from Workday; only available from PeopleSoft.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BasePayFullFTEAmount" maxOccurs="1" minOccurs="0" type="xs:float">
         	<xs:annotation>
         		<xs:documentation>
         			Field provides unadjusted Base salary plan amount for a worker.This field is populated for both cases when Apply FTE = True / False
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BasePaymentPlanCurrencyCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Base Payment Plan Currency Code. Currency in which compensation will be paid out.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BasePaymentPlanFrequencyCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Base Payment Plan Frequency Code.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BasePaymentPlanCommentText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Base Payment Plan Comment Text. Compensation comments.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ApplyFullTimeEquivalentFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Apply Full Time Equivalent Flag. This attribute identifies if the Full Time Equivalent value is being applied to the Base Pay Amount. If this flag is false, then there is no need of the FTE value and the full annual amount will be maintained; however if this flag is true then the Prorated amount based on the FTE is maintained in the Annual Amount field.
                  
                  This attribute was not available from PeopleSoft. Relevance of this attribute is only there from Workday data perspective.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="BasePaymentPlanDetails" type="BasePaymentPlanDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Base Payment Plan Details. Captures employee's base pay plan including annual salary, monthly salary or hourly salary.
            
            With PeopleSoft, only FPBASE was being captured in this section; however with Workday, there are some more types of compensations coming in this cateogry. These other compensations are FPBASEATZ (Partial Retirement/ATZ) and HOURLYFPBASE (Base Hourly).
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="AllowancePlanDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Allowance Plan Details. This structure keeps details of the various allowances for the worker which are part of the compensation details. Examples are house allowance, car allowance, mobile allowances etc.
            
            The list of allowances is very long and there has been some changes as well while moving to Workday.
            
            Some of the allowances like FPLHFN and FPEXPHMSAL has been decommissioned
            
            There is one allowance, DBENRGRAT which has been now moved to One Time Payment.
            
            On the other hand, a new allowance has been added from Workday perspective called as FPAFPS which was earlier part of the Bonus structure.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="AllowancePlanCode" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Allowance Plan Code. Identifies the specific type of allowance plan associated with this entry.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AllowancePlanName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Compensation plan name for allowance.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AllowancePlanElementName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Reference element representing a unique instance of Allowance Element. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AllowancePlanChangeReasonCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Allowance Plan Change Reason Code. Reason for allowance pay plan change. This is specific to PeopleSoft. Workday keeps compensation change information at Compensation level and not at individual compensation component.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AllowancePlanEffectiveStartDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Allowance Plan Effective Start Date. The date from which allowance will be effective.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AllowancePlanExpectedEndDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Allowance Plan Expected End Date. Expected date till when allowance will be effective.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AllowanceAmount" maxOccurs="1" minOccurs="0" type="xs:float" erds:obfuscationRequired="true" erds:obfuscationType="Masking">
         	<xs:annotation>
         		<xs:documentation>
         			Allowance Amount. This is the total amount applicable for this allowance for the worker.
                  
                  Technical Debt: This attribute is a technical debt. It was added initially however now the annual amount attribute is in use and the right one to be referred to. This attribute is not being populated while taking data from Workday; only available from PeopleSoft.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AllowanceAnnualAmount" maxOccurs="1" minOccurs="0" type="xs:float" erds:obfuscationRequired="true" erds:obfuscationType="Masking">
         	<xs:annotation>
         		<xs:documentation>
         			Allowance Annual Amount is the 100% amount of the allowance pay assigned to a person. 
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AllowanceActualAmount" maxOccurs="1" minOccurs="0" type="xs:float" erds:obfuscationRequired="true" erds:obfuscationType="Masking">
         	<xs:annotation>
         		<xs:documentation>
         			Allowance Actual Amount is the prorated amount of the allowance pay assigned to a person. 
                  
                  Technical Debt: This attribute has been maintained only from historical data perspective. Annual Amount attribute keeps the applicable allowance amount for the Worker and is the basis of actual payout by the payroll systems. This attribute is not being populated from Workday; only available from PeopleSoft.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AllowancePayFullFTEAmount" maxOccurs="1" minOccurs="0" type="xs:float">
         	<xs:annotation>
         		<xs:documentation>
         			Field provides unadjusted Allowance salary plan amount for a worker.This field is populated for both cases when Apply FTE = True / False
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AllowanceCurrencyCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Allowance Currency Code. Currency in which allowance will be paid.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AllowanceFrequencyCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Allowance Frequency Code. Frequency of allowance payment. For allowance, frequency will always be Annual.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AllowanceCommentText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Allowance Comment Text. Comments for allowance.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ApplyFullTimeEquivalentFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Apply Full Time Equivalent Flag. This attribute identifies if the Full Time Equivalent value is being applied to the Allowance Pay Amount. If this flag is false, then there is no need of the FTE value and the full annual amount will be maintained; however if this flag is true then the Prorated amount based on the FTE is maintained in the Annual Amount field.
                  
                  This attribute was not available from PeopleSoft. Relevance of this attribute is only there from Workday data perspective.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="AllowancePlanDetails" type="AllowancePlanDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Allowance Plan Details. This structure keeps details of the various allowances for the worker which are part of the compensation details. Examples are house allowance, car allowance, mobile allowances etc.
            
            The list of allowances is very long and there has been some changes as well while moving to Workday.
            
            Some of the allowances like FPLHFN and FPEXPHMSAL has been decommissioned
            
            There is one allowance, DBENRGRAT which has been now moved to One Time Payment.
            
            On the other hand, a new allowance has been added from Workday perspective called as FPAFPS which was earlier part of the Bonus structure.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="CommissionPlanDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Commission Plan Details. Captures the different commission plans applicable for the employee on this job.
            
            This structure is not available from PeopleSoft. There are commissions being setup in Workday but those are not transactional rather just shows whether employee is entitled for commission or not. At present, this data is not being populated from Workday.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="CommissionPlanCode" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Commission Plan Code. Compensation code for commission payment.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CommissionPlanName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Commission Plan Name. Compensation plan name for commission payment.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CommissionPlanElementName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Commission Plan Element Name. Compensation element name for commission pay.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CommissionPaymentDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Commission Payment Date. Date on which commission will be paid.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CommissionPlanChangeReasonCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Commission Plan Change Reason Code. Reason for commission plan change. This is specific to PeopleSoft. Workday keeps compensation change information at Compensation level and not at individual compensation component.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CommissionTargetAmount" maxOccurs="1" minOccurs="0" type="xs:float" erds:obfuscationRequired="true" erds:obfuscationType="Masking">
         	<xs:annotation>
         		<xs:documentation>
         			Commission Target Amount. Target amount for the Commission Plan.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CommissionDrawAmount" maxOccurs="1" minOccurs="0" type="xs:float" erds:obfuscationRequired="true" erds:obfuscationType="Masking">
         	<xs:annotation>
         		<xs:documentation>
         			Commission Draw Amount. The minimum amount of commission which will be paid every month. When an employee earns commission less than the set draw amount, they keep their commission along with the difference between the commission amount and pre-determined, or “borrowed” draw. In a recoverable draw pay system, that borrowed amount carries over to the next period (a month if dealing with a monthly draw against commission), and must be paid back, which is unlike receiving a salary.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CommissionDrawFrequencyCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Commission Draw Frequency Code. Frequency for the Draw Amount.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CommissionDrawDuration" maxOccurs="1" minOccurs="0" type="xs:integer">
         	<xs:annotation>
         		<xs:documentation>
         			Commission Draw Duration. Description of the duration of the draw amount. For informational purposes. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CommissionCurrencyCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Commission Currency Code. Currency in which commission will be paid.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CommissionFrequencyCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Commission Frequency Code. Frequency for commission payment.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CommissionCommentsText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Commission Comments Text. Comments on commission.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CommissionRecoverableFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Commission Recoverable Flag. If true, the commission is recoverable. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CommissionCompensationYear" maxOccurs="1" minOccurs="0" type="xs:integer">
         	<xs:annotation>
         		<xs:documentation>
         			Commission Compensation Year. Year on which commision is paid.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="CommissionPlanDetails" type="CommissionPlanDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Commission Plan Details. Captures the different commission plans applicable for the employee on this job.
            
            This structure is not available from PeopleSoft. There are commissions being setup in Workday but those are not transactional rather just shows whether employee is entitled for commission or not. At present, this data is not being populated from Workday.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="OneTimePaymentPlanDetails">
   	<xs:annotation>
   		<xs:documentation>
   			One Time Payment Plan Details. One time payment is the compensation which is paid once like award, signing bonus, retention etc. According to Deutsche Compensation Tree commission and bonus are treated as One Time Payment, Hence this category will also hold commission and bonus. 
            
            In current structure of eRDS, Bonus entity won't hold actual bonus, It will hold deferred compensation, guarantee and RTC.
            
            There are many One Time Payment Plans which are being decommissioned in Workday. These are EBENOTH, NTICICI, NTICOINBGA, NTICOINMGA, NTICRDINT, NTIERP, NTIPOP, NTIRETCSS, NTISAREX, TIPRP, OCDCARS, OCDCPCDC, OCDCREOG, OCOPXINC, OCPLOCSH, TICOMMS, TICRDINT, TICSHSO, TIEXPAT.
            
            There is one plan, which was earlier Allowance but now being classified as One Time Payment (DBENGRAT).
            
            Some where earlier classified as Bonus which are now coming as One Time Payment. These are AVEIPMND, AVEIPVLN, OCOEQBUY, TIEQREU07.
            
            Then there are many which are moving from Miscellaneous to One Time Payment. These are FPAFPSOTP (earlier FPAFPS), AVKPAHD, AVKPANH, AVRESCSH, AVTEUA, FPDBXTRA, OCOSTAT1, OCOSTAT2.
            
            Finally there is one which is being added in Workday (AVEIP).
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="OneTimePaymentPlanCode" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			One Time Payment Plan Code. Compensation code for the one time payment.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="OneTimePaymentPlanName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			One Time Payment Plan Name. Compensation name for the one time payment.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="OneTimePaymentPlanElementName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Compensation element name for one time payment.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="OneTimePaymentDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			One Time Payment Date. The date when one time payment is paid.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="OneTimePaymentChangeReasonCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			One Time Payment Change Reason Code. Reason for one time pay plan change. This will not be applicable in case of Workday as in Workday, such reason is not available at the plan level but at the Compensation level.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="OneTimePaymentAmount" maxOccurs="1" minOccurs="0" type="xs:float" erds:obfuscationRequired="true" erds:obfuscationType="Masking">
         	<xs:annotation>
         		<xs:documentation>
         			One Time Payment Amount. Amount to be paid as One Time Payment.
                  
                  In PeopleSoft we have both Annual and Actual Amount. For One Time Payment, Actual Amount is the correct amount field (which stores payment amount) and Annual Amount should not be available, however in history Payment Amount is being stored in Annual Amount as well. Hence we are keeping all 3 amount fields. 
                  
                  Workday has only one amount field. But Beqom is using both annual and actual amount fields, hence annual and actual amount fields are not decommissioned, however all these fields will be populated from the same amount field in Workday.
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="OneTimePaymentAnnualAmount" maxOccurs="1" minOccurs="0" type="xs:float" erds:obfuscationRequired="true" erds:obfuscationType="Masking">
         	<xs:annotation>
         		<xs:documentation>
         			One Time Payment Annual Amount. Annual Amount to be paid as One Time Payment. This is mapped to PeopleSoft's Annual Amount.
                  
                  In PeopleSoft we have both Annual and Actual Amount. For One Time Payment, Actual Amount is the correct amount field (which stores payment amount) and Annual Amount should not be available, however in history Payment Amount is being stored in Annual Amount as well. Hence we are keeping all 3 amount fields. 
                  
                  Workday has only one amount field. But Beqom is using both annual and actual amount fields, hence annual and actual amount fields are not decommissioned, however all these fields will be populated from the same amount field in Workday.
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="OneTimePaymentActualAmount" maxOccurs="1" minOccurs="0" type="xs:float" erds:obfuscationRequired="true" erds:obfuscationType="Masking">
         	<xs:annotation>
         		<xs:documentation>
         			One Time Payment Actual Amount. Actual Amount to be paid as One Time Payment. This is mapped to PeopleSoft's Actual Amount.
                  
                  In PeopleSoft we have both Annual and Actual Amount. For One Time Payment, Actual Amount is the correct amount field (which stores payment amount) and Annual Amount should not be available, however in history Payment Amount is being stored in Annual Amount as well. Hence we are keeping all 3 amount fields. 
                  
                  Workday has only one amount field. But Beqom is using both annual and actual amount fields, hence annual and actual amount fields are not decommissioned, however all these fields will be populated from the same amount field in Workday.
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="OneTimePaymentCompensationYear" maxOccurs="1" minOccurs="0" type="xs:integer">
         	<xs:annotation>
         		<xs:documentation>
         			One Time Payment Compensation Year. Year on which one time payment is made. This is specific to peopleSoft.
                  
                  Comp year is used for one time paymenst as this helps identifies for which year the payment is made. Also there is no standard criteria to derive this field from any dates and entered manually in DB people+ this is required in Beqom. 
                  
                  Example : Comp year for Variable pay is last year and for some others it is current year
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="OneTimePaymentPercentage" maxOccurs="1" minOccurs="0" type="xs:float">
         	<xs:annotation>
         		<xs:documentation>
         			One Time Payment Percentage. Percentage of total base pay which will be paid as one time payment.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="OneTimePaymentCurrencyCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			One Time Payment Currency Code. Currency in which one time payment is done.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="OneTimePaymentCommentsText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			One Time Payment Comments Text. Additional information on one time payment.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="OneTimePaymentPayrollIntegrationFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			One Time Payment Payroll Integration Flag. Indicates if this payment needs to sent to payroll.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="OneTimePaymentPlanDetails" type="OneTimePaymentPlanDetails">
   	<xs:annotation>
   		<xs:documentation>
   			One Time Payment Plan Details. One time payment is the compensation which is paid once like award, signing bonus, retention etc. According to Deutsche Compensation Tree commission and bonus are treated as One Time Payment, Hence this category will also hold commission and bonus. 
            
            In current structure of eRDS, Bonus entity won't hold actual bonus, It will hold deferred compensation, guarantee and RTC.
            
            There are many One Time Payment Plans which are being decommissioned in Workday. These are EBENOTH, NTICICI, NTICOINBGA, NTICOINMGA, NTICRDINT, NTIERP, NTIPOP, NTIRETCSS, NTISAREX, TIPRP, OCDCARS, OCDCPCDC, OCDCREOG, OCOPXINC, OCPLOCSH, TICOMMS, TICRDINT, TICSHSO, TIEXPAT.
            
            There is one plan, which was earlier Allowance but now being classified as One Time Payment (DBENGRAT).
            
            Some where earlier classified as Bonus which are now coming as One Time Payment. These are AVEIPMND, AVEIPVLN, OCOEQBUY, TIEQREU07.
            
            Then there are many which are moving from Miscellaneous to One Time Payment. These are FPAFPSOTP (earlier FPAFPS), AVKPAHD, AVKPANH, AVRESCSH, AVTEUA, FPDBXTRA, OCOSTAT1, OCOSTAT2.
            
            Finally there is one which is being added in Workday (AVEIP).
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="PeriodSalaryPlanDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Period Salary Plan Details. In countries like USA, employees are paid 13 month's salary in 12 months. Period Salary Plan is used to assign extra months, weeks, or days of pay to employees.
            
            This structure is not in use for PeopleSoft data as above scenario is handled differently in PeopleSoft; however from Workday, this will be populated for relevant countries.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="PeriodSalaryPlanCode" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Period Salary Plan Code. Identifies the plan for the period salary details.
                  
                  Period salary is identified based on the part of FPBASE (Base Pay) plan. There are two values which are being supported from Workday currently. These are - PERSALEM1 and PERSALEM2 which are as per the one or two month extra pay based on Base pay.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PeriodSalaryPlanName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Period Salary Plan Name. This is the description for the code identifying the period salary. Currently the code value is being kept in this attribute.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PeriodSalaryPlanElementName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Reference element representing a unique instance of Compensation Element. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PeriodSalaryPlanPeriod" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Period Salary Plan Period. Identifies the period which should be used while calculating the Period Salary Amount. 
                  
                  If the Compensation Period Multiplier is 15.50 and the Compensation Period is Day, Workday assigns 15.50 extra days to pay employees. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PeriodSalaryPlanMultiplier" maxOccurs="1" minOccurs="0" type="xs:float">
         	<xs:annotation>
         		<xs:documentation>
         			Period Salary Plan Multiplier. Identifies the number of period units which should be used for calculating the Period Salary Amount.
                  
                  If the Compensation Period Multiplier is 15.50 and the Compensation Period is Day, Workday assigns 15.50 extra days to pay employees. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PeriodSalaryFrequencyCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Period Salary Frequency Code. Frequency in which period salary will be paid.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PeriodSalaryCurrencyCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Period Salary Currency Code. Currency in which period salary will be paid.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PeriodSalaryEffectiveStartDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Period Salary Effective Start Date. Date from when Period Salary will be effective.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PeriodSalaryAmount" maxOccurs="1" minOccurs="0" type="xs:float" erds:obfuscationRequired="true" erds:obfuscationType="Masking">
         	<xs:annotation>
         		<xs:documentation>
         			Period Salary Amount. This is the amount calculated based on base pay amount. This is calculated based on the Period and Multiplier for Period Salary and also considers the frequency of the base pay.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PeriodSalaryProratedAmount" maxOccurs="1" minOccurs="0" type="xs:float" erds:obfuscationRequired="true" erds:obfuscationType="Masking">
         	<xs:annotation>
         		<xs:documentation>
         			Period Salary Prorated Amount. Prorated Amount will be calculated based on FTE and joining date in the bank.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="PeriodSalaryPlanDetails" type="PeriodSalaryPlanDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Period Salary Plan Details. In countries like USA, employees are paid 13 month's salary in 12 months. Period Salary Plan is used to assign extra months, weeks, or days of pay to employees.
            
            This structure is not in use for PeopleSoft data as above scenario is handled differently in PeopleSoft; however from Workday, this will be populated for relevant countries.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="BonusPlanDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Bonus Plan Details. It holds all Deferred Compensation, RTC and Guarantee details.
            
            Workday will hold RTC, Guarantee and deferred compensations in Bonus component as there is no separate component to hold these compensation types. Hence ERDS is keeping the same structure. In future this entity may not be available and we will have entities like Deferred Compensation Details, Guarantee Compensation Details and Reference Total Compensation Details.
            
            This entity doesn't hold actual bonus. In DB bonus is treated as One Time Payment and actual bonus will be available in One Time Payment category.
            
            From PeopleSoft, there were many compensation plans which were aligned to Bonus however any of them have been decommissioned and some of them have been moved to One Time Payment.. One has been moved to Allowance. 
            
            Ones we will continue with Bonus in Workday are TOTINC, RTC and SUBSGN. Plans which have been moved to One Time Payment are AVEIPMND, AVEIPVLN, OCOPXINC and TIEQREU07. Plan FPAFPS has been moved to Allowance.
            
            There are some new values as well being introduced in Workday. These are OCSGN, OCVPAW and NTIRETAWA.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="BonusPlanCode" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Bonus Plan Code. Compensation plan code for bonus.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BonusPlanName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Bonus Plan Name. Compensation plan name for bonus.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BonusPlanElementName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Bonus Plan Element Name. Compensation element name for bonus payment.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BonusPlanChangeReasonCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Bonus Plan Change Reason Code. Reason for bonus pay plan change. This is specific to PeopleSoft. Workday keeps compensation change information at Compensation level and not at individual compensation component.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BonusPaymentDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Bonus Payment Date. The date on which bonus will be paid.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BonusEndDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Bonus End Date. This is specifically used for RTC end date. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BonusDefaultTargetAmount" maxOccurs="1" minOccurs="0" type="xs:float" erds:obfuscationRequired="true" erds:obfuscationType="Masking">
         	<xs:annotation>
         		<xs:documentation>
         			Bonus Default Target Amount. Target amount for this bonus plan. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BonusIndividualTargetAmount" maxOccurs="1" minOccurs="0" type="xs:float" erds:obfuscationRequired="true" erds:obfuscationType="Masking">
         	<xs:annotation>
         		<xs:documentation>
         			Bonus Individual Target Amount. Individual target amount that overrides the default target amount on the plan, provided Allow Target Override is enabled on the plan. Mutually exclusive from Individual Target Percent. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BonusDefaultTargetPercentage" maxOccurs="1" minOccurs="0" type="xs:float">
         	<xs:annotation>
         		<xs:documentation>
         			Bonus Default Target Percentage. Target percentage for this bonus plan. 
                  
                  This attribute was being taken from a field in case of PeopleSoft but this is not applicable in Workday and hence is not mapped.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BonusIndivitualTargetPercentage" maxOccurs="1" minOccurs="0" type="xs:float">
         	<xs:annotation>
         		<xs:documentation>
         			Bonus Individual Target Percentage. Individual target percent that overrides the default target percent on the plan, provided Allow Target Override is enabled on the plan. Mutually exclusive from Individual Target Amount. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BonusGuranteedMinimumFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Bonus Guaranteed Minimum Flag. If true, employee is guaranteed the minimum for the bonus plan.
                  
                  This attribute was not available from PeopleSoft but is being made available in case of Workday.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BonusPercentage" maxOccurs="1" minOccurs="0" type="xs:float">
         	<xs:annotation>
         		<xs:documentation>
         			Bonus Percentage. Percent of the bonus assigned. If none entered, default is 100%.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BonusCurrencyCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Bonus Currency Code. Currency in which bonus will be paid.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BonusFrequencyCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Bonus Frequency Code. Bonus payment frequency.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BonusCommentsText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Bonus Comments Text. Comments on bonus pay.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BonusCompensationYear" maxOccurs="1" minOccurs="0" type="xs:integer">
         	<xs:annotation>
         		<xs:documentation>
         			Bonus Compensation Year. This is specific to PeopleSoft. Comp year is used for bonus payments as this helps to identify for which year the payment is made. Also there is no standard criteria to derive this field from any dates and entered manually in DB people+ this is required in Beqom. 
                  
                  Example : Comp year for Variable pay is last year and for some others it is current year
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BonusPaymentTypeCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Bonus Payment Type Code. Workday doesn't have any compensation type as Guarantee. Hence it will be stored in Bonus plan in Workday. Guarantee has guarantee type as CND or blank in PeopleSoft which will be stored in this field.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="BonusPlanDetails" type="BonusPlanDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Bonus Plan Details. It holds all Deferred Compensation, RTC and Guarantee details.
            
            Workday will hold RTC, Guarantee and deferred compensations in Bonus component as there is no separate component to hold these compensation types. Hence ERDS is keeping the same structure. In future this entity may not be available and we will have entities like Deferred Compensation Details, Guarantee Compensation Details and Reference Total Compensation Details.
            
            This entity doesn't hold actual bonus. In DB bonus is treated as One Time Payment and actual bonus will be available in One Time Payment category.
            
            From PeopleSoft, there were many compensation plans which were aligned to Bonus however any of them have been decommissioned and some of them have been moved to One Time Payment.. One has been moved to Allowance. 
            
            Ones we will continue with Bonus in Workday are TOTINC, RTC and SUBSGN. Plans which have been moved to One Time Payment are AVEIPMND, AVEIPVLN, OCOPXINC and TIEQREU07. Plan FPAFPS has been moved to Allowance.
            
            There are some new values as well being introduced in Workday. These are OCSGN, OCVPAW and NTIRETAWA.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="MiscellaneousPaymentPlanDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Miscellaneous Payment Plan Details. This structure was created while taking compensation data from PeopleSoft; primarily to categorize the compensations which cannot be classified in other details. In other words, it was a catch all structure.
            
            With Workday having proper categorization, there will not be any compensation which will fit in this structure. Most of the compensatino plans which were part of Miscellaneous Payment Plans have been decomissioned. Remaining ones have been aligned with One Time Payment Plans.
            
            Ones which have been aligned with One Time Payment Plan are: FPAFPS (FPAFPSOTP), AVKPAHD, AVKPANH, AVRESCSH, AVTEUA, FPDBXTRA, OCOSTAT1 and OCOSTAT2
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="MiscellaneousPaymentPlanCode" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Miscellaneous Payment Plan Code. Compensation plan code for Miscellaneous payment.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MiscellaneousPaymentPlanName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Miscellaneous Payment Plan Name. Compensation plan name for Miscellaneous payment.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MiscellaneousPaymentChangeReasonCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Miscellaneous Payment Change Reason Code. Reason for Miscellaneous Payment plan change.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MiscellaneousPaymentEffectiveDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Miscellaneous Payment Effective Date. This is internal date for PeopleSoft.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MiscellaneousPaymentStartDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Miscellaneous Payment Start Date.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MiscellaneousPaymentEndDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Miscellaneous Payment End Date.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MiscellaneousPaymentDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Miscellaneous Payment Date. The date on which Miscellaneous Payment is done.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MiscellaneousPaymentAnnualAmount" maxOccurs="1" minOccurs="0" type="xs:float" erds:obfuscationRequired="true" erds:obfuscationType="Masking">
         	<xs:annotation>
         		<xs:documentation>
         			Miscellaneous Payment Annual Amount.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MiscellaneousPaymentActualAmount" maxOccurs="1" minOccurs="0" type="xs:float" erds:obfuscationRequired="true" erds:obfuscationType="Masking">
         	<xs:annotation>
         		<xs:documentation>
         			Miscellaneous Payment Actual Amount
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MiscellaneousPaymentCompensationyear" maxOccurs="1" minOccurs="0" type="xs:integer">
         	<xs:annotation>
         		<xs:documentation>
         			Miscellaneous Payment Compensation Year. This is specific to PeopleSoft. Comp year is used for bonus paymenst as this helps to identify for which year the payment is made. Also there is no standard criteria to derive this field from any dates and entered manually in DB people+ this is required in Beqom. 
                  
                  Example : Comp year for Variable pay is last year and for some others it is current year
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MiscellaneousPaymentCurrencyCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Miscellaneous Payment Currency Code. Currency in which Miscellaneous Payment will be paid.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MiscellaneousFrequencyCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Miscellaneous Frequency Code.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MiscellaneousPaymentCommentsText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Miscellaneous Payment Comments Text. Commens on Miscellaneous Payment.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="MiscellaneousPaymentPlanDetails" type="MiscellaneousPaymentPlanDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Miscellaneous Payment Plan Details. This structure was created while taking compensation data from PeopleSoft; primarily to categorize the compensations which cannot be classified in other details. In other words, it was a catch all structure.
            
            With Workday having proper categorization, there will not be any compensation which will fit in this structure. Most of the compensatino plans which were part of Miscellaneous Payment Plans have been decomissioned. Remaining ones have been aligned with One Time Payment Plans.
            
            Ones which have been aligned with One Time Payment Plan are: FPAFPS (FPAFPSOTP), AVKPAHD, AVKPANH, AVRESCSH, AVTEUA, FPDBXTRA, OCOSTAT1 and OCOSTAT2
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="LeaveOfAbsenceDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Leave Of Absence Details. Can also be named as Long Term Absence Details. This object maintains the details of the most recent long term absence taken by Worker. The following kind of scenarios are possible here
            
            1. Worker has never taken leave of absence and hence the object will not be present in the document
            2. Worker had taken leave of absence and has returned as well which has been captured in the system. In this case, this object will maintain details of such absence. If there are many such absences, object will capture the last absence taken
            3. Worker has taken leave of absence and still hasn't returned back. In this case, object will maintain this absence without any actual return/end date
            
            Some examples of long term absences are Sabbatical, Long-term Illness, Maternity/Paternity, Personal Reason, Suspension etc. These are examples of unpaid long term leaves. There are paid long term absences as well with similar kind of reasons.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="RequestEventReferenceIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Request Event Reference Identifier. Unique Identifier for the Worker Leave Event. In case of Workday, this will be directly available however, in case of PeopleSoft this field would be populated as concatenation of Emplid and Create Timestamp fields. It is a non-critical field. Please note that this field has no functional relevance.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ReturnEventReferenceIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Return Event Reference Identifier. Unique Identifier in Workday for the Worker Leave Return Event. It is a non-critical field and has no functional relevance.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="LeaveOfAbsenceDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Leave Of Absence Description. Descriptive information for leave request event.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="LeaveOfAbsenceComments" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Leave Of Absence Comments. Comments provided by the Worker while applying for the Leave.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="LeaveOfAbsenceStartDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Leave Of Absence Start Date. This is the date since when the Worker was/is on long term absence.
                  
                  Although this should never be null, there might be data quality issues in the source and hence a return event can be there without an initiate event.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="LeaveOfAbsenceEndDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Leave Of Absence End Date. Actual end date of the leave of absence. If worker is still on long term absence then this will be null or not available.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="LeaveOfAbsenceTypeCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Leave Of Absence Type Code. The values could be Marriage Leave, Annual Leave, Maternity Leave etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="LeaveOfAbsenceTypeReasonCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Leave Type Reasons. Each Leave Type Reason is associated with Leave Type/s. Values could be Sickness, Hospitalization, Occupational Injury etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="LeaveOfAbsenceRequestStatusCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Leave Of Absence Request Status Code. Examples are Approved, Draft, Pending, Rejected etc. Availability of this information depends on how source is maintaining this data.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="LeaveOfAbsencePaidFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Leave Of Absence Paid Flag. This flag denotes if the Leave of Absence availed is paid or unpaid per the DB HR policy. If true then absence is paid.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="LeaveOfAbsenceEstimatedEndDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Leave Of Absence Estimated End Date. Estimated end date of absence as captured.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PostLeaveOfAbsenceFirstDayofWorkDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Post Leave Of Absence First Day of Work Date. First Day of Work After Leave.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PreLeaveOfAbsenceLastDayofWorkDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Pre Leave Of Absence Last Day of Work Date. Last Day of Work Before Leave.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="OnLeaveFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			On Leave Flag. Flag to indicate if the Worker is on leave as of date.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BenefitsEffectFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Benefits Effect Flag. Flag to indicate if the leave event has/had an effect on Worker's Benefits.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PayrollEffectFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Payroll Effect Flag. Flag to indicate if the leave event has/had an effect on Worker's Payroll.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PaidTimeOffAccrualEffectFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Paid Time Off Accrual Effect Flag. Flag to indicate if the leave event has/had an effect on Worker's absence accrual.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ContinuousServiceAccrualEffectFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Continuous Service Accrual Effect Flag. Flag to indicate if the leave event has/had an effect on Worker's Continuous Service Accrual.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="StockVestingEffectFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Stock Vesting Effect Flag. Flag to indicate if the current leave event has an effect on Worker's Stock Vesting.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="LeaveOfAbsenceCorrectionFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Leave Of Absence Correction Flag. Flag to denote if the Leave of Absence originally submitted is corrected or not. If true then it suggests that current entry is for the correction.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PriorRequestEventReferenceIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Prior Request Event Reference Identifier. This is the Request Event Reference Identifier for Leave of Absence for which this entry is a correction.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PBLeaveOfAbsenceTypeCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			PBLeaveOfAbsenceTypeCode. This field stores the absence type code maintained in Postbank HR system. It is a technical debt and added to support Postbank data consumers. Once Postbank data is migrated to Workday, this field would become obsolete.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="LeaveOfAbsenceDetails" type="LeaveOfAbsenceDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Leave Of Absence Details. Can also be named as Long Term Absence Details. This object maintains the details of the most recent long term absence taken by Worker. The following kind of scenarios are possible here
            
            1. Worker has never taken leave of absence and hence the object will not be present in the document
            2. Worker had taken leave of absence and has returned as well which has been captured in the system. In this case, this object will maintain details of such absence. If there are many such absences, object will capture the last absence taken
            3. Worker has taken leave of absence and still hasn't returned back. In this case, object will maintain this absence without any actual return/end date
            
            Some examples of long term absences are Sabbatical, Long-term Illness, Maternity/Paternity, Personal Reason, Suspension etc. These are examples of unpaid long term leaves. There are paid long term absences as well with similar kind of reasons.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="MandatoryTimeAwayDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Mandatory Time Away Details. This collection will store the details of mandatory time away for a Worker. Details will be stored for all the mandatory time aways taken till date and any future requested MTA for the Worker.
            
            For every MTA period (earlier it was as per calendar year but now more flexible), ideally there should be one compliant MTA in place. MTA can be in different statuses e.g. Pending and Non Compliant (usually will not be available), Pending Compliant and Compliant. Since in case of Pending and Non Compliant, worker has not taken leaves, this data won't be available however from Pending Compliant, entries should be available.
            
            In case of breach, if a person is taking the leave again then entries are overwritten in MTA and hence will be the same behavior in the model.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="MTAEventIdentifier" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			MTA Event Identifier. Uniquely identifies an MTA Event. Not a critical field and is being maintained to support consistency from various sources.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MTAInitialCheckPointDate" maxOccurs="1" minOccurs="1" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			MTA Initial Check Point Date. This is the start date of the new MTA rolling period of the worker.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MTADueDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			MTA Due Date. Represents the due date of the new rolling period of MTA.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MTAStartDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			MTA Start Date. Represents the start date for mandatory time away taken by Worker.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MTAEndDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			MTA End Date. Represents the end date for mandatory time away taken by Worker.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MTAYear" maxOccurs="1" minOccurs="0" type="xs:integer">
         	<xs:annotation>
         		<xs:documentation>
         			(Deprecated) MTA year is deprecated with the introduction of new rules implemented in new MTA tool. 
                  So far MTA year was a static year with start date of 1st Oct and End date of 30th Sept of subsequent year. However with new tool this year is calculated on a rolling basis after each compliant MTA leave event of a relevant worker. Hence ERDS would not receive the data of this field here on and this field would be deprecated.
                  Please do not select this field for consumption.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MTAComplianceStatusCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			MTA Compliance Status Code. Compliance Status of the MTA absence of Worker. e.g. Non-Compliance, Not MTA Relevant, Pending Compliance, Pending Non-Compliance, etc.
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MTAWorkerComments" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			(Deprecated) There is no provision to capture MTA Worker Comments in the new MTA tool rolled out hence ERDS would not receive the data.
                  Please do not select this field for consumption.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MTAManagerWorkerIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			MTAManagerWorkerIdentifier This field was used only in PeopleSoft. It holds the employee ID of the functional manager who received the HR Online MTA task or a dummy operator value if there was no manager. After the implementation of dbMTA application in May 2019, this field holds the organization manager as assigned in Workday. It’s strongly recommended to not select this field but to use JobDetails.JobGovernanceRoleDetails.FunctionalManagerWorkerIdentifier to get the manager details.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MTARepresentativeWorkerIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			(Deprecated) There is no provision to capture MTA Representative Identifier in the new MTA tool rolled out hence ERDS would not receive the data and this field would be deprecated.
                  Please do not select this field for consumption.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MTARepresentativeComments" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			(Deprecated) There is no provision to capture MTA Representative Comments in the new MTA tool rolled out hence ERDS would not receive the data and this field would be deprecated.
                  Please do not select this field for consumption.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MTARequestCreationTimestamp" maxOccurs="1" minOccurs="0" type="xs:dateTime">
         	<xs:annotation>
         		<xs:documentation>
         			MTA Request Creation Timestamp. Date and Timestamp when the mandatory time away request was submitted.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="MandatoryTimeAwayDetails" type="MandatoryTimeAwayDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Mandatory Time Away Details. This collection will store the details of mandatory time away for a Worker. Details will be stored for all the mandatory time aways taken till date and any future requested MTA for the Worker.
            
            For every MTA period (earlier it was as per calendar year but now more flexible), ideally there should be one compliant MTA in place. MTA can be in different statuses e.g. Pending and Non Compliant (usually will not be available), Pending Compliant and Compliant. Since in case of Pending and Non Compliant, worker has not taken leaves, this data won't be available however from Pending Compliant, entries should be available.
            
            In case of breach, if a person is taking the leave again then entries are overwritten in MTA and hence will be the same behavior in the model.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="RelatedPersonOccupationDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Related Person Occupation Details. Holds the occupation details for the related person for worker. E.g. Occupation, Employer Name etc. This is being defined as a collection as Workday suggests that there can be multiple entries however in case of PeopleSoft, there will be just one entry (if available).
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="OccupationDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Occupation Description. Occupation of the related person. It is a free text attribute and captures the descriptive occupation details.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="RelatedPersonOccupationDetails" type="RelatedPersonOccupationDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Related Person Occupation Details. Holds the occupation details for the related person for worker. E.g. Occupation, Employer Name etc. This is being defined as a collection as Workday suggests that there can be multiple entries however in case of PeopleSoft, there will be just one entry (if available).
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="GlobalGraduateProgramDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Global Graduate Program Details. Holds the global graduate trainee program details. 
            
            In PeopleSoft, a graduate can be asscoiated with multiple graduate programs, but in Workday, the graduate can be associated with only one graduate program.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="ProgramTypeCode" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Program Type Code. Holds the global graduate trainee program type. It can be MBA or BA.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ClassOfYear" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Class of Year. Holds the year of the global graduate trainee program
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="GlobalGraduateProgramDetails" type="GlobalGraduateProgramDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Global Graduate Program Details. Holds the global graduate trainee program details. 
            
            In PeopleSoft, a graduate can be asscoiated with multiple graduate programs, but in Workday, the graduate can be associated with only one graduate program.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="CustomIdentifierDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Custom Identifier Details. This section maintains the various custom identifiers kept in the system. E.g. Payroll IDs, Previous System IDs etc.
            
            In terms of structure, these are similar to personal identifiers however the difference is in terms of context. These are the identifies for the person but from organization perspective.
            
            Following is a summary of different types of custom identifiers being maintained
            1. EXTERNAL_PAYROLL_ID - This is to capture the payroll identifiers for certain countries. While looking at PeopleSoft, there will be data available for many countries however the scenario will change with Workday as only few (3-4) countries will have payroll identifiers being maintained within Workday as external payroll ids
            2. GERMANY_SAP_ID - For maintaining payroll identifiers for Germany
            3. ITALY_PAYROLL_ID - For maintaing payroll identifiers for Italy
            4. USA_PAYROLL_ID_FILE_NUMBER - For maintaing payroll identifiers for US
            5. PREVIOUS_SYSTEM_ID - This is associated with GAMA Conversion. There is no functional use for this now however this was used earlier for the GAMA project when CWRs were migrated from old HR Online externals table to dbPeople+ tables. Even if this is migrated to Workday then it will be just a one time migration and no active updates will be applied
            6. NON_SAPHRISE_PREVIOUS_SYSTEM_ID - For keeping previous system ID for Postbank workers. This is not available in Workday however is being maintained through a static lookup table as the workers having these details are fixed
            7. HISTORIC_INACTIVE_WORKDAY_ID - This will help in identifying the previous Workday ID for an active Worker. If a person joins the organization but receives a different ID than the earlier one, then earlier Worker ID can be captured here. The maintenance of this will be driven by Ops/Onboarding team
            8. PRIMARY_WORKDAY_ID - In case of a dual contractor situation, this will identify the primary worker ID on a secondary Workday worker instance. Identification of primary/secondary worker instances and maintenance of these details will be driven by Ops/Onboarding team
            9. SECONDARY_WORKDAY_ID - In case of a dual contractor situation, this will identify the secondary worker ID on a primary Workday worker instance. Identification of primary/secondary worker instances and maintenance of these details will be driven by Ops/Onboarding team
            10. EXTERNAL_ID - Not to be used. This is something which is not in use anymore. This is to capture the previous contingent worker HR ID whenever there was a Temp to Perm conversion. Even if this is migrated to Workday then it will be just a one time migration and no active updates will be applied
            11. KONETIC_GRAD_ID - Not to be used. No longer in use as the Konetic system it referred to has been replaced. No functiona usage
            12. DNU_BUILDING_ACCESS_ID - Not to be used. This is an inactive code in PeopleSoft and is only being maintained for loading the legacy data
            13. DNU_COMPUTER_CENTER_ACCESS_ID - Not to be used. This is an inactive code in PeopleSoft and is only being maintained for loading the legacy data
            14. DNU_CLOCK_ID - Not to be used. This is an inactive code in PeopleSoft and is only being maintained for loading the legacy data
            15. DNU_GENERAL_BADGE_ID - Not to be used. This is an inactive code in PeopleSoft and is only being maintained for loading the legacy data
            16. DNU_PARKING_ACCESS_ID - Not to be used. This is an inactive code in PeopleSoft and is only being maintained for loading the legacy data
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="CustomIdentifier" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Custom Identifier. Identifier values associated with the worker for a specific type of custom identifier.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CustomIdentifierTypeCode" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Custom Identifier Type Code. Identifies the type of custom identifier. E.g. External Payroll ID, Germany SAP ID, Italy Payroll ID etc.
                  
                  Following is a summary of different types of custom identifiers being maintained
                  1. EXTERNAL_PAYROLL_ID - This is to capture the payroll identifiers for certain countries. While looking at PeopleSoft, there will be data available for many countries however the scenario will change with Workday as only few (3-4) countries will have payroll identifiers being maintained within Workday as external payroll ids
                  2. GERMANY_SAP_ID - For maintaining payroll identifiers for Germany
                  3. ITALY_PAYROLL_ID - For maintaing payroll identifiers for Italy
                  4. USA_PAYROLL_ID_FILE_NUMBER - For maintaing payroll identifiers for US
                  5. PREVIOUS_SYSTEM_ID - This is associated with GAMA Conversion. There is no functional use for this now however this was used earlier for the GAMA project when CWRs were migrated from old HR Online externals table to dbPeople+ tables. Even if this is migrated to Workday then it will be just a one time migration and no active updates will be applied
                  6. NON_SAPHRISE_PREVIOUS_SYSTEM_ID - For keeping previous system ID for Postbank workers. This is not available in Workday however is being maintained through a static lookup table as the workers having these details are fixed
                  7. HISTORIC_INACTIVE_WORKDAY_ID - This will help in identifying the previous Workday ID for an active Worker. If a person joins the organization but receives a different ID than the earlier one, then earlier Worker ID can be captured here. The maintenance of this will be driven by Ops/Onboarding team
                  8. PRIMARY_WORKDAY_ID - In case of a dual contractor situation, this will identify the primary worker ID on a secondary Workday worker instance. Identification of primary/secondary worker instances and maintenance of these details will be driven by Ops/Onboarding team
                  9. SECONDARY_WORKDAY_ID - In case of a dual contractor situation, this will identify the secondary worker ID on a primary Workday worker instance. Identification of primary/secondary worker instances and maintenance of these details will be driven by Ops/Onboarding team
                  10. EXTERNAL_ID - Not to be used. This is something which is not in use anymore. This is to capture the previous contingent worker HR ID whenever there was a Temp to Perm conversion. Even if this is migrated to Workday then it will be just a one time migration and no active updates will be applied
                  11. KONETIC_GRAD_ID - Not to be used. No longer in use as the Konetic system it referred to has been replaced. No functiona usage
                  12. DNU_BUILDING_ACCESS_ID - Not to be used. This is an inactive code in PeopleSoft and is only being maintained for loading the legacy data
                  13. DNU_COMPUTER_CENTER_ACCESS_ID - Not to be used. This is an inactive code in PeopleSoft and is only being maintained for loading the legacy data
                  14. DNU_CLOCK_ID - Not to be used. This is an inactive code in PeopleSoft and is only being maintained for loading the legacy data
                  15. DNU_GENERAL_BADGE_ID - Not to be used. This is an inactive code in PeopleSoft and is only being maintained for loading the legacy data
                  16. DNU_PARKING_ACCESS_ID - Not to be used. This is an inactive code in PeopleSoft and is only being maintained for loading the legacy data
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="IssuedDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Custom Identifier Issued Date. Date when the custom identifier was issued or assigned. This is an optional attribute and will only be available if source is capturing such kind of details.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ExpirationDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Custom Identifier Expiration Date. Date when the custom identifier was or will be expired. This is an optional attribute and will only be available if source is capturing such kind of details.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CustomIdentifierDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Custom Identifier Description. Attribute to keep any additional information available from source for the Custom Identifier.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="CustomIdentifierDetails" type="CustomIdentifierDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Custom Identifier Details. This section maintains the various custom identifiers kept in the system. E.g. Payroll IDs, Previous System IDs etc.
            
            In terms of structure, these are similar to personal identifiers however the difference is in terms of context. These are the identifies for the person but from organization perspective.
            
            Following is a summary of different types of custom identifiers being maintained
            1. EXTERNAL_PAYROLL_ID - This is to capture the payroll identifiers for certain countries. While looking at PeopleSoft, there will be data available for many countries however the scenario will change with Workday as only few (3-4) countries will have payroll identifiers being maintained within Workday as external payroll ids
            2. GERMANY_SAP_ID - For maintaining payroll identifiers for Germany
            3. ITALY_PAYROLL_ID - For maintaing payroll identifiers for Italy
            4. USA_PAYROLL_ID_FILE_NUMBER - For maintaing payroll identifiers for US
            5. PREVIOUS_SYSTEM_ID - This is associated with GAMA Conversion. There is no functional use for this now however this was used earlier for the GAMA project when CWRs were migrated from old HR Online externals table to dbPeople+ tables. Even if this is migrated to Workday then it will be just a one time migration and no active updates will be applied
            6. NON_SAPHRISE_PREVIOUS_SYSTEM_ID - For keeping previous system ID for Postbank workers. This is not available in Workday however is being maintained through a static lookup table as the workers having these details are fixed
            7. HISTORIC_INACTIVE_WORKDAY_ID - This will help in identifying the previous Workday ID for an active Worker. If a person joins the organization but receives a different ID than the earlier one, then earlier Worker ID can be captured here. The maintenance of this will be driven by Ops/Onboarding team
            8. PRIMARY_WORKDAY_ID - In case of a dual contractor situation, this will identify the primary worker ID on a secondary Workday worker instance. Identification of primary/secondary worker instances and maintenance of these details will be driven by Ops/Onboarding team
            9. SECONDARY_WORKDAY_ID - In case of a dual contractor situation, this will identify the secondary worker ID on a primary Workday worker instance. Identification of primary/secondary worker instances and maintenance of these details will be driven by Ops/Onboarding team
            10. EXTERNAL_ID - Not to be used. This is something which is not in use anymore. This is to capture the previous contingent worker HR ID whenever there was a Temp to Perm conversion. Even if this is migrated to Workday then it will be just a one time migration and no active updates will be applied
            11. KONETIC_GRAD_ID - Not to be used. No longer in use as the Konetic system it referred to has been replaced. No functiona usage
            12. DNU_BUILDING_ACCESS_ID - Not to be used. This is an inactive code in PeopleSoft and is only being maintained for loading the legacy data
            13. DNU_COMPUTER_CENTER_ACCESS_ID - Not to be used. This is an inactive code in PeopleSoft and is only being maintained for loading the legacy data
            14. DNU_CLOCK_ID - Not to be used. This is an inactive code in PeopleSoft and is only being maintained for loading the legacy data
            15. DNU_GENERAL_BADGE_ID - Not to be used. This is an inactive code in PeopleSoft and is only being maintained for loading the legacy data
            16. DNU_PARKING_ACCESS_ID - Not to be used. This is an inactive code in PeopleSoft and is only being maintained for loading the legacy data
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="WorkerAttributeDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Worker Attribute Details. This is the entity which holds the additional details for Workers, details for which, no direct attributes are available.
            
            In case of PeopleSoft, such details are maintained in the Special Indicator table; however in case of Workday, these details are maintained as Worker Flags which can be either custom attributes or details within Benefits Enrollment data.
            
            In the model, most of the attributes are being maintained here. Howerver, there are some, which are maintained within Worker Employment Summary or Job Details, due to certain consumers using data from these structures.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="NoBenefitsFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			No Benefits Flag is used to determine eligibility of employees for benefits in USA , this flag is not applicable for new employees (flag updated historically and no furthur changes expected) .Possible values are True / False.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DeutscheBankEmployeesCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			This flag is given to employees hired/transferred to US today.In past , flag used to differntiate workers who were absorbed in Deutsche Bank due to company mergers against actual Deutsche Bank employees. HR Operations Employee Lifecycle sets and maintains this flag.Flag value is set at hire for new employees hired post merger but can be changed during employee lifecycle as directed by the benefits team.
                  If the indicator is not correctly set , benefits interface will report inaccurate data which is needed by the Benefits Vendor to determine benefits eligibility.
                  Values for this flag are -
                  2 - Transfer post-merger
                  3 - Transfer pre-merger
                  4 - New Hires post-merger
                  5 - MG to PRZ
                  6 - ADP to PDP
                  7 - DFS to DBP
                  9 - NDB to PRZ
                  (detailed values definitions is pending , will be added once understanding is complete)
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DeutscheBankEmployeesStartDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Attribute stores date from which Deutsche Bank Employees indicator is set for eligible Workers.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="FidelityBenefitsFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			This flag is set for employees who are in the USA for an international assignment but eligible for US benefits (which is not usual case when on assignment).Values for this flag are True/False.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="HewittBenefitsFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			This flag is set for employees who are in the USA for an international assignment but eligible for US benefits (which is not usual case when on assignment).Values for this flag are True/False.
                  ( Description is same as Fidelity Benefits - kept as is for now, it may change later once we get clarity )
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BenefitsEligibilityFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Flag is present for historic data which determines what benefits an employee is eligible for with Hewitt.Different flag values determine what all benefits a worker can have -pension or just health and welfare.
                  PeopleSoft values for this flag are -
                  1 - Pension Only
                  2 - Health and Welfare Only
                  3 - Health and Welfare and Pension
                  
                  Any of these values means flag is True.Other than these ,flag is false.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="LineofBusinessCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Line of Business indicator is assigned to employess hired/transferred to US and were part of a special RREEF property trust group.Interfaces look for this indicator , if not present , benefits interface will report inaccurate data which is needed by the Benefits Vendor to determine benefits eligibility.
                  Values for this flag are - 
                  1 - Res (apts)
                  2 - PM
                  3 - PMBLDG
                  4 - Corporate
                  
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="NatWestPoolFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Flag is assigned to employess hired/transferred to the US from Nat West Bank.Interfaces look for this flag ,if not present , benefits interface will report inaccurate data which is needed by the Benefits Vendor to determine benefits eligibility.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RetireeMedicalEligibilityFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Retiree Medical Eligibility flag determines retiree medical eligibility with Hewitt.Interfaces look for this flag, if the flag is not there, the benefits interace will report inaccurate data which is needed by the Benefits Vendor to determine benefits eligibility.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="COBRABenefitsFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			The Consolidated Omnibus Budget Reconciliation Act (COBRA) gives workers and their families who lose their health benefits the right to choose to continue group health benefits provided by their group health plan for limited periods of time under certain circumstances such as voluntary or involuntary job loss, reduction in the hours worked, transition between jobs, death, divorce, and other life events.(Reference - https://www.dol.gov/general/topic/health-plans/cobra )
                  COBRA Benefit flag tracks end dates of company paid COBRA benifits and ensures benefits are properly executed as part of severance agreements (after worker termination) in the United States.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="COBRABenefitsStartDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Indicates the date on which the COBRA benefits starts. Usually, this would be the Termination date+1. When the Elect is run in WD, then the Benefits Event Date would be the COBRA start date.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="COBRABenefitsEndDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Indicates the date on which the COBRA benefits ends. This will be available only when the benefit plan is waived in WD.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BerkshireFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			This field indicates if the worker was hired/trasnferred from Berkshire to DB US. This is only used for the Benefits interface.
                  In PeopleSoft, it has value - Y.
                  In Workday, this is planned to be merged under the Former Employee of Company worker flag.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BerkshireStartDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Attribute stores date from which Berkshire indicator is set for eligible Workers.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ScudderFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			This field indicates if the worker was hired/trasnferred from Zurich Scudder to DB US. This is only used for the Benefits interface.
                  In PeopleSoft, it has value - 1, 2, 3, Y, N. If the indicator value - 'N' is set for the worker, then ScudderFlag would hold False else True. Values with their description is as shown below:
                  1 - Active Scudder employee at time of merger
                  2 - Terminated or retired Scudder employee at time of merger
                  3 - Employees who worked for both DB and Scudder
                  Y - NA
                  N - NA
                  
                  In Workday, this is planned to be merged under the Former Employee of Company worker flag.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ScudderStartDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Attribute stores date from which Scudder indicator is set for eligible Workers.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RREEFFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			This field indicates if the worker was hired/trasnferred from RREEF to DB US. This is only used for the Benefits interface.
                  In PeopleSoft, it has value - 1, 2, 3, 4. If any of these indicator values is set for the worker, then RREEFFlag would hold True else False. Values with their description is as shown below:
                  1 - Employees part of RREEF active at conversion
                  2 - Employees part of RREEF terminated at conversion
                  3 - Employees that were RREEF Union employees at conversion
                  4 - Employees that were RREEF partners at conversion
                  
                  In Workday, this is planned to be merged under the Former Employee of Company worker flag.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RREEFStartDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Attribute stores date from which RREEF indicator is set for eligible Workers.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BankersTrustFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			This field indicates if the worker was hired/trasnferred from Bankers Trust to DB US. This is only used for the Benefits interface.
                  In PeopleSoft, it has value - 1, 2, 3, A, I, N, T, Y. If the indicator value - 'N' is set for the worker, then BankersTrustFlag would hold False else True. Values with their description is as shown below:
                  1 - Employees part of Bankers Trust active at merger
                  2 - Employees part of Bankers Trust transferred to DB after merger
                  3 - Employees that were Bankers Trust transferred to DB before merger
                  A - Employees part of Bankers Trust active at merger
                  I - Employees part of Bankers Trust inactive at merger
                  N - NA
                  T - Employees part of Bankers Trust transferred to DB after merger
                  Y - NA
                  
                  In Workday, this is planned to be merged under the Former Employee of Company worker flag.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BankersTrustStartDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Attribute stores date from which Bankers Trust indicator is set for eligible Workers.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AsiaPacificMedicalPlanCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Indicates the medical plan applicable for the worker. This is only for the Singapore population and setup only for the Benefits Singapore interface.
                  In PeopleSoft, it has the following values:
                  B - BARMENIA
                  C - CIGNA
                  D - DKV
                  F - FLEXI
                  H - IHHP
                  I - IHI
                  L - LHFN with option to Int'l Plan
                  M - China Local Commercial
                  N - China Local Social Securities
                  O - OTHERS
                  P - Assignees on Partial Flex
                  S - Short-term contract staff
                  U - Bargainable employees
                  V - VISTA
                  X - Employees no longer on Flex
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AsiaPacificMedicalPlanStartDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Attribute stores date from which APMEDPL indicator is set for eligible Workers.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DeutscheFinancialServicesFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			This field indicates if the worker was hired/transferred from Deutsche Financial Services to DB US. This is only used for the Benefits interface.
                  
                  In PeopleSoft:
                  This relates to the DFS special indicator. Values in PeopleSoft are:
                  1 - G-Finance
                  2 - Gains
                  3 - DFS Termed
                  4 - ITT -Corp Pension Elgible
                  
                  Transformation logic used by eRDS to transform the PeopleSoft job level flags to worker level flags:
                  If the EMPL_RCD of the worker, corresponding to US paygroup, is mapped to any of the special indicator values, then the flag is set to True. Otherwise, the flag is set to False.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MortgageITFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			This field indicates if the worker was hired/transferred from Mortgage IT to DB US. This is only used for the Benefits interface.
                  
                  In PeopleSoft:
                  This relates to the MIT special indicator. Values in PeopleSoft are:
                  1 - MIT Employee
                  2 - MIT Transfer
                  
                  Transformation logic used by eRDS to transform the PeopleSoft job level flags to worker level flags:
                  If the EMPL_RCD of the worker, corresponding to US paygroup, is mapped to any of the special indicator values, then the flag is set to True. Otherwise, the flag is set to False.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AlexBrownFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			This field indicates if the worker was hired/transferred from Alex Brown to DB US. This is only used for the Benefits interface.
                  
                  In PeopleSoft:
                  This relates to the AB special indicator. Values in PeopleSoft are:
                  Y, N
                  
                  Transformation logic used by eRDS to transform the PeopleSoft job level flags to worker level flags:
                  If the EMPL_RCD of the worker, corresponding to US paygroup, is mapped to the special indicator value 'Y', then the flag is set to True and if it is set to 'N', then the flag is set to False
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AlexBrownPostMergerFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			This field indicates if the worker was hired/transferred from Alex Brown(after Alex Brown was already converted to DB) to DB US. This is only used for the Benefits interface.
                  
                  In PeopleSoft:
                  This relates to the AB1 special indicator. Values in PeopleSoft are:
                  Y, N
                  
                  Transformation logic used by eRDS to transform the PeopleSoft job level flags to worker level flags:
                  If the EMPL_RCD of the worker, corresponding to US paygroup, is mapped to the special indicator value 'Y', then the flag is set to True and if it is set to 'N', then the flag is set to False
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AlexBrownBankersTrustPayrollFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			This field indicates if the worker was hired/transferred from Alex Brown(who falls under Banker's Trust Payroll) to DB US. This is only used for the Benefits interface.
                  
                  In PeopleSoft:
                  This relates to the AB2 special indicator. Values in PeopleSoft are:
                  Y, N
                  
                  Transformation logic used by eRDS to transform the PeopleSoft job level flags to worker level flags:
                  If the EMPL_RCD of the worker, corresponding to US paygroup, is mapped to the special indicator value 'Y', then the flag is set to True and if it is set to 'N', then the flag is set to False
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PostbankFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			This field indicates if the worker was hired/transferred from PostBank to DB US. This is only used for the Benefits interface.
                  
                  In PeopleSoft:
                  This relates to the PB special indicator. Values in PeopleSoft are:
                  Y, N
                  
                  Transformation logic used by eRDS to transform the PeopleSoft job level flags to worker level flags:
                  If the EMPL_RCD of the worker, corresponding to US paygroup, is mapped to the special indicator value 'Y', then the flag is set to True and if it is set to 'N', then the flag is set to False
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="UnionEmployeeFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Union Employee Flag. This flag is used to identify union employees and valid for employees in APAC(Indonesia, Korea)
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="UnionEmployeeStartDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Union Employee Start Date. Date starting which the union employee flag is set as True. In other words, date since when the employee has been recognized as union employee.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="UnionEmployeeEndDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Union Employee End Date. Date upto which the union employee flag is True. In other words, date till when the employee has been recognized as union employee. In case the value is not available, this will be set to 9999-12-31.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="UKPensionPlanCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			The field identifies the pension plan a UK employee has been erolled onto. This is majorly used for the Benefits calculations of the employee. 
                  The UK Pension Code is a combination of pension code (also known as Benefits Coverage Type) and the description of the pension code from dbP+. The format of the code is pensionCode_description. The code is needed for the Benefits team for their calculations.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="UKPensionPlanStartDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Indicates the start date on which the pension code is set for the worker.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="UKPensionPlanEndDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			UK Pension Plan End Date. Indicates the date till which the plan is applicable for the worker. Date will be set to 9999-12-31 if not available from source.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PBAquilaFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Indicates whether the woker is a Postbank employee or not.
                  
                  History of the field:
                  Former DB and Postbank entities merged to form a single entity - DBPFK AG(0950). However, the contracts of the workers were not changed. There were cases where a manager was having a Postbank contract and managing DB employees. Such managers needed to perform people management tasks and hence were onboarded to the DB core HR platform. PB Aquila flag was introduced to identify such managers who needed to be excluded from SAP payroll and reporting.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PBAquilaStartDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			PB Aquila Start Date. Date starting which the flag is set as True for the worker.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PBAquilaEndDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			PB Aquila End Date. Date till which the flag is set as True for the worker. Value will be set to 9999-12-31 if not available.
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ZeitinvestCount" maxOccurs="1" minOccurs="0" type="xs:integer">
         	<xs:annotation>
         		<xs:documentation>
         			Zeitinvest Count. Indicates the count of days which needs to be deducted from worker's leave entitlement and he/she may use for sabbatical etc. Value for this attribute ranges from 0 to 10. This is only applicable for Germany Non-Tariff Employees (AVP and Above).
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ZeitinvestStartDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Zeitinvest Start Date. Date from which the days invested will be considered.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ZeitinvestEndDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Zeitinvest End Date. Indicates the end date of considering the invested vacation days.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CEMVIPFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			This flag indicates that the worker is part of HR CEM population in HR reports and is eligible for Stock and Regulated Notifications. It is only applicable for Germany based workers for all business units (access types XXX04 and XXX06).
                  All board members of German subsidiary companies with board member contracts (with payment from the company they are a board member of) are access type XXX04 employees. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CEMVIPStartDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			CEM VIP Start Date. This is the date since when worker has been identified as part of the CEM Group, i.e. the flag has been set to True.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CEMVIPEndDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			CEM VIP End Date. Identifies the date till when worker has been identified as part of CEM group, i.e. the flag is True.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="LeitendeAngestellteFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Leitende Angestellte Flag: This flag if set, indicates that a worker is identified as Leitende Angestellte (Senior Employee) in the SAP system. Else the worker is Angestellte. Leitende Angestellte are executive employees. In most cases managing directors/ directors and in some cases depending on the role also VP´s. Leitende Angestellte need to have a leader role, managing people and acting on behalf of the employer. The bank has handed over important employer powers to them. The term is covered in the German law. 
                  Workers council needs to identify all the non-Leitende employees for their governance.
                  
                  
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="LeitendeAngestellteStartDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Leitende Angestellte Start Date. This date indicates from when this worker has been flagged as Leitende Angestellte(senior employee).
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="LeitendeAngestellteEndDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Leitende Angestellte End Date. This is the date upto which the worker is flagged as senior employee.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CompanyClothingEligibilityCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Company Clothing Eligibility Code. Postbank is required to store information about the right to wear company clothing for some functions in branch sales. The BACS team determines if a member of staff in a function of branch sales is entitled to wear company clothing and instruct HR Ops to update such code to values "70 (branch employee pos)" as authorised to wear or value "99 (wearing obligation interrupted)" as authorisation interrupted.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CompanyClothingEligibilityStartDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Company Clothing Eligibility Start Date. This is the start date associated with the value of Company Clothing Eligibility Code.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CompanyClothingEligibilityEndDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Company Clothing Eligibility End Date. This is the end date associated with the value of Company Clothing Eligibility Code.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="FormerEmployeeOfCompanyAttributeDetails" maxOccurs="unbounded" minOccurs="0" type="FormerEmployeeOfCompanyAttributeDetails">
         	<xs:annotation>
         		<xs:documentation>
         			This attribute stores details of employees hired / transferred to the United States from different companies which were merged into Deutsche Bank.Values for this flag are combination of multiple flags from PeopleSoft.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="WorkerAttributeDetails" type="WorkerAttributeDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Worker Attribute Details. This is the entity which holds the additional details for Workers, details for which, no direct attributes are available.
            
            In case of PeopleSoft, such details are maintained in the Special Indicator table; however in case of Workday, these details are maintained as Worker Flags which can be either custom attributes or details within Benefits Enrollment data.
            
            In the model, most of the attributes are being maintained here. Howerver, there are some, which are maintained within Worker Employment Summary or Job Details, due to certain consumers using data from these structures.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="FormerEmployeeOfCompanyAttributeDetails">
   	<xs:annotation>
   		<xs:documentation>
   			This attribute stores details of employees hired / transferred to the United States from different companies which were merged into Deutsche Bank.Values for this flag are combination of multiple flags from PeopleSoft.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="FormerEmployeeofCompanyCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			This flag is provided to employees hired / transferred to the United States from different companies which were merged into Deutsche Bank. This flag can have multi instances select and multi select values for any instance.
                  Values for this flag are combination of multiple flags from PeopleSoft.
                  
                  1. PeoleSoft BT flag values , Workday value for this flag is - Bankers Trust
                  1 - Active at merger
                  2 - Transfer post-merger
                  3 - Transfer pre-merger
                  A - Active at Merger
                  I - Inactive at Merger
                  T - Transfer Post Merger
                  Y - Yes
                  
                  2. PeoleSoft ZS flag values , Workday value for this flag is - Scudder Migration
                  1 - Active Scudder
                  2 - Term/Retire Scudder
                  3 - DB/Scudder duplicate
                  Y - Yes
                  
                  3. PeoleSoft RREEF flag values , Workday value for this flag is - RREEF
                  1 - Active at Conversion
                  2 - Inactive at Conversion
                  3 - Union Employee
                  4 - Partner
                  
                  4. PeoleSoft DFS flag values , Workday value for this flag is - Deutsche Financial Services
                  1 - G-Finance
                  2 - Gains
                  3 - DFS Termed
                  4 - ITT -Corp Pension Elgible
                  
                  5. PeoleSoft MIT  flag values , Workday value for this flag is - Mortgage IT
                  1 - MIT Employee
                  2 - MIT Transfer
                  
                  6. PeoleSoft AB1 flag values , Workday value for this flag is - Alex.Brown
                  Y -Yes
                  
                  7. PeoleSoft AB2 flag values , Workday value for this flag is - Alex.Brown (Post-Merger)
                  Y -Yes
                  
                  8.PeoleSoft AB3 flag values , Workday value for this flag is - Alex.Brown (on BT Payroll)
                  Y -Yes
                  
                  9.PeoleSoft PB flag values , Workday value for this flag is - Postbank
                  Y -Yes
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="FormerEmployeeofCompanyStartDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Attribute stores date from which Former Employee of Company indicator is set for eligible Workers.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="FormerEmployeeOfCompanyAttributeDetails" type="FormerEmployeeOfCompanyAttributeDetails">
   	<xs:annotation>
   		<xs:documentation>
   			This attribute stores details of employees hired / transferred to the United States from different companies which were merged into Deutsche Bank.Values for this flag are combination of multiple flags from PeopleSoft.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="WorkerContractDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Worker Contract Details. This entity holds the information related to the contract for the Contingent Worker.
            
            This data was not available from PeopleSoft and hence this structure will only be available for Worker document populated from Workday data.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="VendorName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Vendor Name. Identifies the name of the vendor who provides the contingent worker. This is not the managed service provider (MSP) who have access to the HR systems and manages contingent workers themselves in DB, rather this is the supplier of the contingent worker.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="FSILineCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			FSI Line Code. Identifies the FSI line Code corresponding to the contingent worker. FSI lines are a Finance concept and they match expenditure to the general ledger. 
                  
                  PeopleSoft gets the FSI lines from the dbBuyer feed from procurement and uses them to enforce the correct choice of external class given the FSI line on the PO, i.e the FSI line specifies a particular type of expenditure which maps to a particular choice of External Class.
                  FSI lines are provided by PeopleSoft to Finance so that they can map against their expenditure. There is a one-to-one mapping between FSI line and External Class which is represented by ps_d_pcw_fsi_lines in PeopleSoft.
                  
                  This attribute is not directly available from Workday and hence to continue supporting this attribute, this will be derived using the Contingent Worker Type information.
                  
                  This is a technical debt as this is not HR data and depends on a derivation while getting this information from Workday.
                  
                  Mapping between worker sub type and FSLineCode is determine by Finance and Procurement and for any query regarding FSLineCode value Please contact to Craig Berman and Stefanie Berger directly.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ContractEndDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Contract End Date. Captures the date when the contract will expire for contingent workers.
                  
                  Currently this is only available from Workday. In case of Workday, while onboarding a contingent worker, contract details will also be captured and Contract End Date will also be assigned. This date can be changed later by extending the contract through relevant business processes.
                  
                  In case of any requirement of getting a forward looking end date for Contingent Worker, this date can be used.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PurchaseOrderOrganizationIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Purchase Order Organization Identifier. Identifier associated wtih the Purchase Order Organization.
                  
                  Format of this attribute will be different while getting data from PeopleSoft and Workday. In case of PeopleSoft, the format of the value will be Line Item Number^PO Number whereas in case of Workday, it will be PO Number-Line Item Number. However this will not have any issue as this attribute will only be used to join with the Purchase Order Organization entity.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PayRateAmount" maxOccurs="1" minOccurs="0" type="xs:float">
         	<xs:annotation>
         		<xs:documentation>
         			Pay Rate Amount. Identifies the Contract Pay Rate for the Worker. This information will be available only if a PO is not raised. If the PO is raised for the CWR, please check Purchase Order Organization entity.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RateCurrencyCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Rate Currency Code. Identifies the currency of the pay rate. This information will be available only if a PO is not raised. If the PO is raised for the CWR, please check Purchase Order Organization entity.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RateFrequencyCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Rate Frequency Code. Identifies the frequncy of the pay. This information will be available only if a PO is not raised. If the PO is raised for the CWR, please check Purchase Order Organization entity.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="WorkerContractDetails" type="WorkerContractDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Worker Contract Details. This entity holds the information related to the contract for the Contingent Worker.
            
            This data was not available from PeopleSoft and hence this structure will only be available for Worker document populated from Workday data.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="EmployeeContractDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Employee Contract Details. Captures the details around contracts associated with employees only. This does not keep any contract information for contingent workers or persons of interest.. Kind of contracts which will be maintained here are, contracts associated with International Assignment, Early or Partial Retirement, some specific contracts associated with Italy.
            
            Similar details were not being captured from PeopleSoft and hence this data is only available when the Worker document has been prepared using Workday data.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="EmployeeContractIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Employee Contract Identifier. Unique identifier for the contract for which information has been captured here.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ContractEffectiveDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Contract Effective Date. This is the date when the contract takes effect.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ContractTypeCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Employee Contract Type Code. Identifies the type of contract. Contracts can be for various kind of job related changes. Apart from many Italy specific values, the key ones are around HR International, including Long Term Assignment, Short Term Assignment etc. and Early or Partial Retirement phases.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ContractStartDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Employee Contract Start Date. This is the start date of the contract. This must be on or after the start date of hire or additional job staffing event.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ContractEndDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Employee Contract End Date. The end date of the employee contract. When there is a pending change job or transfer contract, the end date should be before or the same as the effective date of the Change Job event
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ContractStatusCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Employee Contract Status Code. Status of the contract. A contract can be either Open, Pending or Closed.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ContractDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Employee Contract Description.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PositionIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Position Identifier. This identifies the position with which this contract is associated. E.g., if the contract is for Long Term Assignment then it will keep the position number for the host job.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="EmployeeSignedDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Employee Signed Date. This is the date when the employee signed the contract.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="EmployerSignedDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Employer Signed Date. This is the date when the employer signed the contract.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="EmployeeContractDetails" type="EmployeeContractDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Employee Contract Details. Captures the details around contracts associated with employees only. This does not keep any contract information for contingent workers or persons of interest.. Kind of contracts which will be maintained here are, contracts associated with International Assignment, Early or Partial Retirement, some specific contracts associated with Italy.
            
            Similar details were not being captured from PeopleSoft and hence this data is only available when the Worker document has been prepared using Workday data.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="EducationDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Education Details. Holds the education details such as school name, school location, degree etc. for the worker. This data is captured as provided by worker. There can be multiple details captured here for the worker.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="EducationIdentifier" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Education Identifier. A unique identifier for the education record.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="SchoolCountryCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			School Country Code. Identifies the country where the school or education institution is located. ISO 3 Char Country Code is used.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="SchoolIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			School Identifier. Uniquely identifies the school where worker received the education.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="SchoolName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			School Name. The name of the education institution.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="SchoolTypeCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			School Type Code. Identifies the type of school. e.g. College, High School, University etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="SchoolLocation" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			School Location. Location of the education institution. Usually this will be the country where the educational institute is located.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DegreeCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Degree Code. The degree earned. e.g. Masters, Bachelors, Diploma etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DegreeLocalDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Degree Local Description. This field captures the description of the degree which can be in local language as well. The value is taken from the source directly.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DegreeCompletionFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Degree Completion Flag. Indicates whether the degree was received or not.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DegreeReceivedDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Degree Received Date. The date on which the degree was awarded.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="FieldOfStudyCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Field Of Study Code. The field of study. e.g. Information Technology, Civil Engineering, etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="FieldOfStudyLocalDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Field Of Study Local Description. This field captures the description of the field of study which can be in local language as well. The value is taken from the source directly.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="GradePointAverage" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Grade Point Average. The grade point average associated with this education record.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="FirstYearOfAttendance" maxOccurs="1" minOccurs="0" type="xs:integer">
         	<xs:annotation>
         		<xs:documentation>
         			First Year Of Attendance. Captures the first year of attendance associated with the education record.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="LastYearOfAttendance" maxOccurs="1" minOccurs="0" type="xs:integer">
         	<xs:annotation>
         		<xs:documentation>
         			Last Year Of Attendance. Captures the last year of attendance associated with the education record.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="HighestLevelOfEducationFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Highest Level Of Education Flag. Indicates whether this is the worker's highest level of education. Degrees are ranked using Qualification Rating Value. If a worker has two or more equivalent degrees, the most recent one is considered highest. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="FirstAttendanceDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			First Attendance Date. The first date of attendance.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="LastAttendanceDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Last Attendance Date. The last date of attendance.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="EducationDetails" type="EducationDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Education Details. Holds the education details such as school name, school location, degree etc. for the worker. This data is captured as provided by worker. There can be multiple details captured here for the worker.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="PreviousJobHistoryDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Previous Job History Details. Holds the details of previous jobs such as company name, job title, start and end date of employment etc. for the worker.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="JobHistoryIdentifier" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Job History Identifier. It is an identifier for each of the external employment instance of an applicant.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="JobTitle" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Job Title. The business title of the job.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CompanyName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Company Name. Name of the company associated with the job.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="EmploymentStartDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Employment Start Date. The start date of the employment.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="EmploymentEndDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Employment End Date. The end date of the employment.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="JobResponsibilities" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Job Responsibilities. Description of responsibilities and achievements during the tenure of the job. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="JobLocation" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Job Location. Location of the job. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="JobReferencePersonName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Job Reference Person Name. References from colleagues, subordinates,managers, associates during the job tenure.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="JobContactInformation" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Job Contact Information. Contact information for the job.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="PreviousJobHistoryDetails" type="PreviousJobHistoryDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Previous Job History Details. Holds the details of previous jobs such as company name, job title, start and end date of employment etc. for the worker.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="CertificationDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Certification Details.Holds the details of certifications completed by worker such as certification name, certification number, issue date etc.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="CertificationIdentifier" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Certification Identifier. Uniquely identifies the certificate for the Worker.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CertificationCountryCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Certification Country Code. Identifies the country in which the certification is used.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CertificationName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Certification Name.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CertificationTypeCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Certification Type Code. Identifies the type of certification associated with the entry.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="IssuerName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Certification Issuer Name. Name of the authority issuing the certificate.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CertificationNumber" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Certification Number.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="IssuedDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Certification Issued Date.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ExpiryDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Certification Expiry Date.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="CertificationDetails" type="CertificationDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Certification Details.Holds the details of certifications completed by worker such as certification name, certification number, issue date etc.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="EngagementDataAdministratorDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Engagment Data Administrator(EDA) Details captures the EDA assigned to the worker. An EDA is a delegate to the DB Sponsor of the CWR and there can be more than 1 EDA associated to a worker. In Workday, it is setup via custom organization. In PS, it was setup via governance role - GR000086. 
            An EDA is always assigned for a CWR, but it is not mandatory. For e.g. EDA will not be assigned to a postiion under the scope of MSP. MSP positions will be managed via the MSP and the manager.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="EDAWorkerIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Worker Identifier. This is the unique identifier for the EDA.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="EngagementDataAdministratorDetails" type="EngagementDataAdministratorDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Engagment Data Administrator(EDA) Details captures the EDA assigned to the worker. An EDA is a delegate to the DB Sponsor of the CWR and there can be more than 1 EDA associated to a worker. In Workday, it is setup via custom organization. In PS, it was setup via governance role - GR000086. 
            An EDA is always assigned for a CWR, but it is not mandatory. For e.g. EDA will not be assigned to a postiion under the scope of MSP. MSP positions will be managed via the MSP and the manager.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="WorkerFCAIDDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Worker FCAID Details. Holds the details about FCA Identifier. There can be only one record available in Worker FCAID Details entity for a Worker depending on the pre define rule set in MiFID tool based on citizenship of a worker and rules within the citizenship country.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="FCAIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			FCA Identifier. This is the identifier calculated based on prescirbed rule taking into account the citizenship. This is similar to current MiFID II ID generation rule Pre- Brexit.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="FCACountryCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			FCA Country Code. ISO 3 Char Country Code value. Identifies the country associated with the FCA Identifier i.e. the citizenship country based on which the FCA Identifier has been generated.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="FCAEffectiveDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			FCA Effective Date. It is the date from which the FCA Identifier is effective for the associated worker and country.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="FCAIdentifierTypeCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			FCA Identifier Type Code. This attribute identifies how the FCA Identifier has been derived. Possible values are CONCAT for Concatenated, NATIONALITYID for National ID, PASSPORT for Passport Number. There are rules defined to generate FCA Identifier  for a person basis on these type values.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="FCAIdentifierExpiryDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			FCA Identifier Expiry Date.This field holds the expiry date of the FCA Identifier document. Not necessarily there will be always an expiry date associated with this. This date is populated only in case of Passport.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="FCAComplianceFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			FCA Compliance Flag. Denotes if the associated FCA Identifier is compliant or not. An example of non-compliance is when FCA Identifier is based on Passport Number and passport has expired or if there is a need to submit documents and it has not been done.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="FCANationalityIDTypeCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			FCA Nationality ID Type Code. Captures the nationality id type which has been used to derive FCA Identifier if FCA Identifier is based on nationality ID.
                  For different countries, different nationality ids can be used to generate FCA Identifier as per the Regulation.This attribute here just identifies the appropriate type.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="FCALegalEntityIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			FCA Legal Entity Identifier. Captures the Legal Entity Identifier for certain set of POIs.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="WorkerFCAIDDetails" type="WorkerFCAIDDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Worker FCAID Details. Holds the details about FCA Identifier. There can be only one record available in Worker FCAID Details entity for a Worker depending on the pre define rule set in MiFID tool based on citizenship of a worker and rules within the citizenship country.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="CWRPersonalDetails">
   	<xs:annotation>
   		<xs:documentation>
   			CWR Personal Details. Captures various person level details from different perspective e.g. demographic etc for contingent workers. The details captured here are sensitive in nature and cannot be distributed to all consumers. This is the reason, such details are being captured in a separate entity for contingent workers.
            
            Usually these details are not captured for contingent workers in the source; however due to certain regulatory requirements, this information can be captured for a set of contingent workers and will only be distributed further to meet those regulatory requirements.
            
            For getting these details for employees, plesae refer to Worker Person Details
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="BirthDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Birth Date of the CWR.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BirthCountryCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Birth Country Code. The country the CWR was born in.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BirthCityName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Birth City Name. City where the CWR was born.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="SurnameAtBirth" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Surname At Birth. Usually represent the Surname at Birht of CWR.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CWRNationalityDetails" maxOccurs="unbounded" minOccurs="0" type="CWRNationalityDetails">
         	<xs:annotation>
         		<xs:documentation>
         			CWR Nationality Details. Holds the nationality details of the contingent worker. There could be more than one nationalities associated with a CWR. Please note that this is a sensitive information and cannot be distributed to all consumers. For nationality information for employees, please refer to Worker Nationality Details.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CWRCitizenshipDetails" maxOccurs="unbounded" minOccurs="0" type="CWRCitizenshipDetails">
         	<xs:annotation>
         		<xs:documentation>
         			CWR Citizenship Details. Holds the citizenship status of the contingent worker. There could be more than one citizenship status of a CWR. Please note that this is a sensitive information and cannot be distributed to all consumers. For citizenship information for employees, please refer to Worker Citizenship Details.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CWRPersonalAddressDetails" maxOccurs="unbounded" minOccurs="0" type="CWRPersonalAddressDetails">
         	<xs:annotation>
         		<xs:documentation>
         			CWR Personal Address Details. Holds the Personal Address Details like Home Address for CWR. Please note that this is a sensitive information and cannot be distributed to all consumers. For address  information for employees, please refer to Worker Address Details. Worker Address Details will also hold the work address information for contingent workers; only personal information will be maintained here.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CWRPersonalPhoneDetails" maxOccurs="unbounded" minOccurs="0" type="CWRPersonalPhoneDetails">
         	<xs:annotation>
         		<xs:documentation>
         			CWR Personal Phone Details. Holds the personal phone information like Home Phone Contact for contingent worker. Please note that his collection will only keep the personal contact information for contingent worker as it is sensitive in nature and cannot be distributed to all consumers. This information will only be collected if there is a regulatory requirement.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CWRIdentificationDetails" maxOccurs="unbounded" minOccurs="0" type="CWRIdentificationDetails">
         	<xs:annotation>
         		<xs:documentation>
         			CWR Identification Details. This is about certain identification documents related with contingent workers. Some examples of such identification documents are National IDs, Government ID.
                  There can be multiple types of identifications associated with a CWR and even within a particular type, there can be again different identifications associated with a CWR. E.g. National IDs might be of multiple types and all might be relevant to be captured here.
                  This being a sensitive data, it should not be distributed to all systems and hence is being maintained in a different section for contingent workers. Similar details for employees can be found at Worker Identification Details. In general, this information will not be captured for contingent workers and will only be allowed for regulatory reasons for a limited set of contingent workers.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="CWRPersonalDetails" type="CWRPersonalDetails">
   	<xs:annotation>
   		<xs:documentation>
   			CWR Personal Details. Captures various person level details from different perspective e.g. demographic etc for contingent workers. The details captured here are sensitive in nature and cannot be distributed to all consumers. This is the reason, such details are being captured in a separate entity for contingent workers.
            
            Usually these details are not captured for contingent workers in the source; however due to certain regulatory requirements, this information can be captured for a set of contingent workers and will only be distributed further to meet those regulatory requirements.
            
            For getting these details for employees, plesae refer to Worker Person Details
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="CWRIdentificationDetails">
   	<xs:annotation>
   		<xs:documentation>
   			CWR Identification Details. This is about certain identification documents related with contingent workers. Some examples of such identification documents are National IDs, Government ID.
            There can be multiple types of identifications associated with a CWR and even within a particular type, there can be again different identifications associated with a CWR. E.g. National IDs might be of multiple types and all might be relevant to be captured here.
            This being a sensitive data, it should not be distributed to all systems and hence is being maintained in a different section for contingent workers. Similar details for employees can be found at Worker Identification Details. In general, this information will not be captured for contingent workers and will only be allowed for regulatory reasons for a limited set of contingent workers.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="IdentificationDocumentIdentifier" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Identification Document Identifier. This is the ID for the associated identification document for CWR.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="IdentificationDocumentTypeCode" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Identification Document Type Code. Identifies the type of Identification Document being referred e.g. Nationality ID, Government ID.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="IdentificationDocumentSubTypeCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Identification Document Sub Type Code. Identifies the type within a specific Identification Document category e.g. if Identification Document Type is referring to Nationality ID then this field will identify the type of Nationality ID. it will identify the type of document within these categories.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="IdentificationDocumentPrimaryFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         </xs:element>
         <xs:element name="IdentificationDocumentCountryCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Identification Document Country Code as ISO 2 Character value. Identifies the country which issued the respective CWR Identification Document.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="IdentificationDocumentCountryRegionCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Identification Document Country Region. Identifies the region as ISO 3166 2 Character Code which issued the CWR Person Identification. This is applicable for Licenses only.
                  Please refer to https://en.wikipedia.org/wiki/ISO_3166-2 for details.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="IdentificationDocumentIssuedDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Identification Document Issued Date. Represents the date the corresponding ID was issued.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="IdentificationDocumentExpirationDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Identification Document Expiration Date. Represents the expiration date of the corresponding CWR Person Identification.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="IdentificationDocumentSeriesText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Identification Document Series. Applicable for National Identification Details.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="IdentificationDocumentIssuingAgencyName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Identification Document Issuing Agency Name. Represents the issuing agency for the CWR Person Identification. Applicable for Nationality ID Details.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="IdentificationDocumentIssuingAuthorityID" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Identification Document Issuing Authority Identifier. Identifies the authority which issued the Identification Document.Only applicable for Licenses
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="IdentificationDocumentClassText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Identification Document Class. Only applicable for Licenses.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="IdentificationDocumentVerifiedBy" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Universal Identifier for the Worker. Identifies the DB Worker who verified the Identification details.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="IdentificationDocumentVerificationDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Identification Document Verification Date. Represents the date when the identification document was verified.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="CWRIdentificationDetails" type="CWRIdentificationDetails">
   	<xs:annotation>
   		<xs:documentation>
   			CWR Identification Details. This is about certain identification documents related with contingent workers. Some examples of such identification documents are National IDs, Government ID.
            There can be multiple types of identifications associated with a CWR and even within a particular type, there can be again different identifications associated with a CWR. E.g. National IDs might be of multiple types and all might be relevant to be captured here.
            This being a sensitive data, it should not be distributed to all systems and hence is being maintained in a different section for contingent workers. Similar details for employees can be found at Worker Identification Details. In general, this information will not be captured for contingent workers and will only be allowed for regulatory reasons for a limited set of contingent workers.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="CWRPersonalAddressDetails">
   	<xs:annotation>
   		<xs:documentation>
   			CWR Personal Address Details. Holds the Personal Address Details like Home Address for CWR. Please note that this is a sensitive information and cannot be distributed to all consumers. For address  information for employees, please refer to Worker Address Details. Worker Address Details will also hold the work address information for contingent workers; only personal information will be maintained here.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="AddressIdentifier" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Identifier. Uniquely identifies an address.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressTypeCode" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Type Code. Identifies the type of address this record represents.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressEffectiveDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Identifies the effective date on which the address was set for the CWR. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine1Text" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 1. Part of the Address Line Details comprising of various parts of the address e.g. Street Name, Apartment Name etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine1DescriptionText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 1 Description. Workday has label override for each address line which provides detailed information about that address line. Like Address Line 1 for Italy is street or place name whereas it is district for Hungary. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine1LocalText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 1 Local Text. Part of the Address Line Details in local script comprising of various parts of the address e.g. Street Name, Apartment Name etc.
                  Example- 
                  City Local Kanji- Hiroshimaadk1 - 1-4-1 (Line1 Local Text)
                  Kagamiyama, Higashi adl2k - Hiroshima
                  City Local Furigana - Hiroshimaadl1f - 1-4-1 
                  Kagamiyama, Higashi adl2f - Hiroshima
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="Address1LocalDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 1 Description Local Text. Workday label override for each address line which provides detailed information about that address line in local language. Ex Address Line 1 for Italy is street or place name whereas it is district for Hungary. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine2Text" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 2. Part of the Address Line Details comprising of various parts of the address e.g. Street Name, Apartment Name etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine2DescriptionText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 2 Description. Workday has label override for each address line which provides detailed information about that address line. Like Address Line 2 is floor for Argentina whereas it is additional address for Italy.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine2LocalText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 2 Local Text. Part of the Address Line Details in local script comprising of various parts of the address e.g. Street Name, Apartment Name etc.
                  Ex- 
                  City Local Kanji- Hiroshimaadk1 - 1-4-1 
                  Kagamiyama, Higashi adl2k - Hiroshima ( Line2 Local Text )
                  City Local Furigana - Hiroshimaadl1f - 1-4-1 
                  Kagamiyama, Higashi adl2f - Hiroshima
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="Address2LocalDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 2 Description Local Text. Workday label override for each address line which provides detailed information about that address line in local language. Ex Address Line 1 for Italy is street or place name whereas it is district for Hungary. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine3Text" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 3. Part of the Address Line Details comprising of various parts of the address e.g. Street Name, Apartment Name etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine3DescriptionText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 3 Description. Workday has label override for each address line which provides detailed information about that address line. Like Address Line 3 is house number for Singapore whereas it is street or place type for Italy.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine3LocalText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 3 Local Text. Part of the Address Line Details in local script comprising of various parts of the address e.g. Street Name, Apartment Name etc.
                  Ex- 
                  City Local Kanji- Hiroshimaadk1 - 1-4-1 
                  Kagamiyama, Higashi adl2k - Hiroshima
                  City Local Furigana - Hiroshimaadl1f - 1-4-1  ( Line3 Local Text )
                  Kagamiyama, Higashi adl2f - Hiroshima
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="Address3LocalDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 3 Description Local Text. Workday label override for each address line which provides detailed information about that address line in local language. Ex Address Line 1 for Italy is street or place name whereas it is district for Hungary. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine4Text" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 4. Part of the Address Line Details comprising of various parts of the address e.g. Street Name, Apartment Name etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine4DescriptionText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 4 Description. Workday has label override for each address line which provides detailed information about that address line. Like Address Line 4 is house number for Argentina whereas it is street number for Italy.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine4LocalText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 4 Local Text. Part of the Address Line Details in local script comprising of various parts of the address e.g. Street Name, Apartment Name etc.
                  Ex- 
                  City Local Kanji- Hiroshimaadk1 - 1-4-1 
                  Kagamiyama, Higashi adl2k - Hiroshima
                  City Local Furigana - Hiroshimaadl1f - 1-4-1 
                  Kagamiyama, Higashi adl2f - Hiroshima  ( Line4 Local Text )
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="Address4LocalDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 4 Description Local Text. Workday label override for each address line which provides detailed information about that address line in local language. Ex Address Line 1 for Italy is street or place name whereas it is district for Hungary. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine5Text" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 5. Part of the Address Line Details comprising of various parts of the address e.g. Street Name, Apartment Name etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine5DescriptionText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 5 Description. Workday has label override for each address line which provides detailed information about that address line. Like Address Line 5 is house number for Spain whereas it is floor number for Singapore.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine5LocalText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 5 Local Text. Part of the Address Line Details in local script comprising of various parts of the address e.g. Street Name, Apartment Name etc.
                  Ex-
                  City Local Kanji- Hiroshimaadk1 - 1-4-1 
                  Kagamiyama, Higashi adl2k - Hiroshima
                  City Local Furigana - Hiroshimaadl1f - 1-4-1 
                  Kagamiyama, Higashi adl2f - Hiroshima 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="Address5LocalDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 5 Description Local Text. Workday label override for each address line which provides detailed information about that address line in local language. Ex Address Line 1 for Italy is street or place name whereas it is district for Hungary. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine6Text" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 6. Part of the Address Line Details comprising of various parts of the address e.g. Street Name, Apartment Name etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine6DescriptionText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 6 Description. Workday has label override for each address line which provides detailed information about that address line. Like Address Line 6 is house number extension for Spain whereas it is stairway number for Hungary.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine6LocalText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 6 Local Text. Part of the Address Line Details in local script comprising of various parts of the address e.g. Street Name, Apartment Name etc.
                  Ex- 
                  City Local Kanji- Hiroshimaadk1 - 1-4-1  ( Line1 Local Text )
                  Kagamiyama, Higashi adl2k - Hiroshima  ( Line2 Local Text )
                  City Local Furigana - Hiroshimaadl1f - 1-4-1 ( Line3 Local Text )
                  Kagamiyama, Higashi adl2f - Hiroshima  ( Line4 Local Text )
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="Address6LocalDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 6 Description Local Text. Workday label override for each address line which provides detailed information about that address line in local language. Ex Address Line 1 for Italy is street or place name whereas it is district for Hungary. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine7Text" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 7. Part of the Address Line Details comprising of various parts of the address e.g. Street Name, Apartment Name etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine7DescriptionText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 7 Description. Workday has label override for each address line which provides detailed information about that address line. Like Address Line 7 is house number for Thailand whereas it is floor number for Hungary.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine7LocalText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 7 Local Text. Part of the Address Line Details in local script comprising of various parts of the address e.g. Street Name, Apartment Name etc.
                  Ex- 
                  City Local Kanji- Hiroshimaadk1 - 1-4-1  ( Line1 Local Text )
                  Kagamiyama, Higashi adl2k - Hiroshima  ( Line2 Local Text )
                  City Local Furigana - Hiroshimaadl1f - 1-4-1 ( Line3 Local Text )
                  Kagamiyama, Higashi adl2f - Hiroshima  ( Line4 Local Text )
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="Address7LocalDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 8 Description Local Text. Workday label override for each address line which provides detailed information about that address line in local language. Ex Address Line 1 for Italy is street or place name whereas it is district for Hungary. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine8Text" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 8. Part of the Address Line Details comprising of various parts of the address e.g. Street Name, Apartment Name etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine8DescriptionText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 8 Description. Workday has label override for each address line which provides detailed information about that address line. Like Address Line 8 is floor for Spain  whereas it is door number for Hungary.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine8LocalText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 8 Local Text. Part of the Address Line Details in local script comprising of various parts of the address e.g. Street Name, Apartment Name etc.
                  Ex- 
                  City Local Kanji- Hiroshimaadk1 - 1-4-1  ( Line1 Local Text )
                  Kagamiyama, Higashi adl2k - Hiroshima  ( Line2 Local Text )
                  City Local Furigana - Hiroshimaadl1f - 1-4-1 ( Line3 Local Text )
                  Kagamiyama, Higashi adl2f - Hiroshima  ( Line4 Local Text )
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="Address8LocalDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 8 Description Local Text. Workday label override for each address line which provides detailed information about that address line in local language. Ex Address Line 1 for Italy is street or place name whereas it is district for Hungary. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine9Text" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 8. Part of the Address Line Details comprising of various parts of the address e.g. Floor, Door Number, House Number etc.. This was not available in PeopleSoft however it is available in Workday.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine9DescriptionText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 9  Description. Workday has label override for each address line which provides detailed information about that address line. Like Address Line 9  is door number for Spain whereas it is other address for Hungary.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine9LocalText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 9 Local Text. Part of the Address Line Details in local script comprising of various parts of the address e.g. Street Name, Apartment Name etc.
                  Ex- 
                  City Local Kanji- Hiroshimaadk1 - 1-4-1  ( Line1 Local Text )
                  Kagamiyama, Higashi adl2k - Hiroshima  ( Line2 Local Text )
                  City Local Furigana - Hiroshimaadl1f - 1-4-1 ( Line3 Local Text )
                  Kagamiyama, Higashi adl2f - Hiroshima  ( Line4 Local Text )
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="Address9LocalDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 9 Description Local Text. Workday label override for each address line which provides detailed information about that address line in local language. Ex Address Line 1 for Italy is street or place name whereas it is district for Hungary. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressNumber1Code" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Number 1 Code is part of the address component and is populated only for specific countries.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressNumber2Code" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Number 2 Code is part of the address component and is populated only for specific countries.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MunicipalityName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Name of the Municipality.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CityName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			City Name.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="StateCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			State Code.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="StateDescriptionText" maxOccurs="1" minOccurs="0" type="xs:string">
         </xs:element>
         <xs:element name="CityLocalName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			City Local Name- Name of the city in local language
                  Ex- Tokyo would come in local script
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CountyName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			County Name.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CitySubdivision1Text" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			City Subdivision or Submunicipality 1 Text. Part of the City Subdivision details or Submunicipality details within an address.
                  Ex-
                  Addr Line 1 - Jl. H.R. Rasuna Said
                  Addr Line 2 - Kav. 8-9.
                  Random Village, (City Subdivision1)
                  Random District (City Subdivision2)
                  Jakarta 12940
                  Jakarta Raya
                  Indonesia
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CitySubdivision1Description" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			City Subdivision or Submunicipality 1 Description Text.Text Override Label (such as Municipality or District)  containing description of the City Subdivision details or Submunicipality details within an address.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CitySubdivision1LocalText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Submunicipality or City Subdivision 1 Local Text. Part of the Submunicipality details or City Subdivision details within an address (in local language)
                  Ex-
                  District Name(in Russian Language)
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CitySubdivision1LocalDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			City Subdivision or Submunicipality 1 Description Text.Text Override Label (such as Municipality or District)  containing local language description of the City Subdivision details or Submunicipality details within an address.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CitySubdivision2Text" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			City Subdivision or Submunicipality 2 Text. Part of the City Subdivision details or Submunicipality details within an address.
                  Ex-
                  Addr Line 1 - Jl. H.R. Rasuna Said
                  Addr Line 2 - Kav. 8-9.
                  Random Village, (City Subdivision1)
                  Random District (City Subdivision2)
                  Jakarta 12940
                  Jakarta Raya
                  Indonesia
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CitySubdivision2Description" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			City Subdivision or Submunicipality 2 Description Text.Text Override Label (such as Municipality or District)  containing description of the City Subdivision details or Submunicipality details within an address.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CitySubdivision2LocalText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			City Subdivision Local 2 Text. Part of the Submunicipality details or City Subdivision details within an address(in local language)
                  Ex-
                  Settlement Name(in Russian Language)
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CitySubdivision2LocalDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			City Subdivision or Submunicipality 2 Description Local Text.Text Override Label (such as Municipality or District)  containing local language description of the City Subdivision details or Submunicipality details within an address.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CountryRegionCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Country region. Identifies the region through ISO 3166 2 Character Code for regions. Region represents County, State etc. depending on the Country.
                  Please refer to https://en.wikipedia.org/wiki/ISO_3166-2 for details.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RegionSubdivision1Text" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Region Subdivision 1 Text. Part of the Region Subdivision details within an address.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RegionSubdivision1Description" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Region Subdivision 1 Description Text. text Override Label containing details about the Region Subdivision details within an address.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RegionSubdivision1LocalText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Subregion or Region Subdivision Detail Line 2 Text. Part of the Subregion details or Region Subdivision details within an address in local language
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RegionSubdivision1LocalDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Region Subdivision 1 Description Local Text. text Override Label containing details in local language about the Region Subdivision details within an address.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RegionSubdivision2Text" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Region Subdivision 2 Text. Part of the Region Subdivision details within an address.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RegionSubdivision2Description" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Region Subdivision 2 Description Text. text Override Label containing details about the Region Subdivision details within an address.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RegionSubdivision2LocalText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Subregion or Region Subdivision Detail Line 4 Text. Part of the Subregion details or Region Subdivision details within an addres in local language
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RegionSubdivision2LocalDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Region Subdivision 1 Description Text. text Override Label containing details in local language about the Region Subdivision details within an address in locla language
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PostalCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Postal Code.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CountryCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Country Code. ISO 3 Char Country Code to be used.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressFormatTypeCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Format Type. Identifies the format for the Formatted Address field.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="FormattedAddressText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Formatted Address. Formatted address in the format specified for the country.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DefaultedBusinessSiteAddressFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Defaulted Business Site Address Flag.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PublicAddressFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Public Address Flag. Identifies if the address is public.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PrimaryAddressFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Primary Address Flag. Identifies if the address is a primary address.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="CWRPersonalAddressDetails" type="CWRPersonalAddressDetails">
   	<xs:annotation>
   		<xs:documentation>
   			CWR Personal Address Details. Holds the Personal Address Details like Home Address for CWR. Please note that this is a sensitive information and cannot be distributed to all consumers. For address  information for employees, please refer to Worker Address Details. Worker Address Details will also hold the work address information for contingent workers; only personal information will be maintained here.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="CWRPersonalPhoneDetails">
   	<xs:annotation>
   		<xs:documentation>
   			CWR Personal Phone Details. Holds the personal phone information like Home Phone Contact for contingent worker. Please note that his collection will only keep the personal contact information for contingent worker as it is sensitive in nature and cannot be distributed to all consumers. This information will only be collected if there is a regulatory requirement.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="PhoneUsageCode" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Phone Usag Code. Identifies the usage for personal phone as for each CWR, there can be multiple phone records present. Examples are Home, etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CountryCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Country Code. ISO 3 Char Country Code to be used. At times, country code is used to determine the Country Phone Code as sometimes same code is used by multiple countries.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="InternationalPhoneCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			International Phone Code Number. This is the prefix for international code.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AreaCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Area Code. Code specific to area within the country.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PhoneNumber" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Phone Number.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="Extension" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Extension.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PhoneDeviceTypeCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Phone Device Type. Identifies the type of phone device e.g. Landline, Mobile etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="FormattedPhoneNumber" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Formatted Phone Number.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PublicContactFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Public Contact Flag. Identifies if the contact is public.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PrimaryContactFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Primary Contact Flag. Identifies the primary contact for each type of Contact.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="CWRPersonalPhoneDetails" type="CWRPersonalPhoneDetails">
   	<xs:annotation>
   		<xs:documentation>
   			CWR Personal Phone Details. Holds the personal phone information like Home Phone Contact for contingent worker. Please note that his collection will only keep the personal contact information for contingent worker as it is sensitive in nature and cannot be distributed to all consumers. This information will only be collected if there is a regulatory requirement.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="CWRCitizenshipDetails">
   	<xs:annotation>
   		<xs:documentation>
   			CWR Citizenship Details. Holds the citizenship status of the contingent worker. There could be more than one citizenship status of a CWR. Please note that this is a sensitive information and cannot be distributed to all consumers. For citizenship information for employees, please refer to Worker Citizenship Details.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="CitizenshipStatusCode" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Citizenship status of the CWR. One CWR may have more than one citizenships. Workday stores the Citizenship Status Code values as the concatenation of the Country Code or Country Name and Citizenship Status values e.g. USA_Citizen, UK_Biritsh_Citizen etc.
                  
                  There are only four values configured as of now which are NATIVE, NATURALIZED, PERMANENT_RESIDENT and OTHER for Workday.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CitizenshipCountryCode" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Citizenship country code of the CWR.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CitizenshipStatusDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Citizenship Status Description is to store the citizenship status like Naturalised , Native.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="CWRCitizenshipDetails" type="CWRCitizenshipDetails">
   	<xs:annotation>
   		<xs:documentation>
   			CWR Citizenship Details. Holds the citizenship status of the contingent worker. There could be more than one citizenship status of a CWR. Please note that this is a sensitive information and cannot be distributed to all consumers. For citizenship information for employees, please refer to Worker Citizenship Details.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="CWRNationalityDetails">
   	<xs:annotation>
   		<xs:documentation>
   			CWR Nationality Details. Holds the nationality details of the contingent worker. There could be more than one nationalities associated with a CWR. Please note that this is a sensitive information and cannot be distributed to all consumers. For nationality information for employees, please refer to Worker Nationality Details.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="NationalityCountryCode" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Nationality Country Code. Captures the country code associated with the nationality of the CWR.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PrimaryNationalityFlag" maxOccurs="1" minOccurs="1" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Primary Nationality Flag. When the value of this attribute is True then the related country is the primary nationality of the CWR.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="CWRNationalityDetails" type="CWRNationalityDetails">
   	<xs:annotation>
   		<xs:documentation>
   			CWR Nationality Details. Holds the nationality details of the contingent worker. There could be more than one nationalities associated with a CWR. Please note that this is a sensitive information and cannot be distributed to all consumers. For nationality information for employees, please refer to Worker Nationality Details.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="RelatedPersonReference">
   	<xs:annotation>
   		<xs:documentation>
   			Related Person Details. This entity holds the details for related persons for a worker as per HR business processes. A related person will have a relationship with the worker and will be defined as a Dependent and/or a Beneficiary and/or an Emergency Contact.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="RelatedPersonReferenceIdentifier" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Unique Identifier for the Related Person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DependentFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Dependent Flag. Identifies if the related person is defined as a dependent.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BeneficiaryFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Beneficiary Flag. Identifies if the related person is defined as a beneficiary.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="EmergencyContactFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Emergency Contact Flag. Identifies if the related person is defined as an emergency contact.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RelatedPersonRelationshipCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Related Person Relationship Code. Identifies the relationship between Worker and the related person. Examples are FATHER, MOTHER, SPOUSE etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RelatedPersonPersonalDetails" maxOccurs="1" minOccurs="1" type="RelatedPersonPersonalDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Related Person Personal Details. Captures various person level details from different perspective e.g. demographic, political affiliation, medical exam etc. There will be one record/entry for each Person
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RelatedPersonNameDetails" maxOccurs="unbounded" minOccurs="0" type="NameDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Related Person Name Details. Holds the name details for related persons. It is possible that a person is associated with multiple names. Usually this is captured with Name Type Information e.g. Legal Name, Preferred Name etc. Each type will allow to capture different component of names e.g. Prefix, Suffix, First Name, Last Name etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RelatedPersonAddressDetails" maxOccurs="unbounded" minOccurs="0" type="AddressDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Holds Related Person Address Details. One Related Person can have zero, one or many address details.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RelatedPersonPhoneContactDetails" maxOccurs="unbounded" minOccurs="0" type="PhoneContactDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Holds Related Person Phone Contact Details. One related person has zero, one or more than one phone details.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RelatedPersonEmailContactDetails" maxOccurs="unbounded" minOccurs="0" type="EmailContactDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Holds Related Person Email Contact Details. One related person can have zero, one or more than one email details.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RelatedPersonInstantMessengerContactDetails" maxOccurs="unbounded" minOccurs="0" type="InstantMessengerContactDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Holds Related Person Instant Messenger Contact Details. One related person can have zero, one or more than one IM details.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RelatedPersonWebAddressContactDetails" maxOccurs="unbounded" minOccurs="0" type="WebAddressContactDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Holds Related Person Web Address Contact Details. One related person can have zero, one or more than one web address details.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RelatedPersonMilitaryServiceDetails" maxOccurs="unbounded" minOccurs="0" type="MilitaryServiceDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Related Person Military Service Details. Holds the military service details associated with Related Persons. There can be more than one military service details associated with a Person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RelatedPersonDisabilityDetails" maxOccurs="unbounded" minOccurs="0" type="DisabilityDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Holds Related Person Disability Details. On related person can zero, one or more than one disability details.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RelatedPersonIdentificationDetails" maxOccurs="unbounded" minOccurs="0" type="PersonIdentificationDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Related Person Identification Details. This is about certain identification documents related with Related Persons. Some examples of such identification documents are National IDs, Government IDs, Visas, Passports, Driving Licenses etc.
                  There can be multiple types of identifications associated with a person and even within a particular type, there can be again different identifications associated with a Person. E.g. National IDs might be of multiple types and all might be relevant to be captured here.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RelatedPersonOccupationDetails" maxOccurs="unbounded" minOccurs="0" type="RelatedPersonOccupationDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Related Person Occupation Details. Holds the occupation details for the related person for worker. E.g. Occupation, Employer Name etc. This is being defined as a collection as Workday suggests that there can be multiple entries however in case of PeopleSoft, there will be just one entry (if available).
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="RelatedPersonReference" type="RelatedPersonReference">
   	<xs:annotation>
   		<xs:documentation>
   			Related Person Details. This entity holds the details for related persons for a worker as per HR business processes. A related person will have a relationship with the worker and will be defined as a Dependent and/or a Beneficiary and/or an Emergency Contact.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="EmployeeRelationDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Employee Relation Details. Maintains data related to investigations, disciplinary actions and employee complaints raised by the HR Consequence Management team in the ER Tracker application. The data is maintained for each case and includes various flags identifying the impact on performance and reward processes etc. 
            At any point in time, data will be maintained for a certain period only. Data maintenance period here is calculated for each case depending on the year/date value available with different flags. In general, the data is maintained for last two years or in future. While for TPI and Disciplinary, this is bsaed on last two years; in case of Recognition flag, period is calculated based on year from Recognition Effective Upto date variable where year should be either in last two years or in future. If there are no cases against a worker with any flag set then this section will remain empty.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="ERCaseIdentifier" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			ER Case Identifier. Identifies the case created by the HR Consequence Management team against the worker in the ER Tracker application. This is directly sourced from the case id created in ER Tracker. The various flags will always be associated with a ER case.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="TPIFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			TPI Flag. Upon disciplinary of an ER case, if it results in a sanction, then it may impact the Total Performance of the worker. This field indicates whether the TPI (as part of Total Performance process) gets validated or not. Once a case is raised in ER Tracker, the case owners provide their feedback in the ER Tracker application and based on the logic in ER Tracker, the flag is either set to True or False. This flag value is applicable for a particular performance year. Once the flag is set to True, it is highly unlikely that it is set back to False for that year. Only under exceptional cases, like corrections, will this flag be changed to False from True.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="TPIYear" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			TPI Year. If TPI Flag is set to True then this attribute identifies the performance year for which the TPIs get affected for the worker.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DisciplinaryCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Disciplinary Code. Upon disciplinary of an ER case, it might result in certain disciplinary sanctions which may have impact on comp decision. This attribute identifies if there are disciplinary sanctions in existence for this case which are relevant to comp decision. The value for this attribute can be set to YES (Disciplinary saction to be applied for comp decision), NO (No Disciplinary saction applied for comp decision) or EXCLUDED - TERMINATED, EXCLUDED - COUNTRY, EXCLUDED - FORFEITURE (No disciplinary saction applied for comp decision). It might also be possible to have this flag set as blank if there is no such value received. A disciplinary sanction is only relevant for a particular year end and for only one year end cycle.
                  
                  Once this flag is set to True, it is highly unlikely that it is set back to False for that year. Only under exceptional cases, like corrections, will this flag be changed to False from True.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DisciplinaryCodeERLevel" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Disciplinary Code ER Level. This attribute identifies how severe the case is and will help a manager to understand what comp decision needs to be taken. This attribute will have values set to 1, 2, 3 or NA if Disciplinary Code is set to YES. NA is used for most cases in Germany.
                  Few other values associated with other Disciplinary Codes are: EXCLUDED - TERMINATED, EXCLUDED - COUNTRY, EXCLUDED - FORFEITURE
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DisciplinaryCodeYear" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Disciplinary Code Year. If disciplinary code is set to YES then this attribute identifies the year end for which manager needs to consider details while taking cop decision in reward platform. E.g. if value is set to 2021 then it needs to be part of the 2021 year end cycle.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RecognitionImpactCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Recognition Impact Code. If a disciplinary sanction is issued, this may impact the recognition process for an individual. This attribute can have following values:
                  
                  1) YES - If there is a disciplinary sanction relevant to the recognition process
                  2) HOLD - If there is a pending case which could result in a sanction and therefore affect the recognition process
                  
                  It might also be possible to have this flag set as blankif there is no value set for the case.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RecognitionImpactEffectiveFrom" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Recognition Impact Effective From is a date attribute. This identifies the starting date from which the individual should be considered for impact.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RecognitionImpactEffectiveUpto" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Recognition Impact Effective Upto is a date attribute. If Recognition Impact Code is set to YES then this identifies the date up until the individual should be considered for impact. If the Recognition Impact Code is set to HOLD then this date is set to 31-12-9999 until the case is closed.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="EmployeeRelationDetails" type="EmployeeRelationDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Employee Relation Details. Maintains data related to investigations, disciplinary actions and employee complaints raised by the HR Consequence Management team in the ER Tracker application. The data is maintained for each case and includes various flags identifying the impact on performance and reward processes etc. 
            At any point in time, data will be maintained for a certain period only. Data maintenance period here is calculated for each case depending on the year/date value available with different flags. In general, the data is maintained for last two years or in future. While for TPI and Disciplinary, this is bsaed on last two years; in case of Recognition flag, period is calculated based on year from Recognition Effective Upto date variable where year should be either in last two years or in future. If there are no cases against a worker with any flag set then this section will remain empty.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="WorkerRedFlagDetails">
   	<xs:annotation>
   		<xs:documentation>
   			WorkerRedFlagDetails. Holds the information for YTD value of Red Flag Score tagged to worker for corresponding reporting year. The Red Flag might be tagged to worker in case worker is noncompliant to following compliance process like 
            
            Red Flags Categories - All Devision
            
            Compliance Attestation
            Gifts and Entertainment
            Mandatory Time Away(MTA)
            Mandatory Training
            Personal Account Dealing
            Tone from the Top
            
            Red Flags Categories - Division specific categories
            
            Conflict Clearing
            Credit Limit Breaches
            Electronic Communications
            Independent Price Verification
            Market Risk Limit Breaches
            New Product Approval (NPA)
            Number of Direct Reports
            P And L and Risk sign-off
            Registration/Licensing(US exam completion)
            Research Independence
            Restricted List
            TRACE Reporting(US only)
            Trader Mandate Breaches
            Trader Mandate Recertification
            Unapproved Models
            Unauthorised Wall Crossing
            WSP: Supervisory Obligations Task
            
            Please note that mapping is not yet available for this entity in eRDS.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="ReportingYear" maxOccurs="1" minOccurs="0" type="xs:integer">
         	<xs:annotation>
         		<xs:documentation>
         			ReportingYear holds the value of Year for which Red Flag YTD information is stored.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RedFlagYTDScore" maxOccurs="1" minOccurs="0" type="xs:integer">
         	<xs:annotation>
         		<xs:documentation>
         			RedFlagYTDScore holds the YTD value of Red Flag Score for corresponding reporting year.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="WorkerRedFlagDetails" type="WorkerRedFlagDetails">
   	<xs:annotation>
   		<xs:documentation>
   			WorkerRedFlagDetails. Holds the information for YTD value of Red Flag Score tagged to worker for corresponding reporting year. The Red Flag might be tagged to worker in case worker is noncompliant to following compliance process like 
            
            Red Flags Categories - All Devision
            
            Compliance Attestation
            Gifts and Entertainment
            Mandatory Time Away(MTA)
            Mandatory Training
            Personal Account Dealing
            Tone from the Top
            
            Red Flags Categories - Division specific categories
            
            Conflict Clearing
            Credit Limit Breaches
            Electronic Communications
            Independent Price Verification
            Market Risk Limit Breaches
            New Product Approval (NPA)
            Number of Direct Reports
            P And L and Risk sign-off
            Registration/Licensing(US exam completion)
            Research Independence
            Restricted List
            TRACE Reporting(US only)
            Trader Mandate Breaches
            Trader Mandate Recertification
            Unapproved Models
            Unauthorised Wall Crossing
            WSP: Supervisory Obligations Task
            
            Please note that mapping is not yet available for this entity in eRDS.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="WorkerPersonalDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Worker Personal Details. Captures various person level details from different perspective e.g. demographic, political affiliation, medical exam etc. There will be one record/object for each Person.
            
            Certain details for contingent workers e.g. date of birth etc. are considered sensitive and usually are not captured within the source itself. However in case these details are captured for contingent workers, then such would be available in a separate object called as CWR Personal Details. This is to ensure non-distribution of such data to all the consumers.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="GenderCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Gender Code. Provides information on gender for the person. E.g. Male(M), Female(F), Not Disclosed(U),Germany_only_diverse(D) and India only - Other(O) etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BirthDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Birth Date of the Person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DeathDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			This attribute only deals for the worker record where worker is deceased. In this case, it captures the date of death for the person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BirthCountryCode" maxOccurs="1" minOccurs="0" type="xs:string" erds:obfuscationRequired="true" erds:obfuscationType="Scrambling" erds:scramblingFactor="19">
         	<xs:annotation>
         		<xs:documentation>
         			Birth Country Code. Identifies the country where this worker was bornt.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BirthRegionCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Birth Region Code. Country region where the person was bornt. Identifies the birth region through ISO 3166 2 Character Code for regions.
                  Please refer to https://en.wikipedia.org/wiki/ISO_3166-2 for details.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BirthCityName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Birth City Name. City where the person was bornt.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MaritalStatusCode" maxOccurs="1" minOccurs="0" type="xs:string" erds:obfuscationRequired="true" erds:obfuscationType="Scrambling" erds:scramblingFactor="65">
         	<xs:annotation>
         		<xs:documentation>
         			Marital Status of the Person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MaritalStatusDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Date that the worker's Marital Status is/was effective. Represents date of Marital Status change e.g. date of marriage or date of divorce etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ReligionName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Religion Name. Name of the religion which person follows.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="NativeRegionCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			The native region of the person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PayrollDependentsCount" maxOccurs="1" minOccurs="0" type="xs:integer">
         	<xs:annotation>
         		<xs:documentation>
         			Number of Payroll Dependents on the Worker.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="LastMedicalExamDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			This field tracks the worker's most recent medical examination date.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="LastMedicalExamValidityDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			This field tracks the expiration date of the worker's most recent medical exam .
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="LastMedicalExamNotes" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			This field tracks any comments regarding the worker's most recent medical exam.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="TobaccoUseFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Tobacco Use Flag. Flag to identify if person uses tobacco products.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="SocialBenefitsLocalityCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			This is person's Social Benefits Locality.Social Benefits Locality value is captured only for workes and not applicants.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PoliticalAffiliationCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Political Affiliation Code. This field tracks the political affiliation of the person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PreferredLanguageCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Preferred Language Code. This is the language code for the preferred language for the user. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="SystemLanguageCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			System Language Code. Usually representing the language in which displays for various systems to be shown for the person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="WorkerCitizenshipDetails" maxOccurs="unbounded" minOccurs="0" type="WorkerCitizenshipDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Worker Citizenship Details. Holds the citizenship status of the worker. There could be more than one citizenship status of a worker.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="WorkerEthnicityDetails" maxOccurs="unbounded" minOccurs="0" type="WorkerEthnicityDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Worker Ethnicity Details. Holds the ethnicity information of the workers. One person can hold more than one ethnicities e.g. White, Hispanic, Latino, etc. In PeopleSoft, a worker can have ethnicities set for multiple countries, but in Workday, the ethnicity is only set for the worker’s primary location and the older ethnicities for the non-primary locations would be overwritten.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="WorkerNationalityDetails" maxOccurs="unbounded" minOccurs="0" type="WorkerNationalityDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Worker Nationality Details. Holds the nationality details of the worker. There could be more than one nationalities associated with a worker.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="WorkerPersonalDetails" type="WorkerPersonalDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Worker Personal Details. Captures various person level details from different perspective e.g. demographic, political affiliation, medical exam etc. There will be one record/object for each Person.
            
            Certain details for contingent workers e.g. date of birth etc. are considered sensitive and usually are not captured within the source itself. However in case these details are captured for contingent workers, then such would be available in a separate object called as CWR Personal Details. This is to ensure non-distribution of such data to all the consumers.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="RelatedPersonPersonalDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Related Person Personal Details. Captures various person level details from different perspective e.g. demographic, political affiliation, medical exam etc. There will be one record/entry for each Person
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="GenderCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Gender Code. Provides information on gender for the person. E.g. Male(M), Female(F), Not Disclosed(U),Germany_only_diverse(D) and India only - Other(O) etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BirthDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Birth Date of the Person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DeathDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Date of Death for the Person, if deceased.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BirthCountryCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Birth Country Code. The country where the person was bornt.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BirthRegionCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Birth Region Code. Country region where the person was bornt. Identifies the birth region through ISO 3166 2 Character Code for regions.
                  Please refer to https://en.wikipedia.org/wiki/ISO_3166-2 for details.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="BirthCityName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Birth City Name. City where the person was bornt.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MaritalStatusCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Marital Status of the Person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MaritalStatusDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Date that the worker's Marital Status is/was effective. Represents date of Marital Status change e.g. date of marriage or date of divorce etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ReligionName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Religion Name. Name of the religion which person follows.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="NativeRegionCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			The native region of the person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PayrollDependentsCount" maxOccurs="1" minOccurs="0" type="xs:integer">
         	<xs:annotation>
         		<xs:documentation>
         			Number of Payroll Dependents on the Worker.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="LastMedicalExamDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			This field tracks the worker's most recent medical examination date.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="LastMedicalExamValidityDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			This field tracks the expiration date of the worker's most recent medical exam .
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="LastMedicalExamNotes" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			This field tracks any comments regarding the worker's most recent medical exam.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="TobaccoUseFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Tobacco Use Flag. Flag to identify if person uses tobacco products.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="SocialBenefitsLocalityCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			This is person's Social Benefits Locality.Social Benefits Locality value is captured only for workes and not applicants.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PoliticalAffiliationCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Political Affiliation Code. This field tracks the political affiliation of the person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RelatedPersonCitizenshipDetails" maxOccurs="unbounded" minOccurs="0" type="RelatedPersonCitizenshipDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Related Person Citizenship Details. Captures the citizenship status of the related persons. There could be more than one citizenship status of a person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RelatedPersonEthncityDetails" maxOccurs="unbounded" minOccurs="0" type="RelatedPersonEthnicityDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Related Person Entity Details. Holds the ethnicity information of the related persons. One person can hold more than one ethnicities e.g. White, Hispanic, Latino, etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RelatedPersonNationalityDetails" maxOccurs="unbounded" minOccurs="0" type="RelatedPersonNationalityDetails">
         	<xs:annotation>
         		<xs:documentation>
         			Related Person Nationality Details. Holds the nationality details of  the related person. There could be more than one nationalities of a related person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="RelatedPersonPersonalDetails" type="RelatedPersonPersonalDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Related Person Personal Details. Captures various person level details from different perspective e.g. demographic, political affiliation, medical exam etc. There will be one record/entry for each Person
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="WorkerNationalityDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Worker Nationality Details. Holds the nationality details of the worker. There could be more than one nationalities associated with a worker.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="NationalityCountryCode" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Nationality Country Code. Captures the country code associated with the nationality of the person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PrimaryNationalityFlag" maxOccurs="1" minOccurs="1" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Primary Nationality Flag. When the value of this attribute is True then the related country is the primary nationality of the person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="WorkerNationalityDetails" type="WorkerNationalityDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Worker Nationality Details. Holds the nationality details of the worker. There could be more than one nationalities associated with a worker.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="RelatedPersonNationalityDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Related Person Nationality Details. Holds the nationality details of  the related person. There could be more than one nationalities of a related person.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="NationalityCountryCode" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Nationality Country Code. Captures the country code associated with the nationality of the person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PrimaryNationalityFlag" maxOccurs="1" minOccurs="1" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Primary Nationality Flag. When the value of this attribute is True then the related country is the primary nationality of the person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="RelatedPersonNationalityDetails" type="RelatedPersonNationalityDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Related Person Nationality Details. Holds the nationality details of  the related person. There could be more than one nationalities of a related person.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="WorkerCitizenshipDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Worker Citizenship Details. Holds the citizenship status of the worker. There could be more than one citizenship status of a worker. For citizenship details for contingent workers, please refer to CWR Citizenship Details
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="CitizenshipStatusCode" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Citizenship status of the persons. One person may have more than one citizenships. Workday stores the Citizenship Status Code values as the concatenation of the Country Code or Country Name and Citizenship Status values e.g. USA_Citizen, UK_Biritsh_Citizen etc.
                  
                  In case of PeopleSoft, there are various values available for Citizenship Status Code however for Workday, there are only four values configured as of now which are NATIVE, NATURALIZED, PERMANENT_RESIDENT and OTHER.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CitizenshipCountryCode" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Citizenship country code of the person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CitizenshipStatusDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Citizenship Status Description is to store the citizenship values fetched from PeopleSoft. It is concatenated with the Citizenship Country Code to form the Citizenship Status Code attribute values. .Workday stores the Citizenship Status Code values as the concatenation of the Country Code or Country Name and Citizenship Status values e.g. USA_Citizen, UK_Biritsh_Citizen etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="WorkerCitizenshipDetails" type="WorkerCitizenshipDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Worker Citizenship Details. Holds the citizenship status of the worker. There could be more than one citizenship status of a worker. For citizenship details for contingent workers, please refer to CWR Citizenship Details
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="RelatedPersonCitizenshipDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Related Person Citizenship Details. Captures the citizenship status of the related persons. There could be more than one citizenship status of a person.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="CitizenshipStatusCode" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Citizenship status of the persons. One person may have more than one citizenships. Workday stores the Citizenship Status Code values as the concatenation of the Country Code or Country Name and Citizenship Status values e.g. USA_Citizen, UK_Biritsh_Citizen etc.
                  
                  In case of PeopleSoft, there are various values available for Citizenship Status Code however for Workday, there are only four values configured as of now which are NATIVE, NATURALIZED, PERMANENT_RESIDENT and OTHER.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CitizenshipCountryCode" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Citizenship country code of the person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CitizenshipStatusDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Citizenship Status Description is to store the citizenship values fetched from PeopleSoft. It is concatenated with the Citizenship Country Code to form the Citizenship Status Code attribute values. .Workday stores the Citizenship Status Code values as the concatenation of the Country Code or Country Name and Citizenship Status values e.g. USA_Citizen, UK_Biritsh_Citizen etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="RelatedPersonCitizenshipDetails" type="RelatedPersonCitizenshipDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Related Person Citizenship Details. Captures the citizenship status of the related persons. There could be more than one citizenship status of a person.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="WorkerEthnicityDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Worker Ethnicity Details. Holds the ethnicity information of the workers. One person can hold more than one ethnicities e.g. White, Hispanic, Latino, etc. In PeopleSoft, a worker can have ethnicities set for multiple countries, but in Workday, the ethnicity is only set for the worker’s primary location and the older ethnicities for the non-primary locations would be overwritten.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="EthnicityCode" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Ethnicity Code of the person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="WorkerEthnicityDetails" type="WorkerEthnicityDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Worker Ethnicity Details. Holds the ethnicity information of the workers. One person can hold more than one ethnicities e.g. White, Hispanic, Latino, etc. In PeopleSoft, a worker can have ethnicities set for multiple countries, but in Workday, the ethnicity is only set for the worker’s primary location and the older ethnicities for the non-primary locations would be overwritten.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="RelatedPersonEthnicityDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Related Person Entity Details. Holds the ethnicity information of the related persons. One person can hold more than one ethnicities e.g. White, Hispanic, Latino, etc.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="EthnicityCode" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Ethnicity Code of the person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="RelatedPersonEthnicityDetails" type="RelatedPersonEthnicityDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Related Person Entity Details. Holds the ethnicity information of the related persons. One person can hold more than one ethnicities e.g. White, Hispanic, Latino, etc.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="NameDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Name Details. Super type entity allows to capture the Person Name Information. It is possible that a person is associated with multiple names. Usually this is captured with Name Type Information e.g. Legal Name, Preferred Name etc. Each type will allow to capture different component of names e.g. Prefix, Suffix, First Name, Last Name etc.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="NameTypeCode" maxOccurs="1" minOccurs="1" type="xs:string" erds:obfuscationRequired="true" erds:obfuscationType="Scrambling" erds:scramblingFactor="29">
         	<xs:annotation>
         		<xs:documentation>
         			Name Type Code. E.g. Primary Name, Preferred Name, Maiden Name and other Name Types to meet regional requirements. There will be at least a record for Primary Name (also known as Legal Name within Workday) in the Name Details table.
                  
                  In case of PeopleSoft, data can be available for types PRI, PRF, LEG, DEG, MDN, OTH, FR2, FTR, FR1, MTR, LND, LNT, MAR, OFF, NAT, NPR and PRS. However, majority of the data is for types PRI and PRF. In case of Workday, Legal name data will be defined with  type as PRI, Preferred name data will be defined with type as PRF and then Additional Name Types being followed are MDN, OTH and FR1.
                  
                  Considering the Workday data, it is advisable to refer to types PRI, PRF, MDN, OTH and FR1 only as data for rest of the types would not be available in future.
                  
                  While PeopleSoft has data type for Legal (LEG) it is not much populated and consumption is primarily for type PRI.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="NameCountryCode" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Name Country Code. Identifies the country associated with the name. This kind of information helps in identifying country specific preferences around name.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="TitlePrefixText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Name Title Text. E.g. Dr. etc. Titles can be royal, political, religious, and so on. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="SalutationPrefixText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Salutation Text.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RoyalPrefixText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Royal Prefix.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="FirstName" maxOccurs="1" minOccurs="0" type="xs:string" erds:obfuscationRequired="true" erds:obfuscationType="Scrambling" erds:scramblingFactor="23">
         	<xs:annotation>
         		<xs:documentation>
         			First Name of the Person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MiddleName" maxOccurs="1" minOccurs="0" type="xs:string" erds:obfuscationRequired="true" erds:obfuscationType="Scrambling" erds:scramblingFactor="7">
         	<xs:annotation>
         		<xs:documentation>
         			Middle Name of the Person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="LastName" maxOccurs="1" minOccurs="0" type="xs:string" erds:obfuscationRequired="true" erds:obfuscationType="Scrambling" erds:scramblingFactor="34">
         	<xs:annotation>
         		<xs:documentation>
         			Last Name of the Person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="SecondLastName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			The second family or last name of the Person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="SocialSuffixText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Social Suffix Text as part of the name for the Person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AcademicSuffixText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Academic Suffix Text as part of the name of the Person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="HereditarySuffixText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Hereditary Suffix Text as part of the Name for the Person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="HonorarySuffixText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Honorary Suffix Text as part of the Name for the Person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ProfessionalSuffixText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Professional Suffix Text as part of the Name for the Person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ReligiousSuffixText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Religious Suffix Text as part of the Name for the Person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RoyalSuffixText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Royal Suffix Text as part of the Name for the Person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="FormattedName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Formatted Name. Name formatted for Formal Display with all of its parts properly arranged.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="ReportingName" maxOccurs="1" minOccurs="0" type="xs:string" erds:obfuscationRequired="true" erds:obfuscationType="Scrambling" erds:scramblingFactor="72">
         	<xs:annotation>
         		<xs:documentation>
         			Fully formatted name for reporting with all of its parts in their proper place.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PreferredFirstName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Preferred First Name of a Worker.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="FullLegalName" maxOccurs="1" minOccurs="0" type="xs:string" erds:obfuscationRequired="true" erds:obfuscationType="Scrambling" erds:scramblingFactor="41">
         	<xs:annotation>
         		<xs:documentation>
         			Full Legal Name for the Person. Usually used for specific countries like Malaysia and Singapore to allow workers to enter their full legal name. It is not a concatenation of First and Last Names.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="LocalScriptCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Local Script Code. Identifies the local script as configured for the country.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="LocalScriptFullName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Full Name formatted in local script as configured for the country.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="LocalScriptFirstName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			First Name as per Local Script.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="LocalScriptMiddleName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Middle Name in Local Script.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="LocalScriptLastName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Last Name in Local Script.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="LocalScriptSecondLastName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Second Last Name in Local Script.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="SecondlLocalScriptCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Additional Local Script Code. Identifies an additional local script as configured for the country. This must be in addition to the script identified in attribute Local Script Code.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="SecondLocalScriptFirstName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			First Name as per Additional Local Script.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="SecondLocalScriptMiddleName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Middle Name in Additional Local Script.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="SecondLocalScriptLastName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Last Name in Additional Local Script.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="SecondLocalScriptSecondLastName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Second Last Name in Additional Local Script.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="NameDetails" type="NameDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Name Details. Super type entity allows to capture the Person Name Information. It is possible that a person is associated with multiple names. Usually this is captured with Name Type Information e.g. Legal Name, Preferred Name etc. Each type will allow to capture different component of names e.g. Prefix, Suffix, First Name, Last Name etc.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="DisabilityDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Disability Details. Super type entity to hold the Disability Details for Persons. There can be multiple records associated with a person depending on the details available around associated disabilities.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="DisabilityIdentifier" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Disability Identifier.  Examples of the values to be stored in Workday are 'Mobility_Impairment_USA', 'Learning_Impairment_USA' etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DisabilityStatusDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Disability Status Date for the associated Disability for the associated Person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DisabilityKnownDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Date when the employer first learnt about the disability of the Person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DisabilityEndDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Disability End Date. This is the date through which the person is considered disabled. For some countries, through which, the certification for the current level of disability is effective.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DisabilityGradeCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Disability Grade Code. Identifies the level of disability of the person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DisabilityDegreePercentage" maxOccurs="1" minOccurs="0" type="xs:float">
         	<xs:annotation>
         		<xs:documentation>
         			Disability Degree Percentage. Percentage identifying person's level of disability as of the disability date.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DisabilityRemainingCapacityPercentage" maxOccurs="1" minOccurs="0" type="xs:float">
         	<xs:annotation>
         		<xs:documentation>
         			Remaining Capacity Percentage. This is the percentage that the person may work as per labor physician or other authority.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DisabilityCertificationAuthorityName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Disability Certification Authority Name. Name of the person or agency that certified the disability.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DisabilityCertifiedPlaceName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Location Name where the person or agency certified the disability.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DisabilityCertificationIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Disability Certification ID. This is the ID provided to person by the authority, if any.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DisabilityCertificationBasisReferenceCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Identifies the reason based on which person qualified for the Disability Certification
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DisabilitySeverityRecognitionDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			The date on which person's disability was recognized as severe.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DisabilityFTETowardData" maxOccurs="1" minOccurs="0" type="xs:float">
         	<xs:annotation>
         		<xs:documentation>
         			The FTE that counts towards the employer's quota for hiring the disabled person.The values would always be between 0 and 1.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DisabilityWorkRestrictionsDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Details of restrictions at work for a person due to disability.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DisabilityAccomodationsRequestedDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Description of any accomodations requested by the person. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DisabilityAccomodationsProvidedDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Description of the accomodations provided to person by employer or care provider.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DisabilityRehabilitationRequestedDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Description of any rehabilitation requested by the person. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DisabilityRehabilitationProvidedDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Description of the rehabilitation provided to person by employer or care provider.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DisabilityNotes" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Additional information on the disability of the person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DisabilityStatusReferenceCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Reference Code for the Disability Status of the person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="DisabilityDetails" type="DisabilityDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Disability Details. Super type entity to hold the Disability Details for Persons. There can be multiple records associated with a person depending on the details available around associated disabilities.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="PersonIdentificationDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Person Identification Details. Super type entity captures certain identification documents related with Persons. Some examples of such identification documents are National IDs, Government IDs, Visas, Passports, Driving Licenses etc.
            There can be multiple types of identifications associated with a person and even within a particular type, there can be again different identifications associated with a Person. E.g. National IDs might be of multiple types and all might be relevant to be captured here.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="IdentificationDocumentIdentifier" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Identification Document Identifier. This is the ID for the associated identification document for Person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="IdentificationDocumentTypeCode" maxOccurs="1" minOccurs="1" type="xs:string" erds:obfuscationRequired="true" erds:obfuscationType="Scrambling" erds:scramblingFactor="26">
         	<xs:annotation>
         		<xs:documentation>
         			Identification Document Type Code. Identifies the type of Identification Document being referred e.g. Nationality ID, Government ID, Passport ID, Visa ID, License ID etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="IdentificationDocumentSubTypeCode" maxOccurs="1" minOccurs="0" type="xs:string" erds:obfuscationRequired="true" erds:obfuscationType="Scrambling" erds:scramblingFactor="26">
         	<xs:annotation>
         		<xs:documentation>
         			Identification Document Sub Type Code. Identifies the type within a specific Identification Document category e.g. if Identification Document Type is referring to Nationality ID then this field will identify the type of Nationality ID. Similarly for Government ID, Passport, Visa, License etc., it will identify the type of document within these categories.
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="IdentificationDocumentPrimaryFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Flag to identify the Primary Identification Document for a given Country for a Worker. This is only applicable for identification documents of the type National ID. This was well defined in the old data source, i.e. PeopleSoft. However, this is no longer defined in Workday. In this case, trace maps the first encountered National Id as the primary one.
                  
                  Since this is not defined in the Workday system, this would be considered as a technical debt.
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="IdentificationDocumentCountryCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Identification Document Country Code. Identifies the country which issued the respective Person Identification Document.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="IdentificationDocumentCountryRegionCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Identification Document Country Region. Identifies the region as ISO 3166 2 Character Code which issued the Person Identification. This is applicable for Licenses only.
                  Please refer to https://en.wikipedia.org/wiki/ISO_3166-2 for details.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="IdentificationDocumentIssuedDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Identification Document Issued Date. Represents the date the corresponding ID was issued.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="IdentificationDocumentExpirationDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Identification Document Expiration Date. Represents the expiration date of the corresponding Person Identification.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="IdentificationDocumentSeriesText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Identification Document Series. Applicable for National Identification Details.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="IdentificationDocumentIssuingAgencyName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Identification Document Issuing Agency Name. Represents the issuing agency for the Person Identification. Applicable for Nationality ID Details.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="IdentificationDocumentIssuingAuthorityID" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Identification Document Issuing Authority Identifier. Identifies the authority which issued the Identification Document. Applicable for Licenses only.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="IdentificationDocumentClassText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Identification Document Class. Only applicable for Licenses.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="IdentificationDocumentVerifiedBy" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Universal Identifier for the Worker. Identifies the Worker who verified the Identification details.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="IdentificationDocumentVerificationDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Identification Document Verification Date. Represents the date when the identification document was verified.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="PersonIdentificationDetails" type="PersonIdentificationDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Person Identification Details. Super type entity captures certain identification documents related with Persons. Some examples of such identification documents are National IDs, Government IDs, Visas, Passports, Driving Licenses etc.
            There can be multiple types of identifications associated with a person and even within a particular type, there can be again different identifications associated with a Person. E.g. National IDs might be of multiple types and all might be relevant to be captured here.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="AddressDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Address Details. Super type entity defining the attributes to capture Address Details. It is linked with Person and there can be more than one Addresses associated with a Person.This would also capture Work Address Details for CWR. While address details also allow to capture business or work address however the best place to get this information is through the location associated with the Job. This information is only available in case of Workday and not with the historical records where data was sourced from dbPeople+.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="AddressIdentifier" maxOccurs="1" minOccurs="0" type="xs:string" erds:obfuscationRequired="true" erds:obfuscationType="Scrambling" erds:scramblingFactor="8">
         	<xs:annotation>
         		<xs:documentation>
         			Address Identifier. Uniquely identifies an address.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressTypeCode" maxOccurs="1" minOccurs="1" type="xs:string" erds:obfuscationRequired="true" erds:obfuscationType="Scrambling" erds:scramblingFactor="47">
         	<xs:annotation>
         		<xs:documentation>
         			Address Type Code. Identifies the type of address this record represents. Address details also allow to capture business or work address however the best place to get this information is through the location associated with the Job. This information is only available in case of Workday and not with the historical records where data was sourced from dbPeople+.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressEffectiveDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			Identifies the effective date on which the address was set for the worker. In PeopleSoft, even when there are no changes in the address details there may be additional entries for the same address.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine1Text" maxOccurs="1" minOccurs="0" type="xs:string" erds:obfuscationRequired="true" erds:obfuscationType="Scrambling" erds:scramblingFactor="101">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 1. Part of the Address Line Details comprising of various parts of the address e.g. Street Name, Apartment Name etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine1DescriptionText" maxOccurs="1" minOccurs="0" type="xs:string" erds:obfuscationRequired="true" erds:obfuscationType="Scrambling" erds:scramblingFactor="101">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 1 Description. Workday has label override for each address line which provides detailed information about that address line. Like Address Line 1 for Italy is street or place name whereas it is district for Hungary. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine1LocalText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 1 Local Text. Part of the Address Line Details in local script comprising of various parts of the address e.g. Street Name, Apartment Name etc.
                  e.g. Street Name - Thai
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="Address1LocalDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address 1 Local Description. It gives additional detailed information about Address Line 1 Local Text.
                  e.g. In case of Japan, this field would contain 'Address Line 1 - Kanji' where as for Israel it would contain 'Street - Hebrew'.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine2Text" maxOccurs="1" minOccurs="0" type="xs:string" erds:obfuscationRequired="true" erds:obfuscationType="Scrambling" erds:scramblingFactor="38">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 2. Part of the Address Line Details comprising of various parts of the address e.g. Street Name, Apartment Name etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine2DescriptionText" maxOccurs="1" minOccurs="0" type="xs:string" erds:obfuscationRequired="true" erds:obfuscationType="Scrambling" erds:scramblingFactor="101">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 2 Description. Workday has label override for each address line which provides detailed information about that address line. Like Address Line 2 is floor for Argentina whereas it is additional address for Italy.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine2LocalText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 2 Local Text. Part of the Address Line Details in local script comprising of various parts of the address e.g. Street Name, Apartment Name etc.
                  e.g. Other Address (PO Box, etc.) - Thai
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="Address2LocalDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address 2 Local Description. It gives additional detailed information about Address Line 2 Local Text.
                  e.g.  for Greece this would contain 'Address Line 2 - Greek' whereas for Russian Federation it will have value 'Additional Address - Russian'
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine3Text" maxOccurs="1" minOccurs="0" type="xs:string" erds:obfuscationRequired="true" erds:obfuscationType="Scrambling" erds:scramblingFactor="45">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 3. Part of the Address Line Details comprising of various parts of the address e.g. Street Name, Apartment Name etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine3DescriptionText" maxOccurs="1" minOccurs="0" type="xs:string" erds:obfuscationRequired="true" erds:obfuscationType="Scrambling" erds:scramblingFactor="101">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 3 Description. Workday has label override for each address line which provides detailed information about that address line. Like Address Line 3 is house number for Singapore whereas it is street or place type for Italy.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine3LocalText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 3 Local Text. Part of the Address Line Details in local script comprising of various parts of the address e.g. Street Name, Apartment Name etc.
                  e.g. Building - Thai
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="Address3LocalDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address 3 Local Description. It gives additional detailed information about Address Line 3 Local Text.
                  e.g.  for Saudi Arabia it will have value 'Address Line 3 - Arabic' whereas for Thailand it would have 'Building - Thai'
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine4Text" maxOccurs="1" minOccurs="0" type="xs:string" erds:obfuscationRequired="true" erds:obfuscationType="Scrambling" erds:scramblingFactor="62">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 4. Part of the Address Line Details comprising of various parts of the address e.g. Street Name, Apartment Name etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine4DescriptionText" maxOccurs="1" minOccurs="0" type="xs:string" erds:obfuscationRequired="true" erds:obfuscationType="Scrambling" erds:scramblingFactor="62">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 4 Description. Workday has label override for each address line which provides detailed information about that address line. Like Address Line 4 is house number for Argentina whereas it is street number for Italy.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine4LocalText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 4 Local Text. Part of the Address Line Details in local script comprising of various parts of the address e.g. Street Name, Apartment Name etc.
                  e.g. Unit - Thai
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="Address4LocalDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address 4 Local Description. It gives additional detailed information about Address Line 4 Local Text.
                  e.g. for Japan it would have value Address Line 4 - Furigana whereas for Ukraine it would be 'Apartment - Cyrillic'
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine5Text" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 5. Part of the Address Line Details comprising of various parts of the address e.g. Street Name, Apartment Name etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine5DescriptionText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 5 Description. Workday has label override for each address line which provides detailed information about that address line. Like Address Line 5 is house number for Spain whereas it is floor number for Singapore.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine5LocalText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 5 Local Text. Part of the Address Line Details in local script comprising of various parts of the address e.g. Street Name, Apartment Name etc.
                  e.g. Floor - Thai
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="Address5LocalDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address 5 Local Description. It gives additional detailed information about Address Line 5 Local Text.
                  e.g. for Japan it would have value 'Address Line 2 - Kanji' whereas for Russian Federation it would be 'Apartment - Russian'
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine6Text" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 6. Part of the Address Line Details comprising of various parts of the address e.g. Street Name, Apartment Name etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine6DescriptionText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 6 Description. Workday has label override for each address line which provides detailed information about that address line. Like Address Line 6 is house number extension for Spain whereas it is stairway number for Hungary.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine6LocalText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 6 Local Text. Part of the Address Line Details in local script comprising of various parts of the address e.g. Street Name, Apartment Name etc.
                  e.g.. Village (Muban) - Thai
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="Address6LocalDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address 6 Local Description. It gives additional detailed information about Address Line 6 Local Text.
                  e.g. for Japan it would be 'Address Line 2 - Furigana' whereas for Thailand it would be 'Village (Muban) - Thai'
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine7Text" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 7. Part of the Address Line Details comprising of various parts of the address e.g. Street Name, Apartment Name etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine7DescriptionText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 7 Description. Workday has label override for each address line which provides detailed information about that address line. Like Address Line 7 is house number for Thailand whereas it is floor number for Hungary.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine7LocalText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 7 Local Text. Part of the Address Line Details in local script comprising of various parts of the address e.g. Street Name, Apartment Name etc.
                  e.g. House Number - Thai
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="Address7LocalDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address 7 Local Description. It gives additional detailed information about Address Line 7 Local Text.
                  e.g. for Thailand it is 'House Number - Thai'
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine8Text" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 8. Part of the Address Line Details comprising of various parts of the address e.g. Street Name, Apartment Name etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine8DescriptionText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 8 Description. Workday has label override for each address line which provides detailed information about that address line. Like Address Line 8 is floor for Spain  whereas it is door number for Hungary.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine8LocalText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 8 Local Text. Part of the Address Line Details in local script comprising of various parts of the address e.g. Street Name, Apartment Name etc.
                  e.g. Moo - Thai
                  
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="Address8LocalDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address 8 Local Description. It gives additional detailed information about Address Line 8 Local Text.
                  e.g. for Thailand it would be 'Moo - Thai'
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine9Text" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 8. Part of the Address Line Details comprising of various parts of the address e.g. Floor, Door Number, House Number etc.. This was not available in PeopleSoft however it is available in Workday.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine9DescriptionText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 9  Description. Workday has label override for each address line which provides detailed information about that address line. Like Address Line 9  is door number for Spain whereas it is other address for Hungary.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressLine9LocalText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Line 9 Local Text. Part of the Address Line Details in local script comprising of various parts of the address e.g. Street Name, Apartment Name etc.
                  e.g. Alley/Lane - Thai
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="Address9LocalDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address 9 Local Description. It gives additional detailed information about Address Line 9 Local Text.
                  e.g. for Thailand it would be 'Alley/Lane - Thai'
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressNumber1Code" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Number 1 Code is part of the address component and is populated only for specific countries.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="Addressnumber2Code" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Number 2 Code is part of the address component and is populated only for specific countries.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MunicipalityName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Name of the Municipality.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CityName" maxOccurs="1" minOccurs="0" type="xs:string" erds:obfuscationRequired="true" erds:obfuscationType="Scrambling" erds:scramblingFactor="50">
         	<xs:annotation>
         		<xs:documentation>
         			City Name.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="StateCode" maxOccurs="1" minOccurs="0" type="xs:string" erds:obfuscationRequired="true" erds:obfuscationType="Scrambling" erds:scramblingFactor="50">
         	<xs:annotation>
         		<xs:documentation>
         			State Code.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="StateDescriptionText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Identifies the description of the state. Extracted from the Country Region Descriptor
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CityLocalName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			City Local Name- Name of the city in local language
                  E.g. City Local Name is City - Cyrillic for Bosnia and Herzegovina where as it is City - Arabic for Algeria
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CountyName" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			County Name.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CitySubdivision1Text" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			City Subdivision 1 Text. This field contains the part of the city subdivision details or Submunicipality details within an address.
                  e.g. District, Neighborhood.
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CitySubdivision1Description" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			City Subdivision 1 Description. This field denotes which part of the address 'City Subdivision 1 Text' contains for each country.
                  e.g. In case of Egypt this field contains 'District' where as for Saudi Arabia it is 'Neighborhood'.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CitySubdivision1LocalText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			City Subdivision 1 Local Text. This field contains the part of the city subdivision details or submunicipality details within an address in local language
                  e.g. District in Arabic for Egypt
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CitySubdivision1LocalDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			City Subdivision 1 Local Description.This field denotes which part of the address 'City Subdivision 1 Local Text' contains for each country.
                  e.g. it is 'Metropolitan District - Chinese' for China whereas it is 'Neighborhood - Arabic' for Saudi Arabia
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CitySubdivision2Text" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			City Subdivision or Submunicipality 2 Text. Part of the City Subdivision details or Submunicipality details within an address.
                  e.g Village or Subdistrict
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CitySubdivision2Description" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			City Subdivision 2 Description. This field denotes which part of the address 'City Subdivision 2 Text' contains for each country.
                  e.g. In case of Russia it is 'Settlement' where as for Indonesia it is 'Village or Subdistrict'.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CitySubdivision2LocalText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			City Subdivision 2 Local Text. This field contains the part of the city subdivision or submunicipality details within an address in local language.
                  E.g.City Subdivision 2 Local Text  is 'Settlement - Russian' for Russia 
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CitySubdivision2LocalDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			City Subdivision 2 Local Description.This field denotes which part of the address 'City Subdivision 2 Local Text' contains for each country.
                  e.g. for Russian Federation it would be 'Settlement - Russian'
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CountryRegionCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Country region. Identifies the region through ISO 3166 2 Character Code for regions. Region represents County, State etc. depending on the Country.
                  Please refer to https://en.wikipedia.org/wiki/ISO_3166-2 for details.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RegionSubdivision1Text" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Region Subdivision 1 Text. This field contains part of the Region Subdivision details within an address.
                  e.g. District, Post Office
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RegionSubdivision1Description" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Region Subdivision 1 Description Text. This field denotes which part of the address 'Region Subdivision 1 Text' contains for each country.
                  e.g. In case of Argentia this field contains 'Post Office' where as for Belarus it contains 'District'.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RegionSubdivision1LocalText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Region Subdivision 1 Local Text. This field contains the part of the Subregion or Region Subdivision details within an address in local language
                  e.g. In case of Thailand this field contains 'District (Amphoe or Khet) - Thai'
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RegionSubdivision1LocalDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Region Subdivision 1 Local Description. This field denotes which part of the address 'Region Subdivision 1 Local Text' contains for each country.
                  e.g it is 'District - Cyrillic' for Ukraine whereas it is 'District (Amphoe or Khet) - Thai'  for Thailand
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RegionSubdivision2Text" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Region Subdivision 2 Text. This field contains part of the Region Subdivision details within an address.
                  e.g. Municipality, District, Post Office.
                  
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RegionSubdivision2Description" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Region Subdivision 2 Description. This field denotes which part of the address 'Region Subdivision 2 Text' contains for each country.
                  e.g. In case of Poland this field contains 'Municipality' where as for Thailand it is 'Subdistrict (Tambon or Khwaeng)'
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RegionSubdivision2LocalText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Region Subdivision 2 Local Text. This field contains the part of the Subregion or Region Subdivision details within an address in local language.
                  e.g. In case of Thailand this field contains 'District (Amphoe or Khet) - Thai'
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="RegionSubdivision2LocalDescription" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Region Subdivision 2 Local Description. This field denotes which part of the address 'Region Subdivision 2 Local Text' contains for each country.
                  e.g it is 'District - Cyrillic' for Ukraine whereas it is 'District (Amphoe or Khet) - Thai'  for Thailand
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PostalCode" maxOccurs="1" minOccurs="0" type="xs:string" erds:obfuscationRequired="true" erds:obfuscationType="Scrambling" erds:scramblingFactor="50">
         	<xs:annotation>
         		<xs:documentation>
         			Postal Code.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CountryCode" maxOccurs="1" minOccurs="0" type="xs:string" erds:obfuscationRequired="true" erds:obfuscationType="Scrambling" erds:scramblingFactor="50">
         	<xs:annotation>
         		<xs:documentation>
         			Country Code. ISO 3 Char Country Code to be used.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AddressFormatTypeCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Address Format Type. Identifies the format for the Formatted Address field.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="FormattedAddressText" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Formatted Address. Formatted address in the format specified for the country.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="DefaultedBusinessSiteAddressFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Defaulted Business Site Address Flag.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PublicAddressFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Public Address Flag. Identifies if the address is public.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PrimaryAddressFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Primary Address Flag. Identifies if the address is a primary address.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="AddressDetails" type="AddressDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Address Details. Super type entity defining the attributes to capture Address Details. It is linked with Person and there can be more than one Addresses associated with a Person.This would also capture Work Address Details for CWR. While address details also allow to capture business or work address however the best place to get this information is through the location associated with the Job. This information is only available in case of Workday and not with the historical records where data was sourced from dbPeople+.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="PhoneContactDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Phone Contact Details. Super type entity defining the attributes to capture Phone Details. As Phones will be for Persons, it is linked with Person and there can be more than one Phone Details associated with a Person.
            This also captures Work Phone Contact details for CWR. 
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="PhoneUsageCode" maxOccurs="1" minOccurs="1" type="xs:string" erds:obfuscationRequired="true" erds:obfuscationType="Scrambling" erds:scramblingFactor="11">
         	<xs:annotation>
         		<xs:documentation>
         			Phone Usag Code. Identifies the usage for phone as for each worker, there can be multiple phone records present. Examples are Home, Work etc.
                  
                  There are many possible values listed for this attribute; however the key ones to be used are BUSN and HOME.
                  
                  Majority of the values are covered within PeopleSoft but there won't be much data available always. From both, PeopleSoft and Workday perspectives, BUSN and HOME are the key types to be used. In case of Workday, there are only two types available, BUSN and HOME; however each type can have multiple entries but only one of them will be Primary at any point in time. Hence the values BUSN_NON_PRIMARY and HOME_NON_PRIMARY have been added. Other values will not be available in Workday.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="CountryCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Country Code. ISO 3 Char Country Code to be used. At times, country code is used to determine the Country Phone Code as sometimes same code is used by multiple countries.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="InternationalPhoneCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			International Phone Code Number. This is the prefix for international code.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="AreaCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Area Code. Code specific to area within the country.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PhoneNumber" maxOccurs="1" minOccurs="0" type="xs:string" erds:obfuscationRequired="true" erds:obfuscationType="Scrambling" erds:scramblingFactor="84">
         	<xs:annotation>
         		<xs:documentation>
         			Phone Number.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="Extension" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Extension.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PhoneDeviceTypeCode" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Phone Device Type. Identifies the type of phone device e.g. Landline, Mobile etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="FormattedPhoneNumber" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Formatted Phone Number.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PublicContactFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Public Contact Flag. Identifies if the contact is public.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PrimaryContactFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Primary Contact Flag. Identifies the primary contact for each type of Contact.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="PhoneContactDetails" type="PhoneContactDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Phone Contact Details. Super type entity defining the attributes to capture Phone Details. As Phones will be for Persons, it is linked with Person and there can be more than one Phone Details associated with a Person.
            This also captures Work Phone Contact details for CWR. 
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="EmailContactDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Email Contact Details. Super type entity defining the attributes to capture Email Address Details. As Emails will be for Persons, it is linked with Person and there can be more than one Emails associated with a Person.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="EmailUsageCode" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Email Usage Code. Identifies the various types of usage for email as for each worker, there can be multiple email records present. Examples are Home, Work etc.
                  
                  Majority of the values are covered within PeopleSoft but there won't be much data available always. From both, PeopleSoft and Workday perspectives, BUSN and HOME are the key types to be used. In case of Workday, there are only two types available, BUSN and HOME; however each type can have multiple entries but only one of them will be Primary at any point in time. Hence the values BUSN_NON_PRIMARY and HOME_NON_PRIMARY have been added. Other values will not be available in Workday.
                  
                  HRSERVICE-19272: BUSN or work email address was sourced from LDAP or WD. But, with this change, the work email address would be sourced from dbAG. This would be the primary work email address.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="EmailAddress" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Email Address.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="EmailComment" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Email Comment.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PublicContactFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Public Contact Flag. Identifies if the contact is public.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PrimaryContactFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Primary Contact Flag. Identifies the primary contact for each type of Contact.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="EmailContactDetails" type="EmailContactDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Email Contact Details. Super type entity defining the attributes to capture Email Address Details. As Emails will be for Persons, it is linked with Person and there can be more than one Emails associated with a Person.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="InstantMessengerContactDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Instant Messenger Contact Details. Super type entity defining the attributes to capture Instant Messenger Address Details. As Instant Messenger Contacts will be for Persons, it is linked with Person and there can be more than one Instant Messenger Contacts associated with a Person.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="InstantMessengerUsageCode" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Instant Messenger Usage Code. Identifies the various types of usage for instant messenger as for each worker, there can be multiple instant messenger records present.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="InstantMessengerAddress" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Instant Messenger Address.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="InstantMessengerComment" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Instant Messenger Comment.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PublicContactFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Public Contact Flag. Identifies if the contact is public.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PrimaryContactFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Primary Contact Flag. Identifies the primary contact for each type of Contact.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="InstantMessengerContactDetails" type="InstantMessengerContactDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Instant Messenger Contact Details. Super type entity defining the attributes to capture Instant Messenger Address Details. As Instant Messenger Contacts will be for Persons, it is linked with Person and there can be more than one Instant Messenger Contacts associated with a Person.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="WebAddressContactDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Web Address Contact Details. Super type entity defining the attributes to capture Web Address Details. As Web Addresses will be for Persons, it is linked with Person and there can be more than one Web Addresses associated with a Person.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="WebAddressUsageCode" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Web address Usage Code. Identifies the various types of usage for web address as for each worker, there can be multiple web address records present.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="WebAddress" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Web Address.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="WebAddressComment" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			Web Address Comment.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PublicContactFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Public Contact Flag. Identifies if the contact is public.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="PrimaryContactFlag" maxOccurs="1" minOccurs="0" type="xs:boolean">
         	<xs:annotation>
         		<xs:documentation>
         			Primary Contact Flag. Identifies the primary contact for each type of Contact.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="WebAddressContactDetails" type="WebAddressContactDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Web Address Contact Details. Super type entity defining the attributes to capture Web Address Details. As Web Addresses will be for Persons, it is linked with Person and there can be more than one Web Addresses associated with a Person.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
   <xs:complexType name="MilitaryServiceDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Military Service Details. Super type entity holds the military service details of the persons.  Military Status can't be assigned a to a worker when their Hire Date is before the Effective Date of the Location.
   		</xs:documentation>
   	</xs:annotation>
      <xs:sequence>
         <xs:element name="MilitaryStatusIdentifier" maxOccurs="1" minOccurs="1" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			This is the Military Status Identifier of the person e.g. Reserve_USA, Inactive_USA etc.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MilitaryStatusBeginDate" maxOccurs="1" minOccurs="0" type="xs:date">
         	<xs:annotation>
         		<xs:documentation>
         			This is the military service beginning date of the person.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MilitaryServiceTypeIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			This is the service type of the military service of the person. The Military Service Type specified is not valid for Country from Military Status. 
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MilitaryRankIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			This is the Military rank for military service type. This Military Rank specified is not valid for Military Service Type or Country from Military Status.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
         <xs:element name="MilitaryServiceIdentifier" maxOccurs="1" minOccurs="0" type="xs:string">
         	<xs:annotation>
         		<xs:documentation>
         			This is the Reference ID for the Military Service.
         		</xs:documentation>
         	</xs:annotation>
         </xs:element>
      </xs:sequence>   
   </xs:complexType>
   <xs:element name="MilitaryServiceDetails" type="MilitaryServiceDetails">
   	<xs:annotation>
   		<xs:documentation>
   			Military Service Details. Super type entity holds the military service details of the persons.  Military Status can't be assigned a to a worker when their Hire Date is before the Effective Date of the Location.
   		</xs:documentation>
   	</xs:annotation>
   </xs:element>
</xs:schema>